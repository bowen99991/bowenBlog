import { _ as _export_sfc, o as openBlock, c as createElementBlock, d as createStaticVNode } from "./app-bd53c79f.js";
const _imports_0 = "/bowenBlog/assets/image-20231209143913352-04af6b41.png";
const _imports_1 = "/bowenBlog/assets/image-20231209150722217-639ac523.png";
const _imports_2 = "/bowenBlog/assets/image-20231209143458761-81eb8047.png";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<hr><h2 id="后台管理系统" tabindex="-1"><a class="header-anchor" href="#后台管理系统" aria-hidden="true">#</a> 后台管理系统</h2><p>基于 Vue-admin-element 二次开发</p><h2 id="一-项目介绍" tabindex="-1"><a class="header-anchor" href="#一-项目介绍" aria-hidden="true">#</a> 一, 项目介绍</h2><hr><h3 id="_1-项目源码及接口" tabindex="-1"><a class="header-anchor" href="#_1-项目源码及接口" aria-hidden="true">#</a> 1, 项目源码及接口</h3><p>完整gitee项目代码地址: https://gitee.com/shuiruohanyu/heimahr/tree/master</p><p>项目接口文档地址: https://www.apifox.cn/apidoc/shared-e2644216-aad4-4529-a630-78f0631ab076/api-49562537</p><p>项目演示地址: https://heimahr.itheima.net/ 接口实际地址: 示例-https://heimahr.itheima.net/api/sys/login</p><p>项目演示备份地址: https://heimahr-t.itheima.net/</p><p>备份接口实际地址: 示例-https://heimahr-t.itheima.net/prod-api/sys/login</p><p>项目笔记地址(语雀-在线，线下笔记已经在资源中): https://www.yuque.com/shuiruohanyu/agxcua</p><p>登录密码：网络安全需要，密码以由原来的123456 变更为hm#qd@23! ， 管理员不可修改密码，新建用户的密码仍为123456</p><h3 id="_2-拉取项目基础代码" tabindex="-1"><a class="header-anchor" href="#_2-拉取项目基础代码" aria-hidden="true">#</a> 2. 拉取项目基础代码</h3><ul><li>拉取命令</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">git</span> clone  https://github.com/PanJiaChen/vue-admin-template.git  heimahr\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>升级core-js版本到<strong>3.25.5</strong></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">npm</span> i core-js@3.25.5 <span class="token comment"># npm</span>\n$ <span class="token function">yarn</span> <span class="token function">add</span> core-js@3.25.5 <span class="token comment"># yarn</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>安装完整依赖</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">npm</span> i <span class="token comment"># npm</span>\n$ <span class="token function">yarn</span>  <span class="token comment"># yarn</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>启动命令在package.json中查看</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">yarn</span> dev\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>需要检查VsCode本身的插件ESLint 和 Vetur</li></ul><h3 id="_3-项目目录和入口文件介绍" tabindex="-1"><a class="header-anchor" href="#_3-项目目录和入口文件介绍" aria-hidden="true">#</a> 3. 项目目录和入口文件介绍</h3><ul><li>项目目录</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>├── src                        <span class="token comment"># 源代码目录</span>\n│   ├── api                    <span class="token comment"># 所有请求</span>\n│   ├── assets                 <span class="token comment"># 主题 字体等静态资源</span>\n│   ├── components             <span class="token comment"># 全局公用组件</span>\n│   ├── icons                  <span class="token comment"># 项目所有 svg icons</span>\n│   ├── layout                 <span class="token comment"># 全局 layout</span>\n│   ├── router                 <span class="token comment"># 路由</span>\n│   ├── store                  <span class="token comment"># 全局 store管理</span>\n│   ├── styles                 <span class="token comment"># 全局样式</span>\n│   ├── utils                  <span class="token comment"># 全局公用方法</span>\n│   ├── views                  <span class="token comment"># views 所有页面</span>\n│   ├── App.vue                <span class="token comment"># 入口页面</span>\n│   ├── main.js                <span class="token comment"># 入口文件 加载组件 初始化等</span>\n│   └── permission.js          <span class="token comment"># 权限管理</span>\n│   └── settings.js            <span class="token comment"># 配置文件</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>入口文件</li></ul><p><strong>该项目的功能特点</strong></p><p><img src="' + _imports_0 + '" alt="image-20231209143913352"></p><h2 id="二-项目开发" tabindex="-1"><a class="header-anchor" href="#二-项目开发" aria-hidden="true">#</a> 二, 项目开发</h2><hr><h3 id="_1-登录" tabindex="-1"><a class="header-anchor" href="#_1-登录" aria-hidden="true">#</a> 1，登录</h3><p>axios 封装</p><p><img src="' + _imports_1 + '" alt="image-20231209150722217"></p><p>登录流程图</p><p><img src="' + _imports_2 + '" alt="image-20231209143458761"></p>', 36);
const _hoisted_37 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache) {
  return openBlock(), createElementBlock("div", null, _hoisted_37);
}
const renliziyuanhoutaiguanlixitong_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "renliziyuanhoutaiguanlixitong.html.vue"]]);
export {
  renliziyuanhoutaiguanlixitong_html as default
};
