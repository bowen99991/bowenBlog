import { _ as _export_sfc, r as resolveComponent, o as openBlock, c as createElementBlock, a as createBaseVNode, b as createTextVNode, e as createVNode, d as createStaticVNode } from "./app-ba0e334f.js";
const _imports_0 = "/bowenBlog/assets/image-20231107190813439-0f09cd8a.png";
const _imports_1 = "/bowenBlog/assets/image-20231107190829549-16e65511.png";
const _imports_2 = "/bowenBlog/assets/image-20231107190922329-40ac5170.png";
const _imports_3 = "/bowenBlog/assets/image-20231107191047318-f99d6984.png";
const _imports_4 = "/bowenBlog/assets/image-20231107191133982-b6320572.png";
const _imports_5 = "/bowenBlog/assets/image-20231107191358350-1b0e0388.png";
const _imports_6 = "/bowenBlog/assets/image-20231107192853212-d2a46bcd.png";
const _imports_7 = "/bowenBlog/assets/image-20231107192921548-6357f7b1.png";
const _imports_8 = "/bowenBlog/assets/image-20231107193118362-896ba0e4.png";
const _imports_9 = "/bowenBlog/assets/image-20231107193128082-facc7d44.png";
const _imports_10 = "/bowenBlog/assets/image-20231107194051590-08ebcd09.png";
const _imports_11 = "/bowenBlog/assets/image-20231107194103639-3d3ded42.png";
const _imports_12 = "/bowenBlog/assets/image-20231107194132716-f8156210.png";
const _imports_13 = "/bowenBlog/assets/image-20231107194204271-4b23786c.png";
const _imports_14 = "/bowenBlog/assets/image-20231107194335199-8ffd3bbc.png";
const _imports_15 = "/bowenBlog/assets/image-20231108201630101-3c339afe.png";
const _imports_16 = "/bowenBlog/assets/image-20231108201721507-8e19749e.png";
const _imports_17 = "/bowenBlog/assets/image-20231108201820165-badd1798.png";
const _imports_18 = "/bowenBlog/assets/image-20231108201830671-6f44b437.png";
const _imports_19 = "/bowenBlog/assets/image-20231108202021412-022e8a15.png";
const _imports_20 = "/bowenBlog/assets/image-20231108202046442-fcac8ee9.png";
const _imports_21 = "/bowenBlog/assets/image-20231108202203957-d96a50c3.png";
const _imports_22 = "/bowenBlog/assets/image-20231108202215579-de6000d8.png";
const _imports_23 = "/bowenBlog/assets/image-20231108142241023-dd2f46c3.png";
const _imports_24 = "/bowenBlog/assets/image-20231108142531556-08c2b9d0.png";
const _imports_25 = "/bowenBlog/assets/image-20231108142646281-3c402abe.png";
const _imports_26 = "/bowenBlog/assets/image-20231108153917434-0cc13e0a.png";
const _imports_27 = "/bowenBlog/assets/image-20231108204528035-40ca9740.png";
const _imports_28 = "/bowenBlog/assets/image-20231108204923527-f5c25dca.png";
const _imports_29 = "/bowenBlog/assets/image-20231108205122161-655c19e3.png";
const _imports_30 = "/bowenBlog/assets/image-20231108210007669-0837a590.png";
const _imports_31 = "/bowenBlog/assets/image-20231108210056057-389fbf23.png";
const _imports_32 = "/bowenBlog/assets/image-20231108210232185-1885d8b6.png";
const _imports_33 = "/bowenBlog/assets/image-20231108210304847-657103f1.png";
const _imports_34 = "/bowenBlog/assets/image-20231108211811774-ceaece24.png";
const _imports_35 = "/bowenBlog/assets/image-20231108211821794-fed9249f.png";
const _imports_36 = "/bowenBlog/assets/image-20231108212215938-2c40e96e.png";
const _imports_37 = "/bowenBlog/assets/image-20231108212414548-3a050b83.png";
const _imports_38 = "/bowenBlog/assets/image-20231108212428472-d01e0eba.png";
const _imports_39 = "/bowenBlog/assets/image-20231108212443282-b3f349b9.png";
const _imports_40 = "/bowenBlog/assets/image-20231108212613686-f0b45d7a.png";
const _imports_41 = "/bowenBlog/assets/image-20231108212854519-02bd4adf.png";
const _imports_42 = "/bowenBlog/assets/image-20231108212913551-ad45229a.png";
const _imports_43 = "/bowenBlog/assets/image-20231108212929143-56176dd2.png";
const _imports_44 = "/bowenBlog/assets/image-20231108212949651-81165e19.png";
const _imports_45 = "/bowenBlog/assets/image-20231108213005019-ec1c962c.png";
const _imports_46 = "/bowenBlog/assets/image-20231108215447036-da2631c4.png";
const _imports_47 = "/bowenBlog/assets/image-20231108215730305-a320f12e.png";
const _imports_48 = "/bowenBlog/assets/image-20231108220013005-9bdfbbd2.png";
const _imports_49 = "/bowenBlog/assets/image-20231108220055361-3cedc2b7.png";
const _imports_50 = "/bowenBlog/assets/image-20231108220107287-8a2265c9.png";
const _imports_51 = "/bowenBlog/assets/image-20231108220119451-dbacc11f.png";
const _imports_52 = "/bowenBlog/assets/image-20231108220236709-4084538c.png";
const _imports_53 = "/bowenBlog/assets/image-20231108220251214-43251d5b.png";
const _imports_54 = "/bowenBlog/assets/image-20231108220322625-1e1e9e8d.png";
const _imports_55 = "/bowenBlog/assets/image-20231108220637779-c8164774.png";
const _imports_56 = "/bowenBlog/assets/image-20231108220801986-338c06ed.png";
const _imports_57 = "/bowenBlog/assets/image-20231108220816214-530bd88a.png";
const _imports_58 = "/bowenBlog/assets/image-20231108220829232-bd5cf707.png";
const _imports_59 = "/bowenBlog/assets/image-20231108220848878-5a015c8c.png";
const _imports_60 = "/bowenBlog/assets/image-20231108220919562-4001d5ec.png";
const _imports_61 = "/bowenBlog/assets/image-20231108220953328-66313ba9.png";
const _imports_62 = "/bowenBlog/assets/image-20231108221019760-93f86bcd.png";
const _imports_63 = "/bowenBlog/assets/image-20231108221042269-dc6d3fba.png";
const _imports_64 = "/bowenBlog/assets/image-20231108221115700-a39cb5e6.png";
const _imports_65 = "/bowenBlog/assets/image-20231108222636544-b9600894.png";
const _imports_66 = "/bowenBlog/assets/image-20231108222650091-83e62b8a.png";
const _imports_67 = "/bowenBlog/assets/image-20231108222726130-60109448.png";
const _imports_68 = "/bowenBlog/assets/image-20231108222739642-563431ad.png";
const _imports_69 = "/bowenBlog/assets/image-20231108222754546-39b1d912.png";
const _imports_70 = "/bowenBlog/assets/image-20231108222806506-9c25a6db.png";
const _imports_71 = "/bowenBlog/assets/image-20231108222816398-812334b8.png";
const _imports_72 = "/bowenBlog/assets/image-20231108222845175-d9e116f1.png";
const _imports_73 = "/bowenBlog/assets/image-20231108222902441-f6d4088a.png";
const _imports_74 = "/bowenBlog/assets/image-20231108222924116-f2e3f2af.png";
const _imports_75 = "/bowenBlog/assets/image-20231110202451012-5289ba89.png";
const _imports_76 = "/bowenBlog/assets/image-20231108222938560-49a49fb1.png";
const _imports_77 = "/bowenBlog/assets/image-20231108223025624-e145d412.png";
const _imports_78 = "/bowenBlog/assets/image-20231108223038506-7f15aaab.png";
const _imports_79 = "/bowenBlog/assets/image-20231108223046056-ddc9d65b.png";
const _imports_80 = "/bowenBlog/assets/image-20231108223058902-7b33353a.png";
const _imports_81 = "/bowenBlog/assets/image-20231108223115376-0e4ac54a.png";
const _imports_82 = "/bowenBlog/assets/image-20231108223139220-0fe2ac9b.png";
const _imports_83 = "/bowenBlog/assets/image-20231108223235536-84b387b9.png";
const _imports_84 = "/bowenBlog/assets/image-20231108223300876-498b0860.png";
const _imports_85 = "/bowenBlog/assets/image-20231108223403447-e161cd0d.png";
const _imports_86 = "/bowenBlog/assets/image-20231113141601967-c0b039d4.png";
const _imports_87 = "/bowenBlog/assets/image-20231113141716389-0e5ebbe5.png";
const _imports_88 = "/bowenBlog/assets/image-20231113141910959-483d8407.png";
const _imports_89 = "/bowenBlog/assets/image-20231113142255793-4edff140.png";
const _imports_90 = "/bowenBlog/assets/image-20231113142407600-16b38879.png";
const _imports_91 = "/bowenBlog/assets/image-20231113142446582-b2e1ed37.png";
const _imports_92 = "/bowenBlog/assets/image-20231113142621287-9a6f0aa3.png";
const _imports_93 = "/bowenBlog/assets/image-20231113142735731-b34e0688.png";
const _imports_94 = "/bowenBlog/assets/image-20231113223558321-78cc7fd4.png";
const _imports_95 = "/bowenBlog/assets/image-20231113223632000-1d7436ae.png";
const _imports_96 = "/bowenBlog/assets/image-20231113223645752-7bf893a9.png";
const _imports_97 = "/bowenBlog/assets/image-20231113223702878-00dc7129.png";
const _imports_98 = "/bowenBlog/assets/image-20231113223823002-0f62288c.png";
const _imports_99 = "/bowenBlog/assets/image-20231113223937551-9184fd81.png";
const _imports_100 = "/bowenBlog/assets/image-20231110220911638-588f32e6.png";
const _imports_101 = "/bowenBlog/assets/image-20231110220949484-ba722bb4.png";
const _imports_102 = "/bowenBlog/assets/image-20231110221047460-76e77162.png";
const _imports_103 = "/bowenBlog/assets/image-20231110221119299-b5357f00.png";
const _imports_104 = "/bowenBlog/assets/image-20231110221229620-e79de487.png";
const _imports_105 = "/bowenBlog/assets/image-20231110221241824-320d1a2e.png";
const _imports_106 = "/bowenBlog/assets/image-20231110221253470-43ddf0d9.png";
const _imports_107 = "/bowenBlog/assets/image-20231110221426955-7007ec96.png";
const _imports_108 = "/bowenBlog/assets/image-20231110221451507-9961b006.png";
const _imports_109 = "/bowenBlog/assets/image-20231110221503175-93be761e.png";
const _imports_110 = "/bowenBlog/assets/image-20231110221519138-4c5ab135.png";
const _imports_111 = "/bowenBlog/assets/image-20231110221640358-00014f57.png";
const _imports_112 = "/bowenBlog/assets/image-20231110221718661-ce354955.png";
const _imports_113 = "/bowenBlog/assets/image-20231110130406485-8081a894.png";
const _imports_114 = "/bowenBlog/assets/image-20231113225618201-3aefa839.png";
const _imports_115 = "/bowenBlog/assets/image-20231113230336491-6e5eb4d5.png";
const _imports_116 = "/bowenBlog/assets/image-20231113230830202-7d3ecccc.png";
const _imports_117 = "/bowenBlog/assets/image-20231113230840855-5f30486d.png";
const _imports_118 = "/bowenBlog/assets/image-20231114092819226-d37663bc.png";
const _imports_119 = "/bowenBlog/assets/image-20231114092923326-470c0cb0.png";
const _imports_120 = "/bowenBlog/assets/image-20231113231231755-bcec99f2.png";
const _imports_121 = "/bowenBlog/assets/image-20231114093110506-7b70d0e5.png";
const _imports_122 = "/bowenBlog/assets/image-20231114093125108-a08fc0c8.png";
const _imports_123 = "/bowenBlog/assets/image-20231113231447140-a16e1bc8.png";
const _imports_124 = "/bowenBlog/assets/image-20231113231717073-3cca337a.png";
const _imports_125 = "/bowenBlog/assets/image-20231114111054450-4206979a.png";
const _imports_126 = "/bowenBlog/assets/image-20231114112805460-564475a1.png";
const _imports_127 = "/bowenBlog/assets/image-20231114112942154-89868037.png";
const _imports_128 = "/bowenBlog/assets/image-20231114113324776-961e1474.png";
const _imports_129 = "/bowenBlog/assets/image-20231114113426419-daac2700.png";
const _imports_130 = "/bowenBlog/assets/image-20231114114117877-0a66780d.png";
const _imports_131 = "/bowenBlog/assets/image-20231114201856796-f422a66c.png";
const _imports_132 = "/bowenBlog/assets/image-20231114205110973-82990bbe.png";
const _imports_133 = "/bowenBlog/assets/image-20231114205123344-a7197dfd.png";
const _imports_134 = "/bowenBlog/assets/image-20231114205149008-18613ae9.png";
const _imports_135 = "/bowenBlog/assets/image-20231114205417526-32abe9c7.png";
const _imports_136 = "/bowenBlog/assets/image-20231114205426869-681b2965.png";
const _imports_137 = "/bowenBlog/assets/image-20231114205436666-7c065295.png";
const _imports_138 = "/bowenBlog/assets/image-20231114205444890-6e5c380e.png";
const _imports_139 = "/bowenBlog/assets/image-20231114205457708-7599c93d.png";
const _imports_140 = "/bowenBlog/assets/image-20231114205510222-c11e8f2d.png";
const _imports_141 = "/bowenBlog/assets/image-20231114205522490-44db6335.png";
const _imports_142 = "/bowenBlog/assets/image-20231114205533457-08de0785.png";
const _imports_143 = "/bowenBlog/assets/image-20231114205548151-3187f8b7.png";
const _imports_144 = "/bowenBlog/assets/image-20231114205602524-6e06fa50.png";
const _imports_145 = "/bowenBlog/assets/image-20231114205614654-d80296c1.png";
const _imports_146 = "/bowenBlog/assets/image-20231114205629413-5d5ff036.png";
const _imports_147 = "/bowenBlog/assets/image-20231114205648058-9549c22a.png";
const _imports_148 = "/bowenBlog/assets/image-20231114214549817-6595634f.png";
const _imports_149 = "/bowenBlog/assets/image-20231114214810663-2ccc374b.png";
const _imports_150 = "/bowenBlog/assets/image-20231114214852174-31a658b7.png";
const _imports_151 = "/bowenBlog/assets/image-20231114225358887-c8674839.png";
const _imports_152 = "/bowenBlog/assets/image-20231115142341850-c23d6b68.png";
const _imports_153 = "/bowenBlog/assets/image-20231115142951222-b8f23c3a.png";
const _imports_154 = "/bowenBlog/assets/image-20231115143015426-79aba57d.png";
const _imports_155 = "/bowenBlog/assets/image-20231115144409376-dd44a4db.png";
const _imports_156 = "/bowenBlog/assets/image-20231115144446491-c8b8b56d.png";
const _imports_157 = "/bowenBlog/assets/image-20231115191252670-abd18de5.png";
const _imports_158 = "/bowenBlog/assets/image-20231115233703656-2c0caf51.png";
const _imports_159 = "/bowenBlog/assets/image-20231115234120654-5e5ae583.png";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h2 id="vue3" tabindex="-1"><a class="header-anchor" href="#vue3" aria-hidden="true">#</a> Vue3</h2><hr><h2 id="一-vue3" tabindex="-1"><a class="header-anchor" href="#一-vue3" aria-hidden="true">#</a> 一, VUe3</h2><h3 id="_1-vue3-介绍" tabindex="-1"><a class="header-anchor" href="#_1-vue3-介绍" aria-hidden="true">#</a> 1, Vue3 介绍</h3><p>Vue3文档地址：https://cn.vuejs.org/</p><p><strong>渐进式,JavaScript框架</strong></p><blockquote><p><strong>Vue 的特点:</strong></p><p>易学易用</p><ul><li>API设计简单，好上手，也是Vue很火的原因</li></ul><p>性能出色</p><ul><li>proxy，精准更新，diff算法....</li></ul><p>灵活多变</p><ul><li>渐进式，可大可小的项目都可以做，可以逐步集成很多第三方的依赖</li></ul></blockquote><p><strong>你是如何理解 Vue2 ？</strong></p><ul><li>vue是数据驱动视图（响应式原理）</li><li>vue2是选项式API（一堆的选项）</li><li>组件化开发（自定义属性，自定义事件，自定义插槽，选项式API，组件通信）</li><li>十几个指令（内置指令），指令的本质是对DOM操作的封装......</li><li>五大内置组件（slot, transition, component, keep-alive, transition-group）</li><li>复用技巧（组件，混入，过滤器，自定义指令，插件，原型链....）</li><li>图：组件的生命周期图，MVVM图，Vuex图，响应式原理图...</li></ul><p><strong>Vue相关的技术栈官网</strong></p><ul><li>技术栈：Vue3 + VueRouter4 + Pinia2 + Vant3 / ElementPlus</li><li>1、Vue3官网：https://vuejs.org/</li><li>2、VueRouter(V4)：https://router.vuejs.org/</li><li>3、Pinia(V2)：https://pinia.vuejs.org/</li><li>4、Vite构建工具：https://vitejs.dev/</li><li>5、ElementPlus：https://element-plus.gitee.io/zh-CN/</li><li>6、Vant(v3)：https://vant-contrib.gitee.io/vant/#/zh-CN</li></ul><p><strong>Vue3 相较于 Vue2 有了哪些升级,有什么区别?</strong></p><blockquote><p>Vue 3 相较于 Vue 2 进行了一些重要的升级和改进。以下是 Vue 3 相对于 Vue 2 的主要区别和改进：</p><ol><li><p><strong>更高的性能：</strong> Vue 3 在内部进行了重写和优化，提供了更快的渲染速度和更小的包大小。通过使用更高效的虚拟 DOM 算法（Faster DOM），以及优化的编译器，Vue 3 在性能方面有了显著的提升。</p></li><li><p><strong>Composition API：</strong> Vue 3 引入了 Composition API，这是一种新的组合式 API 风格，提供了更灵活和可组合的组件逻辑复用方式。相较于 Vue 2 的 Options API，Composition API 更好地支持逻辑的组合和代码的重用，使得组件更易于维护和测试。</p></li><li><p><strong>更好的 TypeScript 支持：</strong> Vue 3 对 TypeScript 的支持更加完善，并且内部使用了 TypeScript 进行开发。Vue 3 中引入了一些新的类型和增强的类型推导，使得在使用 TypeScript 开发 Vue 应用时更加友好和高效。</p></li><li><p><strong>Teleport（传送门）：</strong> Vue 3 引入了 Teleport 组件，它允许将组件的内容渲染到 DOM 中的任意位置。这对于创建弹出框、模态框、通知等需要在 DOM 中的不同位置渲染的场景非常有用。</p></li><li><p><strong>Fragment（片段）：</strong> Vue 3 支持使用 <code>&lt;template&gt;</code> 标签以外的方式来定义组件的根元素，例如直接使用文本节点或多个根级元素。这样可以更灵活地组织组件的结构，而不再限制于单个根元素。</p></li><li><p><strong>更好的 Tree-Shaking 支持：</strong> Vue 3 的模块被重构为更好地支持 Tree-Shaking（摇树优化），这意味着在构建应用程序时可以更有效地剔除未使用的代码，减少最终打包的体积。</p></li><li><p><strong>全局 API 的变更：</strong> Vue 3 中的一些全局 API 发生了变化，例如 <code>Vue.component</code> 被替换为 <code>app.component</code>，<code>Vue.filter</code> 被替换为 <code>app.config.globalProperties.$filter</code> 等。这些变化主要是为了提高代码的可靠性、可维护性和可扩展性。</p></li></ol><p>总结一下：</p><p>Vue 3 的目标是提供更好的性能、更灵活的开发体验和更好的 TypeScript 支持，以便开发者能够构建更加高效、可维护和可扩展的 Vue 应用程序。</p></blockquote><h3 id="_2-创建-vue3-项目" tabindex="-1"><a class="header-anchor" href="#_2-创建-vue3-项目" aria-hidden="true">#</a> 2, 创建 Vue3 项目</h3><p><strong>npm 创建 Vue项目</strong></p><p><em>直接安装了最新的vue版本</em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> create vue@latest\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这一指令将会安装 vue项目，它是 Vue 官方的项目脚手架工具。你将会看到一些诸如 TypeScript 和测试支持之类的可选功能提示：</p><p><img src="' + _imports_0 + '" alt="image-20231107190813439"></p><p>进入项目，安装依赖，运行项目，如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> myapp \n<span class="token function">npm</span> <span class="token function">install</span> \n<span class="token function">npm</span> run dev\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="' + _imports_1 + '" alt="image-20231107190829549"></p><p><em>项目运行由vite打包, 所以项目启动相较于vue2 速度提升非常快</em></p><p><strong>CDN 的方式引入 Vue</strong></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://unpkg.com/vue@3/dist/vue.global.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>通过 CDN 使用 Vue 时，不涉及“构建步骤”。这使得设置更加简单，并且可以用于增强静态的 HTML 或与后端框架集成。但是，你将无法使用单文件组件 (SFC) 语法。</p><p>==可能出现的问题==: 如果报错, 是因为请求连接失败, 网络原因(需要开启代理, 科学上网!)</p><p><strong>使用全局构建版本</strong></p><p>上面的链接使用了<em>全局构建版本</em>的 Vue，该版本的所有顶层 API 都以属性的形式暴露在了全局的 <code>Vue</code> 对象上。这里有一个使用全局构建版本的例子：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://unpkg.com/vue@3/dist/vue.global.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ message }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token operator">=</span> Vue\n  <span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;Hello Vue!&#39;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>使用 ES 模块构建版本</strong></p>', 31);
const _hoisted_32 = {
  href: "https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Modules",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_33 = /* @__PURE__ */ createStaticVNode('<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ message }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>module<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;https://unpkg.com/vue@3/dist/vue.esm-browser.js&#39;</span>\n  \n  <span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;Hello Vue!&#39;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意我们使用了 script type=&#39;Module&#39; , <strong>ES 模块构建版本</strong>。</p><p>使用 vscode 打开,查看项目架构:</p><p><img src="' + _imports_2 + '" alt="image-20231107190922329"></p><p><strong>Vue3 项目目录分析：</strong></p><ul><li>vite.config.js 是Vite官方配置文件，各种配置参考Vite官网。</li><li>index.html 是SPA挂载的根页面</li><li>main.js 是入口文件</li><li>App.vue 是根组件（SFC单文件组织）</li><li>src 文件夹 是源码目录 <ul><li>views 放路由级别的组件</li><li>compoents 放通用组件</li><li>router 放路由相关的</li><li>store 放仓库相关的</li><li>api 封装API接口相关的</li><li>utils 放工具函数</li></ul></li></ul><p>在开发Vue3，在VSCode中还需要安装插件,提供更好的 Vue3 API 支持以及代码片段，如下：</p><p><strong>volar</strong></p><p><img src="' + _imports_3 + '" alt="image-20231107191047318"></p><p>互动教程，如下：</p><p><img src="' + _imports_4 + '" alt="image-20231107191133982"></p><h3 id="_3-声明式渲染" tabindex="-1"><a class="header-anchor" href="#_3-声明式渲染" aria-hidden="true">#</a> 3, 声明式渲染</h3><p><strong>四种语法范式：</strong></p><ul><li>选项式写法：完成支持Vue2写法，我们之前学习的Vue2的写法就是选项式写法</li><li>组合式写法：只使用setup()，把组合式API写在setup中就是组合式写法</li><li>选项式+组合式写法：可以使用setup()+选项式写法</li><li>==组合式语法糖写法==：在script标签上添加setup，只支持组合式写法，规避选项式写法。</li></ul><p><strong>选项式写法：</strong></p><p><img src="' + _imports_5 + '" alt="image-20231107191358350"></p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>选项式API写法<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>num<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>add<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>+1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">num</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>num<span class="token operator">++</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>组合式写法:(了解)</strong></p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>选项式API写法<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>num<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>add<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>+1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token comment">// ref是组合式API</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token comment">// Vue3的选项写法：对Vue2范式完全兼容，可以同时使用setup和选项，也可只使用setup。</span>\n  <span class="token comment">// 官方已经不推荐使用这种选项写法了。选项写法，都有对应的组合API来实现。</span>\n  <span class="token comment">// 解读setup这个选项：相当于Vue2中的created()，可以理解成是组件生命周期的第一阶段；setup(props,context)，context表示上下文，为什么在setup中要有一个上下文对象，因为在setup选项中没有this。</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// setup是组合式API的入口</span>\n    <span class="token keyword">const</span> num <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//num是调用ref函数之后的结果，它是一个对象</span>\n    <span class="token comment">// 不能直接num++  num.value才是响应式数据的值</span>\n    <span class="token comment">// 在模板中，它会自动的.value</span>\n    <span class="token keyword">const</span> <span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      num<span class="token punctuation">.</span>value<span class="token operator">++</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      num<span class="token punctuation">,</span>\n      add<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>选项式和组合式混写：（了解）</strong></p><p><img src="' + _imports_6 + '" alt="image-20231107192853212"></p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>选项式+组合式API写法<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>num<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>add<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>+1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>\n<span class="token comment">// 非常不推荐这种写法</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 组合选项</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> num <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      num<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>num<span class="token operator">++</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>组合式语法糖写法(推荐):</strong></p><p><img src="' + _imports_7 + '" alt="image-20231107192921548"></p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>组合式语法糖写法<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>num<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>add<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>+1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> num <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  num<span class="token punctuation">.</span>value<span class="token operator">++</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>官方文档教程小案例数字累加，如下：</p><p><img src="' + _imports_8 + '" alt="image-20231107193118362"></p><p><img src="' + _imports_9 + '" alt="image-20231107193128082"></p><h3 id="_4-atribute绑定" tabindex="-1"><a class="header-anchor" href="#_4-atribute绑定" aria-hidden="true">#</a> 4, atribute绑定</h3><p>试着把一个动态的 <code>class</code> 绑定添加到这个 <code>&lt;h1&gt;</code> 上，并使用 <code>titleClass</code> 的 ref 作为它的值。如果绑定正确，文字将会变为红色。代码如下：</p><p><img src="' + _imports_10 + '" alt="image-20231107194051590"></p><h3 id="_5-表单绑定与双向绑定" tabindex="-1"><a class="header-anchor" href="#_5-表单绑定与双向绑定" aria-hidden="true">#</a> 5, 表单绑定与双向绑定</h3><p><img src="' + _imports_11 + '" alt="image-20231107194103639"></p><p><img src="' + _imports_12 + '" alt="image-20231107194132716"></p><p><strong>什么是双向绑定？什么是单向绑定？</strong></p><ul><li>单向绑定：数据驱动视图，通过ref或reactive定义的响应式数据，数据发生变化时，模板会自动刷新。</li><li>双向绑定：数据驱动视图，视图驱动数据。 Vue2 中的 v-model=@input + :value</li></ul><h3 id="_6-条件渲染" tabindex="-1"><a class="header-anchor" href="#_6-条件渲染" aria-hidden="true">#</a> 6, 条件渲染</h3><p><img src="' + _imports_13 + '" alt="image-20231107194204271"></p><h3 id="_7-列表渲染" tabindex="-1"><a class="header-anchor" href="#_7-列表渲染" aria-hidden="true">#</a> 7, 列表渲染</h3><p>直接写todo案例，如下：</p><p><img src="' + _imports_14 + '" alt="image-20231107194335199"></p><p>参考代码,如下</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">@submit.prevent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>addTodo<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>newTodo<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token comment">&lt;!-- &lt;button @click=&quot;addTodo&quot;&gt;Add Todo&lt;/button&gt; --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>Add Todo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>todo in todos<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>todo.id<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      {{ todo.text }}\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>removeTodo(todo)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>X<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 给每个 todo 对象一个唯一的 id</span>\n\n<span class="token keyword">const</span> newTodo <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> todos <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n  <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> id<span class="token operator">++</span><span class="token punctuation">,</span> <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;Learn HTML&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> id<span class="token operator">++</span><span class="token punctuation">,</span> <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;Learn JavaScript&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> id<span class="token operator">++</span><span class="token punctuation">,</span> <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;Learn Vue&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">removeTodo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">todo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// console.log(&quot;todo:&quot;,todo.id);</span>\n  <span class="token keyword">let</span> idx <span class="token operator">=</span> todos<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token operator">=&gt;</span>item<span class="token punctuation">.</span>id <span class="token operator">===</span> todo<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  todos<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">addTodo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>newTodo<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;输入框不能为空~&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> \n  todos<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> id<span class="token operator">++</span><span class="token punctuation">,</span> <span class="token literal-property property">text</span><span class="token operator">:</span> newTodo<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  newTodo<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>为什么 key 的值不能为索引?</strong></p><blockquote><p>在 Vue 中，<code>key</code> 是用于跟踪每个节点的身份的特殊属性。当 Vue 执行更新时，它会使用 <code>key</code> 来检测哪些组件或元素已被修改、添加或删除。</p><p>使用索引作为 <code>key</code> 的值可能会导致一些问题，尤其是在存在动态列表或条件渲染时。以下是为什么不建议将索引作为 <code>key</code> 的值的原因：</p><ol><li><strong>不稳定的排序</strong>：索引是基于元素在列表中的位置，而不是元素自身的唯一标识。如果列表中的元素被重新排序，索引可能会发生变化，这可能会导致 Vue 错误地认为某些元素已经被替换或删除，从而导致意外的行为。</li><li><strong>重复的键</strong>：如果列表中存在重复的索引，即多个元素具有相同的 <code>key</code> 值，Vue 将无法准确地区分它们，从而导致渲染错误或意外的行为。</li><li><strong>性能问题</strong>：Vue 使用 <code>key</code> 来优化渲染过程。通过使用稳定且唯一的 <code>key</code>，Vue 可以更快地识别出哪些元素发生了变化，并进行针对性的更新操作。如果使用索引作为 <code>key</code>，则可能会导致 Vue 需要检查更多的元素，从而降低性能。</li></ol><p>避免以上的问题, 建议使用<strong>具有稳定且唯一标识的值作为 <code>key</code></strong> .</p><p>例如: 每个元素在列表中的唯一标识符,数据库中唯一的ID,或其他具有唯一性的属性作为 key 的值.</p></blockquote><h3 id="_8-计算属性" tabindex="-1"><a class="header-anchor" href="#_8-计算属性" aria-hidden="true">#</a> 8, 计算属性</h3><blockquote><p><strong>介绍:</strong></p><p>计算属性就是根据已有的状态，计算出一个新的状态。我们可以把模板中的复杂计算抽离到计算属性中，让模板看上去更优雅。计算属性有缓存，当计算属性依赖的状态发生了变化，才会重新计算。</p></blockquote><p>官方文档写的：</p><ul><li>计算属性会自动跟踪其计算中所使用的到的其他响应式状态，并将它们收集为自己的依赖。计算结果会被缓存，并<strong>只有在其依赖发生改变时才会被自动更新</strong>。</li></ul><p><strong>总结：</strong></p><ul><li>计算属性有缓存的特性。</li><li>只有它依赖的状态，变化的空间不大，计算属性的收益更高</li></ul><p><img src="' + _imports_15 + '" alt="image-20231108201630101"></p><p>参考代码：</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">@submit.prevent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>addTodo<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>newTodo<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>Add Todo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>todo in filterTodos<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>todo.id<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>todo.done<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ done: todo.done }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> {{ todo.text }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>removeTodo(todo)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>X<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hideCompleted = !hideCompleted<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    {{ hideCompleted ? &quot;Show all&quot; : &quot;Hide completed&quot; }}\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> reactive<span class="token punctuation">,</span> computed <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 给每个 todo 对象一个唯一的 id</span>\n\n<span class="token keyword">const</span> hideCompleted <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> newTodo <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> todos <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n  <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> id<span class="token operator">++</span><span class="token punctuation">,</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;Learn HTML&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> id<span class="token operator">++</span><span class="token punctuation">,</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;Learn JavaScript&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> id<span class="token operator">++</span><span class="token punctuation">,</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;Learn Vue&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> filterTodos <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hideCompleted<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> todos<span class="token punctuation">.</span>value<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>hideCompleted<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> todos<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">todo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token operator">!</span>todo<span class="token punctuation">.</span>done<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">removeTodo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">todo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// console.log(&quot;todo:&quot;,todo.id);</span>\n  <span class="token keyword">let</span> idx <span class="token operator">=</span> todos<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>id <span class="token operator">===</span> todo<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  todos<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">addTodo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>newTodo<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;输入框不能为空~&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  todos<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> id<span class="token operator">++</span><span class="token punctuation">,</span> <span class="token literal-property property">text</span><span class="token operator">:</span> newTodo<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  newTodo<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\n<span class="token selector">.done</span> <span class="token punctuation">{</span>\n  <span class="token property">text-decoration</span><span class="token punctuation">:</span> line-through<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_9-生命周期与模板引用" tabindex="-1"><a class="header-anchor" href="#_9-生命周期与模板引用" aria-hidden="true">#</a> 9, 生命周期与模板引用</h3><blockquote><p>目前为止，Vue 为我们处理了所有的 DOM 更新，这要归功于响应性和声明式渲染。然而，有时我们也会不可避免地需要手动操作 DOM。</p><p>这时我们需要使用<strong>模板引用</strong>——也就是指向模板中一个 DOM 元素的 ref。直接上代码：</p></blockquote><p><img src="' + _imports_16 + '" alt="image-20231108201721507"></p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token comment">&lt;!-- 此处的ref和我们讲面讲的ref含义是不一样的 --&gt;</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>p<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>hello<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token comment">// 在vue3中生命周期函数都是组合式API</span>\n<span class="token comment">// 都是以on打头</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> onMounted <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n  <span class="token comment">// 此时组件已经挂载。</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  p<span class="token punctuation">.</span>value<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token string">&#39;mounted!&#39;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_10-侦听器" tabindex="-1"><a class="header-anchor" href="#_10-侦听器" aria-hidden="true">#</a> 10, 侦听器</h3><p>直接上代码：</p><p><img src="' + _imports_17 + '" alt="image-20231108201820165"></p><p>直接官方的案例：</p><p><img src="' + _imports_18 + '" alt="image-20231108201830671"></p><p>参考代码:</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Todo id: {{ todoId }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>todoId++<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Fetch next todo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>!todoData<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Loading...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span> <span class="token attr-name">v-else</span><span class="token punctuation">&gt;</span></span>{{ todoData }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> watch <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> todoId <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> todoData <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fetchData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  todoData<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>\n    <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://jsonplaceholder.typicode.com/todos/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>todoId<span class="token punctuation">.</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  todoData<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">await</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">fetchData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token function">watch</span><span class="token punctuation">(</span>todoId<span class="token punctuation">,</span> fetchData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_11-组件" tabindex="-1"><a class="header-anchor" href="#_11-组件" aria-hidden="true">#</a> 11, 组件</h3><p>组件的使用,如下:</p><p><img src="' + _imports_19 + '" alt="image-20231108202021412"></p><h3 id="_12-props" tabindex="-1"><a class="header-anchor" href="#_12-props" aria-hidden="true">#</a> 12, props</h3><p>子组件可以通过 props 从父组件接受动态数据。</p><p>直接上代码：</p><p><img src="' + _imports_20 + '" alt="image-20231108202046442"></p><h3 id="_13-emits" tabindex="-1"><a class="header-anchor" href="#_13-emits" aria-hidden="true">#</a> 13, Emits</h3><p><strong>vue是单向数据流</strong>，什么叫单向数据流？props 只能从上到下流。如果想把数据从子流到父，方式有：</p><ul><li><strong>给子传递一个方法，子去调用方法</strong></li><li><strong>通过自定义事件</strong></li></ul><p>在 vue2 中，自定义事件需要接收，在 vue3 中自定义事件也需要接收，如下：</p><p><img src="' + _imports_21 + '" alt="image-20231108202203957"></p><p><img src="' + _imports_22 + '" alt="image-20231108202215579"></p><h3 id="_14-slot" tabindex="-1"><a class="header-anchor" href="#_14-slot" aria-hidden="true">#</a> 14, Slot</h3><p><strong>插槽示例</strong></p><p>参考文档：https://cn.vuejs.org/tutorial/#step-14</p><h2 id="二-todo-实现" tabindex="-1"><a class="header-anchor" href="#二-todo-实现" aria-hidden="true">#</a> 二, Todo 实现</h2><hr><h3 id="_1-静态页面" tabindex="-1"><a class="header-anchor" href="#_1-静态页面" aria-hidden="true">#</a> 1，静态页面</h3><p>todo.html，如下：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>X-UA-Compatible<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>IE=edge<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./index.css<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>todoapp<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>header<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>todos<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>new-todo<span class="token punctuation">&quot;</span></span> <span class="token attr-name">autofocus</span> <span class="token attr-name">autocomplete</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>off<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>What needs to be done?<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>main<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>toggle-all<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>toggle-all<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>toggle-all<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Mark all as complete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>todo-list<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n                <span class="token comment">&lt;!-- :class=&quot;{ completed: item.done }&quot; --&gt;</span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>todo<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>toggle<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span>学习vue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>destroy<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>edit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span> <span class="token punctuation">/&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>footer<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>todo-count<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span> 1 item left <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>filters<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>All<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Active<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>\n                    <span class="token comment">&lt;!-- :class=&quot;{ selected: visibility == &#39;Completed&#39;} --&gt;</span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Completed<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>clear-completed<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n                Clear completed\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">&gt;</span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>todo.css 代码如下：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">html,\nbody</span> <span class="token punctuation">{</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">button</span> <span class="token punctuation">{</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">border</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">background</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n    <span class="token property">vertical-align</span><span class="token punctuation">:</span> baseline<span class="token punctuation">;</span>\n    <span class="token property">font-family</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>\n    <span class="token property">font-weight</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>\n    <span class="token property">-webkit-appearance</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n    <span class="token property">appearance</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n    <span class="token property">-webkit-font-smoothing</span><span class="token punctuation">:</span> antialiased<span class="token punctuation">;</span>\n    <span class="token property">-moz-osx-font-smoothing</span><span class="token punctuation">:</span> grayscale<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">body</span> <span class="token punctuation">{</span>\n    <span class="token property">font</span><span class="token punctuation">:</span> 14px <span class="token string">&#39;Helvetica Neue&#39;</span><span class="token punctuation">,</span> Helvetica<span class="token punctuation">,</span> Arial<span class="token punctuation">,</span> sans-serif<span class="token punctuation">;</span>\n    <span class="token property">line-height</span><span class="token punctuation">:</span> 1.4em<span class="token punctuation">;</span>\n    <span class="token property">background</span><span class="token punctuation">:</span> #f5f5f5<span class="token punctuation">;</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #4d4d4d<span class="token punctuation">;</span>\n    <span class="token property">min-width</span><span class="token punctuation">:</span> 230px<span class="token punctuation">;</span>\n    <span class="token property">max-width</span><span class="token punctuation">:</span> 550px<span class="token punctuation">;</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span>\n    <span class="token property">-webkit-font-smoothing</span><span class="token punctuation">:</span> antialiased<span class="token punctuation">;</span>\n    <span class="token property">-moz-osx-font-smoothing</span><span class="token punctuation">:</span> grayscale<span class="token punctuation">;</span>\n    <span class="token property">font-weight</span><span class="token punctuation">:</span> 300<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">:focus</span> <span class="token punctuation">{</span>\n    <span class="token property">outline</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.hidden</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todoapp</span> <span class="token punctuation">{</span>\n    <span class="token property">background</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 130px 0 40px 0<span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n    <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 2px 4px 0 <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.2<span class="token punctuation">)</span><span class="token punctuation">,</span>\n        0 25px 50px 0 <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todoapp input::-webkit-input-placeholder</span> <span class="token punctuation">{</span>\n    <span class="token property">font-style</span><span class="token punctuation">:</span> italic<span class="token punctuation">;</span>\n    <span class="token property">font-weight</span><span class="token punctuation">:</span> 300<span class="token punctuation">;</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #e6e6e6<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todoapp input::-moz-placeholder</span> <span class="token punctuation">{</span>\n    <span class="token property">font-style</span><span class="token punctuation">:</span> italic<span class="token punctuation">;</span>\n    <span class="token property">font-weight</span><span class="token punctuation">:</span> 300<span class="token punctuation">;</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #e6e6e6<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todoapp input::input-placeholder</span> <span class="token punctuation">{</span>\n    <span class="token property">font-style</span><span class="token punctuation">:</span> italic<span class="token punctuation">;</span>\n    <span class="token property">font-weight</span><span class="token punctuation">:</span> 300<span class="token punctuation">;</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #e6e6e6<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todoapp h1</span> <span class="token punctuation">{</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>\n    <span class="token property">top</span><span class="token punctuation">:</span> -155px<span class="token punctuation">;</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>\n    <span class="token property">font-weight</span><span class="token punctuation">:</span> 100<span class="token punctuation">;</span>\n    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>175<span class="token punctuation">,</span> 47<span class="token punctuation">,</span> 47<span class="token punctuation">,</span> 0.15<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token property">-webkit-text-rendering</span><span class="token punctuation">:</span> optimizeLegibility<span class="token punctuation">;</span>\n    <span class="token property">-moz-text-rendering</span><span class="token punctuation">:</span> optimizeLegibility<span class="token punctuation">;</span>\n    <span class="token property">text-rendering</span><span class="token punctuation">:</span> optimizeLegibility<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.new-todo,\n.edit</span> <span class="token punctuation">{</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 24px<span class="token punctuation">;</span>\n    <span class="token property">font-family</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>\n    <span class="token property">font-weight</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>\n    <span class="token property">line-height</span><span class="token punctuation">:</span> 1.4em<span class="token punctuation">;</span>\n    <span class="token property">border</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>\n    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #999<span class="token punctuation">;</span>\n    <span class="token property">box-shadow</span><span class="token punctuation">:</span> inset 0 -1px 5px 0 <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>\n    <span class="token property">-webkit-font-smoothing</span><span class="token punctuation">:</span> antialiased<span class="token punctuation">;</span>\n    <span class="token property">-moz-osx-font-smoothing</span><span class="token punctuation">:</span> grayscale<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.new-todo</span> <span class="token punctuation">{</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 16px 16px 16px 60px<span class="token punctuation">;</span>\n    <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.003<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token property">box-shadow</span><span class="token punctuation">:</span> inset 0 -2px 1px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.03<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.main</span> <span class="token punctuation">{</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n    <span class="token property">z-index</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span>\n    <span class="token property">border-top</span><span class="token punctuation">:</span> 1px solid #e6e6e6<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.toggle-all</span> <span class="token punctuation">{</span>\n    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n    <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n    <span class="token comment">/* Mobile Safari */</span>\n    <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.toggle-all+label</span> <span class="token punctuation">{</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 34px<span class="token punctuation">;</span>\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>\n    <span class="token property">top</span><span class="token punctuation">:</span> -52px<span class="token punctuation">;</span>\n    <span class="token property">left</span><span class="token punctuation">:</span> -13px<span class="token punctuation">;</span>\n    <span class="token property">-webkit-transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>90deg<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>90deg<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.toggle-all+label:before</span> <span class="token punctuation">{</span>\n    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&#39;❯&#39;</span><span class="token punctuation">;</span>\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 22px<span class="token punctuation">;</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #e6e6e6<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 10px 27px 10px 27px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.toggle-all:checked+label:before</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #737373<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todo-list</span> <span class="token punctuation">{</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todo-list li</span> <span class="token punctuation">{</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 24px<span class="token punctuation">;</span>\n    <span class="token property">border-bottom</span><span class="token punctuation">:</span> 1px solid #ededed<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todo-list li:last-child</span> <span class="token punctuation">{</span>\n    <span class="token property">border-bottom</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todo-list li.editing</span> <span class="token punctuation">{</span>\n    <span class="token property">border-bottom</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todo-list li .edit</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 506px<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 12px 16px<span class="token punctuation">;</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 0 0 0 43px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todo-list li.editing .view</span> <span class="token punctuation">{</span>\n    <span class="token comment">/* display: none; */</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todo-list li .toggle</span> <span class="token punctuation">{</span>\n    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>\n    <span class="token comment">/* auto, since non-WebKit browsers doesn&#39;t support input styling */</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>\n    <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> auto 0<span class="token punctuation">;</span>\n    <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n    <span class="token comment">/* Mobile Safari */</span>\n    <span class="token property">-webkit-appearance</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n    <span class="token property">appearance</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todo-list li .toggle</span> <span class="token punctuation">{</span>\n    <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todo-list li .toggle+label</span> <span class="token punctuation">{</span>\n    <span class="token comment">/*\n		Firefox requires `#` to be escaped - https://bugzilla.mozilla.org/show_bug.cgi?id=922433\n		IE and Edge requires *everything* to be escaped to render, so we do that instead of just the `#` - https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/7157459/\n	*/</span>\n    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;data:image/svg+xml;utf8,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20width%3D%2240%22%20height%3D%2240%22%20viewBox%3D%22-10%20-18%20100%20135%22%3E%3Ccircle%20cx%3D%2250%22%20cy%3D%2250%22%20r%3D%2250%22%20fill%3D%22none%22%20stroke%3D%22%23ededed%22%20stroke-width%3D%223%22/%3E%3C/svg%3E&#39;</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span>\n    <span class="token property">background-repeat</span><span class="token punctuation">:</span> no-repeat<span class="token punctuation">;</span>\n    <span class="token property">background-position</span><span class="token punctuation">:</span> center left<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todo-list li .toggle:checked+label</span> <span class="token punctuation">{</span>\n    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;data:image/svg+xml;utf8,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20width%3D%2240%22%20height%3D%2240%22%20viewBox%3D%22-10%20-18%20100%20135%22%3E%3Ccircle%20cx%3D%2250%22%20cy%3D%2250%22%20r%3D%2250%22%20fill%3D%22none%22%20stroke%3D%22%23bddad5%22%20stroke-width%3D%223%22/%3E%3Cpath%20fill%3D%22%235dc2af%22%20d%3D%22M72%2025L42%2071%2027%2056l-4%204%2020%2020%2034-52z%22/%3E%3C/svg%3E&#39;</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todo-list li label</span> <span class="token punctuation">{</span>\n    <span class="token property">word-break</span><span class="token punctuation">:</span> break-all<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 15px 15px 15px 60px<span class="token punctuation">;</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\n    <span class="token property">line-height</span><span class="token punctuation">:</span> 1.2<span class="token punctuation">;</span>\n    <span class="token property">transition</span><span class="token punctuation">:</span> color 0.4s<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todo-list li.completed label</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #d9d9d9<span class="token punctuation">;</span>\n    <span class="token property">text-decoration</span><span class="token punctuation">:</span> line-through<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todo-list li .destroy</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>\n    <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">right</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>\n    <span class="token property">bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> auto 0<span class="token punctuation">;</span>\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #cc9a9a<span class="token punctuation">;</span>\n    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 11px<span class="token punctuation">;</span>\n    <span class="token property">transition</span><span class="token punctuation">:</span> color 0.2s ease-out<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todo-list li .destroy:hover</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #af5b5e<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todo-list li .destroy:after</span> <span class="token punctuation">{</span>\n    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&#39;×&#39;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todo-list li:hover .destroy</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">/* .todo-list li .edit {\n	display: none;\n} */</span>\n\n<span class="token selector">.todo-list li.editing:last-child</span> <span class="token punctuation">{</span>\n    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> -1px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.footer</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #777<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 10px 15px<span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>\n    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n    <span class="token property">border-top</span><span class="token punctuation">:</span> 1px solid #e6e6e6<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.footer:before</span> <span class="token punctuation">{</span>\n    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>\n    <span class="token property">right</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>\n    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>\n    <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 1px 1px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.2<span class="token punctuation">)</span><span class="token punctuation">,</span> filters 0 8px 0 -3px #f6f6f6<span class="token punctuation">,</span>\n        0 9px 1px -3px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.2<span class="token punctuation">)</span><span class="token punctuation">,</span>\n        0 16px 0 -6px #f6f6f6<span class="token punctuation">,</span>\n        0 17px 2px -6px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todo-count</span> <span class="token punctuation">{</span>\n    <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>\n    <span class="token property">text-align</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todo-count strong</span> <span class="token punctuation">{</span>\n    <span class="token property">font-weight</span><span class="token punctuation">:</span> 300<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.filters</span> <span class="token punctuation">{</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>\n    <span class="token property">right</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.filters li</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> inline<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.filters li a</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 3px 7px<span class="token punctuation">;</span>\n    <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid transparent<span class="token punctuation">;</span>\n    <span class="token property">border-radius</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.filters li a:hover</span> <span class="token punctuation">{</span>\n    <span class="token property">border-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>175<span class="token punctuation">,</span> 47<span class="token punctuation">,</span> 47<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.filters li a.selected</span> <span class="token punctuation">{</span>\n    <span class="token property">border-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>175<span class="token punctuation">,</span> 47<span class="token punctuation">,</span> 47<span class="token punctuation">,</span> 0.2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.clear-completed,\nhtml .clear-completed:active</span> <span class="token punctuation">{</span>\n    <span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n    <span class="token property">line-height</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>\n    <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n    <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.clear-completed:hover</span> <span class="token punctuation">{</span>\n    <span class="token property">text-decoration</span><span class="token punctuation">:</span> underline<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.info</span> <span class="token punctuation">{</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 65px auto 0<span class="token punctuation">;</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #bfbfbf<span class="token punctuation">;</span>\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>\n    <span class="token property">text-shadow</span><span class="token punctuation">:</span> 0 1px 0 <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 0.5<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.info p</span> <span class="token punctuation">{</span>\n    <span class="token property">line-height</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.info a</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>\n    <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n    <span class="token property">font-weight</span><span class="token punctuation">:</span> 400<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.info a:hover</span> <span class="token punctuation">{</span>\n    <span class="token property">text-decoration</span><span class="token punctuation">:</span> underline<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">/*\n	Hack to remove background from Mobile Safari.\n	Can&#39;t use it globally since it destroys checkboxes in Firefox\n*/</span>\n<span class="token atrule"><span class="token rule">@media</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">-webkit-min-device-pixel-ratio</span><span class="token punctuation">:</span>0<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>\n\n    <span class="token selector">.toggle-all,\n    .todo-list li .toggle</span> <span class="token punctuation">{</span>\n        <span class="token property">background</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token selector">.todo-list li .toggle</span> <span class="token punctuation">{</span>\n        <span class="token property">height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 430px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>\n    <span class="token selector">.footer</span> <span class="token punctuation">{</span>\n        <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token selector">.filters</span> <span class="token punctuation">{</span>\n        <span class="token property">bottom</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三-vue3-深入指南" tabindex="-1"><a class="header-anchor" href="#三-vue3-深入指南" aria-hidden="true">#</a> 三, Vue3 深入指南</h2><hr><h3 id="_1-创建一个应用" tabindex="-1"><a class="header-anchor" href="#_1-创建一个应用" aria-hidden="true">#</a> 1, 创建一个应用</h3><p>创建应用</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>\n    createApp\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n\n<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&#39;./App.vue&#39;</span>\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>\n\n<span class="token comment">// #app是哪里来的？</span>\napp<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>应用实例会暴露一个 <code>.config</code> 对象允许我们<strong>配置一些应用级的选项</strong>，例如定义一个<strong>应用级的错误处理器</strong>，用来捕获所有子组件上的错误：</p><p><img src="' + _imports_23 + '" alt="image-20231108142241023"></p><p>应用实例还提供了一些方法来<strong>注册应用范围内可用的资源</strong>，例如注册一个组件：</p><p><img src="' + _imports_24 + '" alt="image-20231108142531556"></p><p>应用实例并不只限于一个。 <code>createApp</code> API 允许你在同一个页面中创建多个共存的 Vue 应用，而且每个应用都拥有自己的用于配置和全局资源的作用域。</p><blockquote><p>可以存在多个app组件, 这里的 app 组件相较于 Vue2 中的 app 组件并不同, 它并不是一个根组件</p></blockquote><p>示例如下:</p><p><img src="' + _imports_25 + '" alt="image-20231108142646281"></p><h4 id="ref-函数" tabindex="-1"><a class="header-anchor" href="#ref-函数" aria-hidden="true">#</a> <strong>ref 函数</strong></h4><blockquote><p><strong>介绍:</strong></p><p>在 Vue 3 中，<code>ref</code> 是一个函数，用于<strong>创建一个响应式的数据引用</strong>。它可以将普通的 JavaScript 值转换为响应式的。</p><p>使用 <code>ref</code>，我们可以在 Vue 组件中定义一个具有响应式特性的变量。这意味着当变量的值发生变化时，相关的组件会自动更新，并且可以通过访问 <code>value</code> 属性来获取或修改变量的值。</p><p>示例如下:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// count 就是一个响应式数据了</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出: 0</span>\ncount<span class="token punctuation">.</span>value<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// 修改 count 的值</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出: 1</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意的是，<strong>由于 <code>ref</code> 返回的是一个对象</strong>，<strong>我们需要通过访问其 <code>value</code> 属性来获取或修改变量的值</strong>。这是因为在内部，<strong><code>ref</code> 使用了 ES6 的 <code>Proxy</code> 对象来劫持对变量的访问</strong>，从而<strong>实现响应式的特性</strong>。</p><p>可以通过 <code>ref</code> 的返回值进行解构，以便更方便地访问变量的值，例如：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> value <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出: 0</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>总结 ref 函数:</strong></p><p><code>ref</code> 允许我们在 Vue 3 组件中创建具有响应式特性的变量，使得变量的值变化时可以自动更新相关组件。这对于管理状态和实现数据驱动的视图非常有用。</p></blockquote><h4 id="reactive-函数" tabindex="-1"><a class="header-anchor" href="#reactive-函数" aria-hidden="true">#</a> reactive 函数</h4><blockquote><p>在Vue 3中，<code>reactive</code>是一个函数，用于<strong>创建响应式的数据对象</strong>。它接受一个普通的 JavaScript 对象作为参数，并<strong>返回一个代理对象</strong>，<strong>该代理对象会跟踪对象的变化并实时地更新相关的视图</strong>。</p><p>使用<code>reactive</code>函数可以将一个普通的 JavaScript 对象转换为响应式对象。当你修改响应式对象中的属性时，Vue 会自动检测到变化，并更新相关的视图。</p><p><strong>一个使用<code>reactive</code>的简单示例：</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n<span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>state<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出: 0</span>\nstate<span class="token punctuation">.</span>count<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// 修改响应式对象的属性</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>state<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出: 1</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意:</strong></p><p><code>reactive</code>只会将对象的属性转换为响应式的，而不会转换对象的原型链上的属性。如果你需要使对象原型链上的属性也变为响应式的，可以使用<code>ref</code>函数或将原型链上的属性也转换为响应式对象。</p></blockquote><hr><h3 id="_2-模板表达式" tabindex="-1"><a class="header-anchor" href="#_2-模板表达式" aria-hidden="true">#</a> 2, 模板表达式</h3><p><strong>模板插值:</strong></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>Message: {{ msg }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>v-html</strong></p><p>渲染原始html字符串，如下：</p><p><strong>动态绑定多个值</strong>，如下：</p><p><img src="' + _imports_26 + '" alt="image-20231108153917434"></p><h3 id="_3-响应式基础" tabindex="-1"><a class="header-anchor" href="#_3-响应式基础" aria-hidden="true">#</a> 3, 响应式基础</h3><p>vue 的响应式, 如下</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// count实际上是对象</span>\n\n<span class="token keyword">function</span> <span class="token function">inc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  count<span class="token punctuation">.</span>value<span class="token operator">++</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>\n    {{ count }}\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>inc<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>点我+1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>代码示例:</strong></p><p><img src="' + _imports_27 + '" alt="image-20231108204528035"></p><blockquote><p>上述代码, <em>并不是响应式的数据</em>, 即使改变了 A0的值, A2的表达式已经在JS的顺序执行中有了结果,所以并不会影响A2 的结果.</p></blockquote><p>手动update模型，如下：</p><p><img src="' + _imports_28 + '" alt="image-20231108204923527"></p><blockquote><p>于是, 可以定义一个函数, 在我们更改数据后, 调用这个 update 函数, 来更新数据, 但这只是手动更新数据, 数据并不是响应式更新</p></blockquote><p>自动update模型，如下：</p><p><img src="' + _imports_29 + '" alt="image-20231108205122161"></p><p>参考代码：</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token comment">// 只有对应才能被代理  data是原始对象，不具备响应式的</span>\n    <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token constant">A0</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n        <span class="token constant">A1</span><span class="token operator">:</span> <span class="token number">2</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">function</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token parameter">receiver</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token constant">A2</span> <span class="token operator">=</span> receiver<span class="token punctuation">.</span><span class="token constant">A0</span> <span class="token operator">+</span> receiver<span class="token punctuation">.</span><span class="token constant">A1</span><span class="token punctuation">;</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;A2:&quot;</span><span class="token punctuation">,</span> <span class="token constant">A2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">function</span> <span class="token function">whenDepsChange</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">let</span> proxy_data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n            <span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> propKey<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token comment">// 每次A0 A1发生变化会执行</span>\n                target<span class="token punctuation">[</span>propKey<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>\n                <span class="token function">callback</span><span class="token punctuation">(</span>receiver<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// target表示原始对象  propKey就是代理的key</span>\n            <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> propKey<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// receiver是proxy对象本身</span>\n                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;get...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">return</span> target<span class="token punctuation">[</span>propKey<span class="token punctuation">]</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token keyword">return</span> proxy_data<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">// 代理对象  具备响应了</span>\n    <span class="token keyword">let</span> proxy_data <span class="token operator">=</span> <span class="token function">whenDepsChange</span><span class="token punctuation">(</span>update<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// console.log(proxy_data.A0);</span>\n    <span class="token comment">// console.log(proxy_data.A1);</span>\n    proxy_data<span class="token punctuation">.</span><span class="token constant">A0</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>\n\n    proxy_data<span class="token punctuation">.</span><span class="token constant">A1</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>这里用到了 proxy 代理( ES6中的新特性), <strong><code>Proxy</code> 是 JavaScript 中的一个内置对象</strong>，它允许你创建一个代理对象，用于拦截并自定义对目标对象的操作。</p><p>通过 <code>Proxy</code>，你可以拦截并重定义目标对象上的一系列操作，如属性访问、属性赋值、函数调用等。</p><p>使用 <code>Proxy</code>，你可以在操作目标对象之前和之后执行自定义的逻辑，实现诸如属性验证、数据绑定、日志记录等功能。它提供了一种强大的机制，用于动态地创建和操作对象，而无需直接操作对象本身。</p></blockquote><p>==深层响应式== , 如下:</p><p><img src="' + _imports_30 + '" alt="image-20231108210007669"></p><p>有深层响应式，就有浅层响应式，如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>https://cn.vuejs.org/api/reactivity-advanced.html#shallowreactive\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>DOM的更新时机，如下：</p><p><img src="' + _imports_31 + '" alt="image-20231108210056057"></p><p>什么是代理对象？</p><p><img src="' + _imports_32 + '" alt="image-20231108210232185"></p><p>reactive是代理对象，如下：</p><p><img src="' + _imports_33 + '" alt="image-20231108210304847"></p><p>reactive也是深层响应式，如下：</p><p><img src="' + _imports_34 + '" alt="image-20231108211811774"></p><h4 id="shallowref" tabindex="-1"><a class="header-anchor" href="#shallowref" aria-hidden="true">#</a> <strong>shallowRef</strong></h4><blockquote><p>浅层响应式 =&gt; 只会对第一层做代理</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token function">shallowRef</span> <span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">c</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote><p>有深层响应式，就有浅层响应式，如下：</p><p><img src="' + _imports_35 + '" alt="image-20231108211821794"></p><p>代码示例:</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>info1.a.b.c<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>add1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>自增<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>info2.a.b.c<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>add2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>自增<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> reactive<span class="token punctuation">,</span> shallowRef<span class="token punctuation">,</span> triggerRef <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>\n\n<span class="token comment">// ref是定义基本数据数据的响应式</span>\n<span class="token comment">// reactive是定义引用数据类型的响应式</span>\n<span class="token comment">// 其实ref也可以定义，如果ref中写了一人引用数据类型，它的内部还是会调用reactive</span>\n<span class="token keyword">let</span> info1 <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> <span class="token function-variable function">add1</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  info1<span class="token punctuation">.</span>value<span class="token punctuation">.</span>a<span class="token punctuation">.</span>b<span class="token punctuation">.</span>c<span class="token operator">++</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment">// {a:{b:{c:3}}} 整体替换的话是响应式的，对a,b,c修改并不是响应式的</span>\n<span class="token keyword">let</span> info2 <span class="token operator">=</span> <span class="token function">shallowRef</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> <span class="token function-variable function">add2</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  info2<span class="token punctuation">.</span>value<span class="token punctuation">.</span>a<span class="token punctuation">.</span>b<span class="token punctuation">.</span>c<span class="token operator">++</span><span class="token punctuation">;</span>\n  <span class="token comment">// info2.value.a.b = { c: 888 };</span>\n  <span class="token comment">// info2.value.a = { b: { c: 888 } };</span>\n  <span class="token comment">// info2.value = { a: { b: { c: 888 } } };  // 响应式数据</span>\n\n  <span class="token function">triggerRef</span><span class="token punctuation">(</span>info2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 强制刷新</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="shallowreactive" tabindex="-1"><a class="header-anchor" href="#shallowreactive" aria-hidden="true">#</a> <strong>shallowReactive</strong></h4><p>我们也可以利用shallowReactive定义浅层响应式，如下：</p><p><img src="' + _imports_36 + '" alt="image-20231108212215938"></p><p>代码示例:</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>shallowReactive的使用<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>{{ aa }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>change<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>change<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> reactive<span class="token punctuation">,</span> shallowRef<span class="token punctuation">,</span> shallowReactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 浅层响应式</span>\n<span class="token comment">// 只能对第1层代理</span>\n<span class="token comment">// aa 是调用shallowReactive的返回值  它是一个proxy</span>\n<span class="token keyword">let</span> aa <span class="token operator">=</span> <span class="token function">shallowReactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">change</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// aa.a.b.c = 888;</span>\n  <span class="token comment">// aa.a.b = { c: 888 };</span>\n  aa<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">888</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// 是响应式的</span>\n\n  <span class="token comment">// 你是把一个普通对象赋值给了aa，aa此时就是一个普通对象了，不再是响应式</span>\n  <span class="token comment">// aa = { a: { b: { c: 888 } } };</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="响应式代理-vs-原始对象" tabindex="-1"><a class="header-anchor" href="#响应式代理-vs-原始对象" aria-hidden="true">#</a> <strong>响应式代理 vs 原始对象</strong></h4>', 151);
const _hoisted_184 = /* @__PURE__ */ createBaseVNode(
  "code",
  null,
  "reactive()",
  -1
  /* HOISTED */
);
const _hoisted_185 = {
  href: "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_186 = /* @__PURE__ */ createBaseVNode(
  "p",
  null,
  [
    /* @__PURE__ */ createBaseVNode("img", {
      src: _imports_37,
      alt: "image-20231108212414548"
    })
  ],
  -1
  /* HOISTED */
);
const _hoisted_187 = /* @__PURE__ */ createBaseVNode(
  "p",
  null,
  [
    /* @__PURE__ */ createTextVNode("为保证访问代理的一致性，对同一个原始对象调用 "),
    /* @__PURE__ */ createBaseVNode("code", null, "reactive()"),
    /* @__PURE__ */ createTextVNode(" 会总是返回同样的代理对象，而对一个已存在的代理对象调用 "),
    /* @__PURE__ */ createBaseVNode("code", null, "reactive()"),
    /* @__PURE__ */ createTextVNode(" 会返回其本身：")
  ],
  -1
  /* HOISTED */
);
const _hoisted_188 = /* @__PURE__ */ createBaseVNode(
  "p",
  null,
  [
    /* @__PURE__ */ createBaseVNode("img", {
      src: _imports_38,
      alt: "image-20231108212428472"
    })
  ],
  -1
  /* HOISTED */
);
const _hoisted_189 = /* @__PURE__ */ createBaseVNode(
  "p",
  null,
  "这个规则对嵌套对象也适用。依靠深层响应性，响应式对象内的嵌套对象依然是代理：",
  -1
  /* HOISTED */
);
const _hoisted_190 = /* @__PURE__ */ createBaseVNode(
  "p",
  null,
  [
    /* @__PURE__ */ createBaseVNode("img", {
      src: _imports_39,
      alt: "image-20231108212443282"
    })
  ],
  -1
  /* HOISTED */
);
const _hoisted_191 = /* @__PURE__ */ createBaseVNode(
  "p",
  null,
  [
    /* @__PURE__ */ createBaseVNode("strong", null, "reactive的局限性：")
  ],
  -1
  /* HOISTED */
);
const _hoisted_192 = /* @__PURE__ */ createBaseVNode(
  "strong",
  null,
  "有限的值类型",
  -1
  /* HOISTED */
);
const _hoisted_193 = /* @__PURE__ */ createBaseVNode(
  "code",
  null,
  "Map",
  -1
  /* HOISTED */
);
const _hoisted_194 = /* @__PURE__ */ createBaseVNode(
  "code",
  null,
  "Set",
  -1
  /* HOISTED */
);
const _hoisted_195 = {
  href: "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects#keyed_collections",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_196 = /* @__PURE__ */ createBaseVNode(
  "code",
  null,
  "string",
  -1
  /* HOISTED */
);
const _hoisted_197 = /* @__PURE__ */ createBaseVNode(
  "code",
  null,
  "number",
  -1
  /* HOISTED */
);
const _hoisted_198 = /* @__PURE__ */ createBaseVNode(
  "code",
  null,
  "boolean",
  -1
  /* HOISTED */
);
const _hoisted_199 = {
  href: "https://developer.mozilla.org/en-US/docs/Glossary/Primitive",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_200 = /* @__PURE__ */ createBaseVNode(
  "li",
  null,
  [
    /* @__PURE__ */ createBaseVNode("strong", null, "不能替换整个对象"),
    /* @__PURE__ */ createTextVNode("：由于 Vue 的响应式跟踪是通过属性访问实现的，因此我们必须始终保持对响应式对象的相同引用。这意味着我们不能轻易地“替换”响应式对象，因为这样的话与第一个引用的响应性连接将丢失："),
    /* @__PURE__ */ createBaseVNode("img", {
      src: _imports_40,
      alt: "image-20231108212613686"
    })
  ],
  -1
  /* HOISTED */
);
const _hoisted_201 = /* @__PURE__ */ createBaseVNode(
  "li",
  null,
  [
    /* @__PURE__ */ createBaseVNode("strong", null, "对解构操作不友好"),
    /* @__PURE__ */ createTextVNode("：当我们将响应式对象的原始类型属性解构为本地变量时，或者将该属性传递给函数时，我们将丢失响应性连接："),
    /* @__PURE__ */ createBaseVNode("img", {
      src: _imports_41,
      alt: "image-20231108212854519"
    })
  ],
  -1
  /* HOISTED */
);
const _hoisted_202 = /* @__PURE__ */ createStaticVNode('<p>ref作为reactive对象的属性，会自动解包：</p><p><img src="' + _imports_42 + '" alt="image-20231108212913551"></p><p>如果将一个新的 ref 赋值给一个关联了已有 ref 的属性，那么它会替换掉旧的 ref：<img src="' + _imports_43 + '" alt="image-20231108212929143"></p><p>与 reactive 对象不同的是，当 ref 作为响应式数组或原生集合类型(如 <code>Map</code> ) 中的元素被访问时，它<strong>不会</strong>被解包：</p><p><img src="' + _imports_44 + '" alt="image-20231108212949651"></p><p><img src="' + _imports_45 + '" alt="image-20231108213005019"></p><h3 id="_4-计算属性" tabindex="-1"><a class="header-anchor" href="#_4-计算属性" aria-hidden="true">#</a> 4, 计算属性</h3><p>官方的代码：</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Has published books:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>{{ publishedBooksMessage }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> reactive<span class="token punctuation">,</span> computed<span class="token punctuation">,</span> onMounted <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> author <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;John Doe&quot;</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">books</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token string">&quot;Vue 2 - Advanced Guide&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;Vue 3 - Basic Guide&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;Vue 4 - The Mystery&quot;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 一个计算属性 ref</span>\n<span class="token keyword">const</span> publishedBooksMessage <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> author<span class="token punctuation">.</span>books<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">&quot;Yes&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;No&quot;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>publishedBooksMessage<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可写计算属性，计算属性默认是只读的。当你尝试修改一个计算属性时，你会收到一个运行时警告。只在某些特殊场景中你可能才需要用到“可写”的属性，你可以通过同时提供 getter 和 setter 来创建，如下：</p><p><img src="' + _imports_46 + '" alt="image-20231108215447036"></p><h3 id="_5-类与样式绑定" tabindex="-1"><a class="header-anchor" href="#_5-类与样式绑定" aria-hidden="true">#</a> 5, 类与样式绑定</h3><p>绑定 class , 常见的写法</p><p><img src="' + _imports_47 + '" alt="image-20231108215730305"></p><p>:class后面也可以跟一上reactive，如下：</p><p><img src="' + _imports_48 + '" alt="image-20231108220013005"></p><p>:class后面也可以跟一个计算属性，如下：</p><p><img src="' + _imports_49 + '" alt="image-20231108220055361"></p><p>:class后面也可以跟一个数组，如下：</p><p><img src="' + _imports_50 + '" alt="image-20231108220107287"></p><p>class可以写在组件上，如下：</p><p><img src="' + _imports_51 + '" alt="image-20231108220119451"></p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>my-component</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>active<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isActive<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>my-component</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n不是动态绑定的class会渲染到父级的div上, 如果没有父级div元素那么会被包裹在自动生成的div标签中; \n\n:class 绑定的会渲染到组件上\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也可以在组件上写:class，如下：</p><p><img src="' + _imports_52 + '" alt="image-20231108220236709"></p><p>$attrs可以接收自定义属性，在vue3中是可以接收到class，如下：</p><p><img src="' + _imports_53 + '" alt="image-20231108220251214"></p><h3 id="_6-条件渲染-1" tabindex="-1"><a class="header-anchor" href="#_6-条件渲染-1" aria-hidden="true">#</a> 6, 条件渲染</h3><p><strong>v-if 可以用于 template标签</strong>, v-show (控制元素的display属性)不行 ， 如下：</p><p><img src="' + _imports_54 + '" alt="image-20231108220322625"></p><p>v-show不能写在template标签上，如下：</p><p><img src="' + _imports_55 + '" alt="image-20231108220637779"></p><h4 id="v-if-和-v-show" tabindex="-1"><a class="header-anchor" href="#v-if-和-v-show" aria-hidden="true">#</a> **v-if 和 v-show ** ?</h4><blockquote><p><code>v-if</code> 是**“真实的”按条件渲染**，因为它确保了在切换时，条件区块内的事件监听器和子组件都会被销毁与重建。</p><p><code>v-if</code> 也是<strong>惰性</strong>的：如果在初次渲染时条件值为 false，则不会做任何事。条件区块只有当条件首次变为 true 时才被渲染。</p><p>相比之下， <strong><code>v-show</code> 简单许多，元素无论初始条件如何，始终会被渲染，只有 CSS <code>display</code> 属性会被切换</strong>。</p><p>总的来说， **<code>v-if</code> 有更高的切换开销，而 <code>v-show</code> 有更高的初始渲染开销。**因此，如果需要频繁切换，则使用 <code>v-show</code> 较好；如果在运行时绑定条件很少改变，则 <code>v-if</code> 会更合适。</p></blockquote><h4 id="v-if-和-v-for" tabindex="-1"><a class="header-anchor" href="#v-if-和-v-for" aria-hidden="true">#</a> <strong>v-if 和 v-for</strong></h4><p><strong>v-for</strong></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>对于数组有三个参数：(value，name，index)  in \n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(item,index) in styleObj<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{item}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n\nkey值的作用是给Vue一个提示，能跟踪每个节点的身份，从而重用和重新排序先用元素\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(item,name,index) in styleObj<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{item}}-&gt;{{name}}-&gt;{{index}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>两者关于<strong>优先级</strong>的问题:</p><p><strong>v-if 在vue3中优先级更高 , v-for 在 vue2中优先级更高</strong></p><p>这两个指令不推荐连用, 为什么不建议连用, 两者在一起出现优先级的问题, 导致元素无法正常渲染;</p></blockquote><p>在 template 标签使用 v-for 是可以使用的, 也可以添加 key 值</p><h3 id="_7-列表渲染-1" tabindex="-1"><a class="header-anchor" href="#_7-列表渲染-1" aria-hidden="true">#</a> 7, 列表渲染</h3><p>v-for的基本使用，如下：<img src="' + _imports_56 + '" alt="image-20231108220801986"></p><p>v-for可以解构，如下：<img src="' + _imports_57 + '" alt="image-20231108220816214"></p><p>v-for嵌套v-for，如下：<img src="' + _imports_58 + '" alt="image-20231108220829232"></p><p>v-for of的用法，如下：<img src="' + _imports_59 + '" alt="image-20231108220848878"></p><p>大tempalte标签上，使用v-for，如下：<img src="' + _imports_60 + '" alt="image-20231108220919562"></p><p>不建议v-if和v-for连用，如下：</p><p><img src="' + _imports_61 + '" alt="image-20231108220953328"></p><p>解决方法:<img src="' + _imports_62 + '" alt="image-20231108221019760"></p><p>在计算属性中使用 <code>reverse()</code> 和 <code>sort()</code> 的时候务必小心！这两个方法将变更原始数组，计算函数中不应该这么做。请在调用这些方法之前创建一个原数组的副本：</p><p><img src="' + _imports_63 + '" alt="image-20231108221042269"></p><p>改变原数组的数组操作,在计算属性中需要注意, 需要拷贝一份原数组再去改变数组;</p><h3 id="_8-事件处理" tabindex="-1"><a class="header-anchor" href="#_8-事件处理" aria-hidden="true">#</a> 8, 事件处理</h3><p>事件绑定:<img src="' + _imports_64 + '" alt="image-20231108221115700"></p><h4 id="事件修饰符的使用" tabindex="-1"><a class="header-anchor" href="#事件修饰符的使用" aria-hidden="true">#</a> <strong>事件修饰符的使用</strong></h4><blockquote><p>vue3提供了一些事件修饰符,<strong>用于解决默认事件</strong></p><ol><li><strong><code>.stop</code>：阻止事件继续传播</strong>。相当于调用 <code>event.stopPropagation()</code>。</li></ol><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click.stop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleClick<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>点击<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li><strong><code>.prevent</code>：阻止事件的默认行为</strong>。相当于调用 <code>event.preventDefault()</code>。</li></ol><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">@submit.prevent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleSubmit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n <span class="token comment">&lt;!-- 表单内容 --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><strong><code>.capture</code>：使用事件捕获模式而不是事件冒泡模式</strong>。</li></ol><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">@click.capture</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleClick<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>点击<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li><strong><code>.self</code>：只在事件触发的元素自身上触发事件处理程序，而不是其子元素</strong>。</li></ol><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">@click.self</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleClick<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><strong><code>.once</code>：只触发一次事件处理程序，之后自动解绑</strong>。</li></ol><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click.once</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleClick<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>点击一次<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li><code>.passive</code>：指示事件监听器不会调用 <code>event.preventDefault()</code>。</li></ol><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token comment">&lt;!-- 在滚动事件中使用.passive修饰符，可以提高性能 --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">@scroll.passive</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleScroll<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>滚动<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这些事件修饰符可以组合使用。例如，可以同时使用 <code>.stop</code> 和 <code>.prevent</code> 修饰符阻止事件传播并阻止默认行为：</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">@click.stop.prevent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleClick<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>链接<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>请注意，Vue 3中移除了<code>.once</code>事件修饰符。相反，你可以使用 <code>v-once</code> 指令来<strong>实现只渲染一次的行为</strong>。</p><p><strong>并且, 使用事件修饰符的顺序不同,最终也可能会影响到渲染的效果</strong></p></blockquote><h3 id="_9-表单输入绑定" tabindex="-1"><a class="header-anchor" href="#_9-表单输入绑定" aria-hidden="true">#</a> 9, 表单输入绑定</h3><p>v-mode的使用：</p><p><img src="' + _imports_65 + '" alt="image-20231108222636544"></p><p>复选框：</p><p><img src="' + _imports_66 + '" alt="image-20231108222650091"></p><p>多个复选框</p><p><img src="' + _imports_67 + '" alt="image-20231108222726130"></p><p>单选按钮</p><p><img src="' + _imports_68 + '" alt="image-20231108222739642"></p><p>选择器：</p><p><img src="' + _imports_69 + '" alt="image-20231108222754546"></p><p>多选：</p><p><img src="' + _imports_70 + '" alt="image-20231108222806506"></p><p>复选框：</p><p><img src="' + _imports_71 + '" alt="image-20231108222816398"></p><h3 id="_10-生命周期" tabindex="-1"><a class="header-anchor" href="#_10-生命周期" aria-hidden="true">#</a> 10, 生命周期</h3><p>vue3中的生命周期钩子</p>', 72);
const _hoisted_274 = {
  href: "https://cn.vuejs.org/api/composition-api-lifecycle.html#onmounted",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_275 = {
  href: "https://cn.vuejs.org/api/composition-api-lifecycle.html#onupdated",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_276 = {
  href: "https://cn.vuejs.org/api/composition-api-lifecycle.html#onunmounted",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_277 = {
  href: "https://cn.vuejs.org/api/composition-api-lifecycle.html#onbeforemount",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_278 = {
  href: "https://cn.vuejs.org/api/composition-api-lifecycle.html#onbeforeupdate",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_279 = {
  href: "https://cn.vuejs.org/api/composition-api-lifecycle.html#onbeforeunmount",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_280 = {
  href: "https://cn.vuejs.org/api/composition-api-lifecycle.html#onerrorcaptured",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_281 = {
  href: "https://cn.vuejs.org/api/composition-api-lifecycle.html#onrendertracked",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_282 = {
  href: "https://cn.vuejs.org/api/composition-api-lifecycle.html#onrendertriggered",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_283 = {
  href: "https://cn.vuejs.org/api/composition-api-lifecycle.html#onactivated",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_284 = {
  href: "https://cn.vuejs.org/api/composition-api-lifecycle.html#ondeactivated",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_285 = {
  href: "https://cn.vuejs.org/api/composition-api-lifecycle.html#onserverprefetch",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_286 = /* @__PURE__ */ createStaticVNode('<p>onMounted，组件挂载完成后执行：</p><p><img src="' + _imports_72 + '" alt="image-20231108222845175"></p><p>onUpdated，响应式状态变化后，更新其DOM，DOM更新完后调用：</p><p><img src="' + _imports_73 + '" alt="image-20231108222902441"></p><p>onUnMounted 组件实例被卸载的时候调用:</p><p><img src="' + _imports_74 + '" alt="image-20231108222924116"></p><p>Vue 生命周期的示例图</p><p><img src="' + _imports_75 + '" alt="image-20231110202451012"></p><p><strong>Vue3 中的生命周期</strong></p><ul><li><p>1、setup() : 开始创建组件之前，在 beforeCreate 和 created 之前执行，创建的是 <strong>data</strong> 和 <strong>method</strong></p></li><li><p>2、onBeforeMount() : 组件挂载到节点上之前执行的函数；</p></li><li><p>3、onMounted() : 组件挂载完成后执行的函数；</p></li><li><p>4、onBeforeUpdate(): 组件更新之前执行的函数；</p></li><li><p>5、onUpdated(): 组件更新完成之后执行的函数；</p></li><li><p>6、onBeforeUnmount(): 组件卸载之前执行的函数；</p></li><li><p>7、onUnmounted(): 组件卸载完成后执行的函数；</p></li><li><p>8、onActivated(): 被包含在 keep-alive 中的组件，会多出两个生命周期钩子函数，被激活时执行；</p></li><li><p>9、onDeactivated(): 比如从 A 组件，切换到 B 组件，A 组件消失时执行；</p></li><li><p>10、onErrorCaptured(): 当捕获一个来自子孙组件的异常时激活钩子函数。</p></li></ul><p><strong>Vue2.x 和 Vue3.x 的对比</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>vue2           -------&gt;      vue3\n \nbeforeCreate   --------&gt;      setup(()=&gt;{})\ncreated        --------&gt;      setup(()=&gt;{})\nbeforeMount    --------&gt;      onBeforeMount(()=&gt;{})\nmounted        --------&gt;      onMounted(()=&gt;{})\nbeforeUpdate   --------&gt;      onBeforeUpdate(()=&gt;{})\nupdated        --------&gt;      onUpdated(()=&gt;{})\nbeforeDestroy  --------&gt;      onBeforeUnmount(()=&gt;{})\ndestroyed      --------&gt;      onUnmounted(()=&gt;{})\nactivated      --------&gt;      onActivated(()=&gt;{})\ndeactivated    --------&gt;      onDeactivated(()=&gt;{})\nerrorCaptured  --------&gt;      onErrorCaptured(()=&gt;{})\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>vue3 中新增的 <strong>setup 语法糖</strong> , 新增了 <code>setup</code> 函数作为组件选项的一部分，它是一个用于组件配置的特殊函数。<code>setup</code> 函数的引入是为了更好地支持 Composition API，它可以替代 Vue 2 中的 <code>data</code>、<code>computed</code>、<code>methods</code> 等选项。</p></blockquote><h3 id="_11-侦听器" tabindex="-1"><a class="header-anchor" href="#_11-侦听器" aria-hidden="true">#</a> 11, 侦听器</h3><p>先看官方的案例：</p><p><img src="' + _imports_76 + '" alt="image-20231108222938560"></p><p>监听器的多种写法：</p><p><img src="' + _imports_77 + '" alt="image-20231108223025624"></p><p><img src="' + _imports_78 + '" alt="image-20231108223038506"></p><p><img src="' + _imports_79 + '" alt="image-20231108223046056"></p><p>不能直接侦听响应式对象的属性值，例如:</p><p><img src="' + _imports_80 + '" alt="image-20231108223058902"></p><p>深层侦听</p><p><img src="' + _imports_81 + '" alt="image-20231108223115376"></p><p><img src="' + _imports_82 + '" alt="image-20231108223139220"></p><p>与 Vue2 中的 watch 有相同之处</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">watch</span> <span class="token punctuation">(</span>\n	<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> count<span class="token punctuation">;</span> \n	<span class="token punctuation">{</span>\n	 <span class="token literal-property property">deep</span> <span class="token operator">:</span><span class="token boolean">true</span>  <span class="token comment">// 开启深度监听</span>\n   <span class="token literal-property property">immediate</span><span class="token operator">:</span> <span class="token boolean">true</span>   <span class="token comment">// 立即执行 </span>\n	<span class="token punctuation">}</span>\n<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>watchEffect</strong></p><blockquote><p>侦听器的另一种写法</p></blockquote><p><img src="' + _imports_83 + '" alt="image-20231108223235536"></p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>watchEffect的使用<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>num<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>num++<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>自增<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>foo<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>foo--<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>自减<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bar.a<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bar.a++<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>改变<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> computed<span class="token punctuation">,</span> watchEffect<span class="token punctuation">,</span> watchPostEffect<span class="token punctuation">,</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> bar <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 下面的代码，一开始只会执行一次，后面不管哪个状态发生变化都不会执行</span>\n<span class="token function">watchEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;watchEffect01...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 在回调函数中，用到了num，当num变化了，回调函数就会执行</span>\n<span class="token comment">// num叫watchEffect的依赖</span>\n<span class="token function">watchEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;watchEffect02...&quot;</span><span class="token punctuation">,</span> num<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token function">watchEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;watchEffect03...&quot;</span><span class="token punctuation">,</span> foo<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token function">watchEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;watchEffect04...&quot;</span><span class="token punctuation">,</span> foo<span class="token punctuation">.</span>value<span class="token punctuation">,</span> num<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>回调的执行时机：</p><p><img src="' + _imports_84 + '" alt="image-20231108223300876"></p><p>参考代码：</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>watchEffect的使用<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>num<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>h1box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>num++<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>自增<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>foo<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>foo--<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>自减<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bar.a<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bar.a++<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>改变<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> computed<span class="token punctuation">,</span> watchEffect<span class="token punctuation">,</span> watchPostEffect<span class="token punctuation">,</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> bar <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// watchEffect(</span>\n<span class="token comment">//   () =&gt; {</span>\n<span class="token comment">//     console.log(&quot;watchEffect01...&quot;, foo.value, num.value);</span>\n<span class="token comment">//     console.log(document.getElementById(&quot;h1box&quot;).innerHTML);</span>\n<span class="token comment">//   },</span>\n<span class="token comment">//   { flush: &quot;pre&quot; }</span>\n<span class="token comment">// );</span>\n<span class="token comment">// watchEffect(</span>\n<span class="token comment">//   () =&gt; {</span>\n<span class="token comment">//     console.log(&quot;watchEffect01...&quot;, foo.value, num.value);</span>\n<span class="token comment">//     console.log(document.getElementById(&quot;h1box&quot;).innerHTML);</span>\n<span class="token comment">//   },</span>\n<span class="token comment">//   { flush: &quot;post&quot; }</span>\n<span class="token comment">// );</span>\n<span class="token function">watchPostEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;watchEffect01...&quot;</span><span class="token punctuation">,</span> foo<span class="token punctuation">.</span>value<span class="token punctuation">,</span> num<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;h1box&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>停止侦听：</p><p><img src="' + _imports_85 + '" alt="image-20231108223403447"></p><p><strong>watch 和 watchEffect ?</strong></p><blockquote><p><em>Vue3 中的两个用于监视数据变化的功能</em></p><p><strong>Watch</strong></p><p><code>watch</code> 是一个选项，用于在侦听特定数据的变化时执行回调函数。它允许你指定要监视的数据源，并定义一个回调函数来处理数据变化时的操作。<code>watch</code> 可以监视单个数据、深度嵌套的数据、计算属性、方法的返回值等。</p><p>示例:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">watch</span><span class="token punctuation">(</span><span class="token string">&#39;dataProperty&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">newValue<span class="token punctuation">,</span> oldValue</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n<span class="token comment">// 处理数据变化的操作</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>watch</code> 还可以接受一个配置对象，用于更详细地定义监视行为，例如添加 <code>immediate</code> 选项以在初始时立即执行回调函数、使用 <code>deep</code> 选项深度监视嵌套对象等。</p><p><strong>watchEffect</strong></p><p><code>watchEffect</code> 是一个函数，它会立即执行并自动追踪其依赖项，并在任何依赖项变化时重新运行。换句话说，<code>watchEffect</code> 会自动跟踪其内部使用的响应式数据，并在这些数据变化时重新运行回调函数</p><p>示例:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">watchEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n<span class="token comment">// 使用响应式数据进行操作</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>watchEffect</code> 会自动追踪回调函数内部使用的响应式数据，并在这些数据变化时重新运行回调函数。这使得它非常适合处理不需要明确指定要监视的数据的场景。</p><p><strong>使用方式</strong></p><p><code>watch</code> 和 <code>watchEffect</code> 的使用方式有所不同，具体使用哪个取决于你的需求。如果你需要明确指定要监视的数据，或者需要在数据变化时获取新旧值，那么使用 <code>watch</code> 是更合适的选项。而如果你只关心某些依赖项的变化，并且不需要访问新旧值，那么使用 <code>watchEffect</code> 可能更简洁和方便</p></blockquote><p><strong>watchPostEffect</strong></p><p>等待dom更新完毕之后执行</p><h3 id="_12-模板引用" tabindex="-1"><a class="header-anchor" href="#_12-模板引用" aria-hidden="true">#</a> 12, 模板引用</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>声明一个 ref 存放该与元素的引用 (这里的ref并不是声明响应式数据)\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>defineExpose</strong></p><p>在 setup语法糖中, 无法通过ref 拿到子组件的上海局, 可以用 defineExpose 暴露子组件的方法和数据</p><hr><h3 id="_13-组件基础" tabindex="-1"><a class="header-anchor" href="#_13-组件基础" aria-hidden="true">#</a> 13, 组件基础</h3><p>组件的另一种写法, 写成js文件，如下：</p><p><img src="' + _imports_86 + '" alt="image-20231113141601967"></p><p><strong>关于命名</strong>：</p><blockquote><p>使用大驼峰命名</p><p>或者使用中划线命名的方式, 和大驼峰命名效果一样</p></blockquote><p><img src="' + _imports_87 + '" alt="image-20231113141716389"></p><h2 id="四-深入组件" tabindex="-1"><a class="header-anchor" href="#四-深入组件" aria-hidden="true">#</a> 四, 深入组件</h2><hr><h3 id="_1-注册" tabindex="-1"><a class="header-anchor" href="#_1-注册" aria-hidden="true">#</a> 1, 注册</h3><hr><h3 id="_2-组件的-v-model" tabindex="-1"><a class="header-anchor" href="#_2-组件的-v-model" aria-hidden="true">#</a> 2, 组件的 v-model</h3><p>在Vue2中，v-model 写在组件上，等价于 :value + @input ；在Vue3中，v-model 等价于 :modelValue + @update:modelValue 。 代码如下:</p><p><img src="' + _imports_88 + '" alt="image-20231113141910959"></p><p><strong>Vue3 中的 v-model</strong></p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token comment">&lt;!-- 自定义属性         自定义事件					--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>son</span>  <span class="token attr-name">:modelValue</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lang<span class="token punctuation">&quot;</span></span>  <span class="token attr-name"><span class="token namespace">@update:</span>modelValue</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lang = $event<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>son</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token comment">&lt;!--:price  ===  :modelValue=&quot;price&quot;	 @update:price =&quot;price = $event&quot; 	--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>son</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lang<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:price</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>price<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>son</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_3-透传-attribute" tabindex="-1"><a class="header-anchor" href="#_3-透传-attribute" aria-hidden="true">#</a> 3, 透传 Attribute</h3><p><em>App组件可以实现深层透传, 组件的深层级也可以获得到透传的数据</em></p><p><strong>class 透传</strong></p><p><img src="' + _imports_89 + '" alt="image-20231113142255793"></p><p>透传的class不会覆盖原有的，如下：</p><p><img src="' + _imports_90 + '" alt="image-20231113142407600"></p><p>事件也可以透传, 如下:</p><p><img src="' + _imports_91 + '" alt="image-20231113142446582"></p><p>深层透传，如下：</p><p><img src="' + _imports_92 + '" alt="image-20231113142621287"></p><p>禁止透传：</p><p><img src="' + _imports_93 + '" alt="image-20231113142735731"></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 在组件内定义方法,</span>\n<span class="token function">defineOptions</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">inheritAttrs</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>$attrs，如下：</p><p><img src="' + _imports_94 + '" alt="image-20231113223558321"></p><p>这个 <code>$attrs</code> 对象包含了除组件所声明的 <code>props</code> 和 <code>emits</code> 之外的所有其他 attribute，例如 <code>class</code> ， <code>style</code> ， <code>v-on</code> 监听器等等。</p><p><img src="' + _imports_95 + '" alt="image-20231113223632000"></p><p>透传到非根组件上，如下：</p><p><img src="' + _imports_96 + '" alt="image-20231113223645752"></p><p>在 JavaScript 中访问透传 Attributes，如下：</p><p><img src="' + _imports_97 + '" alt="image-20231113223702878"></p><p><strong>如果不想实现透传?</strong></p><p>通过设置 inheritAttrs 选项(defineOptions) 为 false , 通过 $attrs 来控制透传的位置</p><hr><h3 id="_4-依赖注入" tabindex="-1"><a class="header-anchor" href="#_4-依赖注入" aria-hidden="true">#</a> 4, 依赖注入</h3><ul><li>provide 提供依赖</li><li>inject 注入数据</li></ul><p><img src="' + _imports_98 + '" alt="image-20231113223823002"></p><p>provide 提供数据</p><p><em>使用场景: 封装组件库</em></p><p>一个组件可以多次调用 <code>provide()</code> ：</p><p><img src="' + _imports_99 + '" alt="image-20231113223937551"></p><hr><h3 id="_5-插槽" tabindex="-1"><a class="header-anchor" href="#_5-插槽" aria-hidden="true">#</a> 5, 插槽</h3><h3 id="_6-整理-vue3-组合式-api-和-vue3-的变化" tabindex="-1"><a class="header-anchor" href="#_6-整理-vue3-组合式-api-和-vue3-的变化" aria-hidden="true">#</a> 6, 整理 Vue3 组合式 API 和 Vue3 的变化</h3><p>参考：https://yujingbo1023.github.io/feblog/Framework/vue3/01.html#%E4%B8%80%E3%80%81vue3%E5%85%A8%E5%AE%B6%E6%A1%B6%E4%BB%8B%E7%BB%8D</p><h2 id="五-路由" tabindex="-1"><a class="header-anchor" href="#五-路由" aria-hidden="true">#</a> 五, 路由</h2><hr><h3 id="_1-安装路由" tabindex="-1"><a class="header-anchor" href="#_1-安装路由" aria-hidden="true">#</a> 1, 安装路由</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>安装vue3 对应的路由版本 vue-router4\n<span class="token function">npm</span> i vue-router@4\n\n全局安装yarn\n<span class="token function">npm</span> i <span class="token function">yarn</span> <span class="token parameter variable">-g</span> \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-使用路由" tabindex="-1"><a class="header-anchor" href="#_2-使用路由" aria-hidden="true">#</a> 2, 使用路由</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createRouter<span class="token punctuation">,</span> createWebHistory <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-router&#39;</span>\n\n<span class="token comment">// routes中的规则和vue2是一样的</span>\n<span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span>\n	<span class="token punctuation">{</span>\n    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">redirect</span><span class="token operator">:</span>Home<span class="token punctuation">;</span>   <span class="token comment">// 重定向</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n\n<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">createRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">history</span><span class="token operator">:</span> <span class="token function">createWebHistory</span><span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">BASE_URL</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// i<wbr>mport.meta.env.BASE_URL</span>\n  routes\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> router\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><ol><li><code>createWebHistory</code> 函数是 Vue Router 提供的一个用于创建路由历史记录的工厂函数。它会返回一个路由历史对象，用于管理浏览器的导航历史记录。该函数在 Vue Router 4 中引入，用于支持基于 HTML5 History API 的路由模式。</li><li><code>i<wbr>mport.meta.env.BASE_URL</code> 是一个特殊的变量，用于获取当前项目的基础 URL。它是在构建过程中由 Vue CLI 自动生成的，并且会根据你的构建设置和部署环境进行动态配置。</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>**`createWebHistory(i<wbr>mport.meta.env.BASE_URL)` 的作用**是创建一个基于 HTML5 History API 的路由历史记录对象，并将当前项目的基础 URL 作为参数传递给 `createWebHistory` 函数。这样做的目的是让 Vue Router 在处理路由时，能够正确地解析和处理基于基础 URL 的路由路径。\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>例如，如果你的项目部署在域名为 `https://example.com/my-app/` 的路径下，那么 `i<wbr>mport.meta.env.BASE_URL` 会被设置为 `/my-app/`，而 `createWebHistory(i<wbr>mport.meta.env.BASE_URL)` 将创建一个路由历史记录对象，以便 Vue Router 可以正确地解析和处理 `/my-app/` 后面的路由路径。\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote><h3 id="_3-路由守卫" tabindex="-1"><a class="header-anchor" href="#_3-路由守卫" aria-hidden="true">#</a> 3, 路由守卫</h3><p><em>Vue 3 中，可以使用 Vue Router 提供的路由守卫来对路由进行拦截和控制。</em></p><p>和之前有点不一样的，如下：</p><p><img src="' + _imports_100 + '" alt="image-20231110220911638"></p><blockquote><ol><li><p><strong>beforeEach:</strong> 全局前置守卫。可以在路由跳转之前进行拦截和处理，用于验证用户身份、权限控制等。</p></li><li><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createRouter<span class="token punctuation">,</span> createWebHistory <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-router&#39;</span><span class="token punctuation">;</span>\n                                                                                     \n<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">createRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">history</span><span class="token operator">:</span> <span class="token function">createWebHistory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">routes</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                                                                                     \nrouter<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 在这里进行拦截和处理逻辑</span>\n  <span class="token comment">// 例如验证用户身份、权限控制等</span>\n  <span class="token comment">// 调用 next() 以继续路由跳转</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>beforeResolve:</strong> 全局解析守卫。在路由组件解析之前触发，用于处理异步路由组件的加载和等待。</p></li><li><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>router<span class="token punctuation">.</span><span class="token function">beforeResolve</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 在这里处理异步路由组件的加载和等待</span>\n  <span class="token comment">// 调用 next() 以继续路由解析</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>afterEach:</strong> 全局后置守卫。在路由跳转完成后触发，可以用于处理页面切换后的逻辑操作。</p></li><li><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>router<span class="token punctuation">.</span><span class="token function">afterEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> <span class="token keyword">from</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 在这里处理页面切换后的逻辑操作</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>此外，Vue Router 4 还引入了局部守卫的概念，允许在单个路由配置中定义特定的守卫函数。以下是一些常用的局部守卫函数：</p><ul><li><p><code>beforeEnter</code>: 在路由进入前触发，只作用于当前路由配置。</p></li><li><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/admin&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">component</span><span class="token operator">:</span> AdminComponent<span class="token punctuation">,</span>\n    <span class="token function-variable function">beforeEnter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 在这里进行特定路由的拦截和处理</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>beforeRouteEnter</code>: 在路由进入前触发，可以访问组件实例，但在此时无法访问组件实例的 <code>this</code> 上下文。</p></li><li><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/profile&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">component</span><span class="token operator">:</span> ProfileComponent<span class="token punctuation">,</span>\n    <span class="token function-variable function">beforeEnter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 在这里进行路由进入前的处理</span>\n      <span class="token comment">// 注意：此时无法访问组件实例的 `this`</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>beforeRouteLeave</code>: 在路由离开前触发，可以访问组件实例，用于处理离开当前路由前的逻辑。</p></li><li><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/edit&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">component</span><span class="token operator">:</span> EditComponent<span class="token punctuation">,</span>\n    <span class="token function-variable function">beforeRouteLeave</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 在这里进行路由离开前的处理</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></blockquote><h3 id="_4-router-和-route" tabindex="-1"><a class="header-anchor" href="#_4-router-和-route" aria-hidden="true">#</a> 4, $router 和 $route</h3><p>直接上代码，从首页面跳到分类页，如下：</p><p><img src="' + _imports_101 + '" alt="image-20231110220949484"></p><h2 id="六-pinia-状态管理" tabindex="-1"><a class="header-anchor" href="#六-pinia-状态管理" aria-hidden="true">#</a> 六, pinia 状态管理</h2><hr><h3 id="_1-pinia-介绍" tabindex="-1"><a class="header-anchor" href="#_1-pinia-介绍" aria-hidden="true">#</a> 1, pinia 介绍</h3><p>官方地址：https://pinia.vuejs.org/zh/introduction.html</p><ul><li>options API</li><li>composition API</li></ul><p><strong>Pinia 的特点</strong> : 异步和同步方法都在 actions 中</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>安装 Pinia 状态管理\n<span class="token function">npm</span> i pinia\n<span class="token function">npm</span> i axios@0.27.2\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>安装操作</strong> :</p><p><img src="' + _imports_102 + '" alt="image-20231110221047460"></p><p><strong>Pinia 相较于 Vuex ?</strong></p><blockquote><p>Pinia 是一个基于 Vue 3 的状态管理库，而 Vuex 是 Vue 2 中官方提供的状态管理库。下面是 Pinia 相较于 Vuex 的一些特点和区别：</p><ol><li><strong>面向 Vue 3：</strong> Pinia 是专门为 Vue 3 设计的状态管理库，而 Vuex 是为 Vue 2 开发的。这意味着 Pinia 可以充分利用 Vue 3 的新特性和生态系统，提供更好的性能和开发体验。</li><li><strong>使用 Composition API：</strong> Pinia 基于 Vue 3 的 Composition API 进行开发，这使得在编写状态管理逻辑时可以使用 Composition API 的优势，例如组合函数、响应式数据和生命周期钩子等。</li><li><strong>TypeScript 支持：</strong> Pinia 对 TypeScript 有很好的支持，可以提供类型推断和类型安全的状态管理。你可以在定义状态、操作和 getter 时使用 TypeScript 类型，以便在开发过程中捕获潜在的错误。</li><li><strong>模块化和命名空间：</strong> Vuex 使用模块的方式来组织状态，而 Pinia 引入了类似的概念，称为 Store。每个 Pinia 的 Store 都是独立的，可以包含自己的状态、操作和 getter，可以更好地组织和封装相关的功能。</li><li><strong>更轻量和精简：</strong> Pinia 的设计目标是提供一个更轻量和精简的状态管理解决方案。相对于 Vuex，Pinia 的包大小更小，API 更简洁，没有一些 Vuex 中较少使用的特性，使得它更容易上手和维护。</li></ol></blockquote><h3 id="_2-pinia-的使用" tabindex="-1"><a class="header-anchor" href="#_2-pinia-的使用" aria-hidden="true">#</a> 2, Pinia 的使用</h3><p>创建仓库, 如下:</p><p><img src="' + _imports_103 + '" alt="image-20231110221119299"></p><p>参考代码:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>\n    defineStore\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;pinia&quot;</span>\n\n<span class="token keyword">const</span> useCountStore <span class="token operator">=</span> <span class="token function">defineStore</span><span class="token punctuation">(</span><span class="token string">&quot;Count&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    <span class="token function-variable function">state</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">num</span><span class="token operator">:</span> <span class="token number">1</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">getters</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token function">total1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>num <span class="token operator">*</span> <span class="token number">10</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token function">total2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>total1 <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// 这里的actions，可以直接修改state数据，无论是同步代码，还是异步代码。</span>\n    <span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token function">addNum</span><span class="token punctuation">(</span><span class="token parameter">step <span class="token operator">=</span> <span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>num <span class="token operator">+=</span> step<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> useCountStore\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在main.js中使用之，如下：</p><p><img src="' + _imports_104 + '" alt="image-20231110221229620"></p><p>在组件中就可以使用之，如下：</p><p><img src="' + _imports_105 + '" alt="image-20231110221241824"></p><p>修改仓库中的状态，如下：</p><p><img src="' + _imports_106 + '" alt="image-20231110221253470"></p><p>再定义一个仓库，写点异步代码，写ajax发请求的代码，可能会产生跨域问题，<strong>前端通过代码解决跨域</strong>，如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// vite.config.js 文件下</span>\n\n<span class="token keyword">import</span> <span class="token punctuation">{</span>\n    fileURLToPath<span class="token punctuation">,</span>\n    <span class="token constant">URL</span>\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;node:url&#39;</span>\n\n<span class="token keyword">import</span> <span class="token punctuation">{</span>\n    defineConfig\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite&#39;</span>\n<span class="token keyword">import</span> vue <span class="token keyword">from</span> <span class="token string">&#39;@vitejs/plugin-vue&#39;</span>\n\n<span class="token comment">// https://vitejs.dev/config/</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token function">vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">resolve</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">alias</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token string-property property">&#39;@&#39;</span><span class="token operator">:</span> <span class="token function">fileURLToPath</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span><span class="token string">&#39;./src&#39;</span><span class="token punctuation">,</span>\n                <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">server</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">8888</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">proxy</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token string-property property">&#39;/api&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">&#39;https://cnodejs.org/&#39;</span><span class="token punctuation">,</span>\n                <span class="token literal-property property">changeOrigin</span><span class="token operator">:</span> <span class="token boolean">true</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 action 中发请求，如下：</p><p><img src="' + _imports_107 + '" alt="image-20231110221426955"></p><p>在组件中，使用之，如下：</p><p><img src="' + _imports_108 + '" alt="image-20231110221451507"></p><p>浏览器测试之，看仓库中有没有数据，如下：</p><p><img src="' + _imports_109 + '" alt="image-20231110221503175"></p><p>在模板中渲染之，如下：</p><p><img src="' + _imports_110 + '" alt="image-20231110221519138"></p><p>完整代码:</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>Home<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{{ store.num }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{{ store.total1 }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{{ store.total2 }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>change<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>change<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token punctuation">/&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pageHandle(-1)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>上一页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pageHandle(1)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>下一页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(row, idx) in store2.list<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>row.id<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>idx<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>：\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>row.title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> onMounted<span class="token punctuation">,</span> watchEffect<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> useCountStore <span class="token keyword">from</span> <span class="token string">&quot;../store/useCountStore&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> useCnodeStore <span class="token keyword">from</span> <span class="token string">&quot;../store/useCnodeStore&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">let</span> store <span class="token operator">=</span> <span class="token function">useCountStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> store2 <span class="token operator">=</span> <span class="token function">useCnodeStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">let</span> <span class="token function-variable function">change</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  store<span class="token punctuation">.</span><span class="token function">addNum</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">let</span> <span class="token function-variable function">pageHandle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>value <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> num <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n  page<span class="token punctuation">.</span>value <span class="token operator">+=</span> num<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token function">watchEffect</span><span class="token punctuation">(</span>\n  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    store2<span class="token punctuation">.</span><span class="token function">getList</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">page</span><span class="token operator">:</span> page<span class="token punctuation">.</span>value<span class="token punctuation">,</span> <span class="token literal-property property">limit</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token literal-property property">tab</span><span class="token operator">:</span> <span class="token string">&quot;ask&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> <span class="token literal-property property">flush</span><span class="token operator">:</span> <span class="token string">&quot;pre&quot;</span> <span class="token punctuation">}</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-解构时造成的响应式丢失" tabindex="-1"><a class="header-anchor" href="#_3-解构时造成的响应式丢失" aria-hidden="true">#</a> 3, 解构时造成的响应式丢失</h3><p>解构状态或计算属性时，可能造成响应式丢失，通过storeToRefs解决，如下：</p><p><img src="' + _imports_111 + '" alt="image-20231110221640358"></p><h3 id="_3-pinia-中的-api" tabindex="-1"><a class="header-anchor" href="#_3-pinia-中的-api" aria-hidden="true">#</a> 3, Pinia 中的 API</h3><p>storeToRefs</p><p>从store中解构出来的状态会丢失响应式, 可以用这个 API 来解决响应式丢失的问题;</p><h3 id="_4-组合式写法" tabindex="-1"><a class="header-anchor" href="#_4-组合式写法" aria-hidden="true">#</a> 4, 组合式写法</h3><p><em>vue2 中的 vuex 都采用的选项式 (option) 写法, vue3 中的 pinia 也可以使用选项式写法, <strong>pinia 也可以使用组合式写法,</strong> 相比以往的选项式更加优雅</em></p><p>之前我们使用的是选项式写法</p><p><img src="' + _imports_112 + '" alt="image-20231110221718661"></p><p>在Pinia中还有一种写法，组合式写法,如下:</p><p><img src="' + _imports_113 + '" alt="image-20231110130406485"></p><p>Home.vue 参考代码</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>Home<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{{ num }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{{ total1 }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>change<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>change<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> onMounted<span class="token punctuation">,</span> watchEffect<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> storeToRefs <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;pinia&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> useCountStore <span class="token keyword">from</span> <span class="token string">&quot;../store/useCountStore&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> useCnodeStore <span class="token keyword">from</span> <span class="token string">&quot;../store/useCnodeStore&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">let</span> store <span class="token operator">=</span> <span class="token function">useCountStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> num<span class="token punctuation">,</span> total1 <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">storeToRefs</span><span class="token punctuation">(</span>store<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">let</span> <span class="token function-variable function">change</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  store<span class="token punctuation">.</span><span class="token function">addNum</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>仓库：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>\n    defineStore\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;pinia&quot;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>\n    ref<span class="token punctuation">,</span>\n    computed\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span>\n\n<span class="token keyword">const</span> useCountStore <span class="token operator">=</span> <span class="token function">defineStore</span><span class="token punctuation">(</span><span class="token string">&quot;Count&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">let</span> total1 <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> num<span class="token punctuation">.</span>value <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span>\n    <span class="token keyword">let</span> total2 <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> total1<span class="token punctuation">.</span>value <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">let</span> <span class="token function-variable function">addNum</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">step</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        num<span class="token punctuation">.</span>value <span class="token operator">+=</span> step<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n        num<span class="token punctuation">,</span>\n        addNum\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> useCountStore\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-其它api" tabindex="-1"><a class="header-anchor" href="#_5-其它api" aria-hidden="true">#</a> 5, 其它API</h3><p>$reset</p><p>$subscribe</p><h2 id="七-vue3-项目" tabindex="-1"><a class="header-anchor" href="#七-vue3-项目" aria-hidden="true">#</a> 七, Vue3 项目</h2><hr><p><em>利用 vue3 的语法, 重复刻 Vue2 项目</em></p><p><strong>初始化项目</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> init vue@latest\n\nVue.js - The Progressive JavaScript Framework\n\n√ 请输入项目名称： <span class="token punctuation">..</span>. duolegou_shop\n√ 是否使用 TypeScript 语法？ <span class="token punctuation">..</span>. 否 / 是\n√ 是否启用 JSX 支持？ <span class="token punctuation">..</span>. 否 / 是\n√ 是否引入 Vue Router 进行单页面应用开发？ <span class="token punctuation">..</span>. 否 / 是\n√ 是否引入 Pinia 用于状态管理？ <span class="token punctuation">..</span>. 否 / 是\n√ 是否引入 Vitest 用于单元测试？ <span class="token punctuation">..</span>. 否 / 是\n√ 是否要引入一款端到端（End to End）测试工具？ » 不需要\n√ 是否引入 ESLint 用于代码质量检测？ <span class="token punctuation">..</span>. 否 / 是\n\n正在构建项目 G:<span class="token punctuation">\\</span>Vue-project<span class="token punctuation">\\</span>duolegou_shop<span class="token punctuation">..</span>.\n\n项目构建完成，可执行以下命令：\n  <span class="token builtin class-name">cd</span> duolegou_shop\n  <span class="token function">npm</span> <span class="token function">install</span>\n  <span class="token function">npm</span> run dev\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>添加到 git 仓库, 使用约定式规范提交</em></p><hr><h3 id="_1-配置-rem" tabindex="-1"><a class="header-anchor" href="#_1-配置-rem" aria-hidden="true">#</a> 1, 配置 rem</h3><p><em>保证多设备尺寸大小适配, 使用插件</em></p><p>安装 lib-flexible和postcss-pxtorem，如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i lib-flexible\n\n<span class="token function">npm</span> i postcss-pxtorem <span class="token parameter variable">-D</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建一个postcss.config.cjs，如下：</p><p><img src="' + _imports_114 + '" alt="image-20231113225618201"></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string-property property">&#39;postcss-pxtorem&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">rootValue</span><span class="token operator">:</span> <span class="token number">37.5</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">propList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;*&#39;</span><span class="token punctuation">]</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在main.js中，引入lib-flexible，如下：</p><p><img src="' + _imports_115 + '" alt="image-20231113230336491"></p><hr><h3 id="_2-配置-vant" tabindex="-1"><a class="header-anchor" href="#_2-配置-vant" aria-hidden="true">#</a> 2, 配置 vant</h3><p><em>Vue3 对应的组件 vant4</em></p><p>官方地址：https://vant-contrib.gitee.io/vant/#/zh-CN/home</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>安装最新版本 vant\n<span class="token function">npm</span> i vant \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>配置按需引入，如下：</p><p><img src="' + _imports_116 + '" alt="image-20231113230830202"></p><p>安装插件，如下：</p><p><img src="' + _imports_117 + '" alt="image-20231113230840855"></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 通过 npm 安装</span>\n<span class="token function">npm</span> i @vant/auto-import-resolver unplugin-vue-components <span class="token parameter variable">-D</span>\n\n<span class="token comment"># 通过 yarn 安装</span>\n<span class="token function">yarn</span> <span class="token function">add</span> @vant/auto-import-resolver unplugin-vue-components <span class="token parameter variable">-D</span>\n\n<span class="token comment"># 通过 pnpm 安装</span>\n<span class="token function">pnpm</span> <span class="token function">add</span> @vant/auto-import-resolver unplugin-vue-components <span class="token parameter variable">-D</span>\n\n<span class="token comment"># 通过 bun 安装</span>\nbun <span class="token function">add</span> @vant/auto-import-resolver unplugin-vue-components <span class="token parameter variable">-D</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果是基于 <code>vite</code> 的项目，在 <code>vite.config.js</code> 文件中配置插件：</p><p><img src="' + _imports_118 + '" alt="image-20231114092819226"></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> vue <span class="token keyword">from</span> <span class="token string">&#39;@vitejs/plugin-vue&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Components <span class="token keyword">from</span> <span class="token string">&#39;unplugin-vue-components/vite&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> VantResolver <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vant/auto-import-resolver&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token function">vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function">Components</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token literal-property property">resolvers</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">VantResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>浏览器测试组件</p><p><img src="' + _imports_119 + '" alt="image-20231114092923326"></p><p><img src="' + _imports_120 + '" alt="image-20231113231231755"></p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>App<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>确定<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>van-button</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>处理个别组件 (函数式的组件)，并把一些组件挂载到应用上，如下：</p><p><img src="' + _imports_121 + '" alt="image-20231114093110506"></p><p>操作:</p><p><img src="' + _imports_122 + '" alt="image-20231114093125108"></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>\n    showToast<span class="token punctuation">,</span>\n    showDialog<span class="token punctuation">,</span>\n    showNotify<span class="token punctuation">,</span>\n    showImagePreview<span class="token punctuation">,</span>\n    showConfirmDialog<span class="token punctuation">,</span>\n    Lazyload\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vant&#39;</span>\n\n<span class="token keyword">import</span> <span class="token string">&#39;vant/es/toast/style&#39;</span>\n<span class="token keyword">import</span> <span class="token string">&#39;vant/es/dialog/style&#39;</span>\n<span class="token keyword">import</span> <span class="token string">&#39;vant/es/notify/style&#39;</span>\n<span class="token keyword">import</span> <span class="token string">&#39;vant/es/image-preview/style&#39;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">installVant</span><span class="token punctuation">(</span><span class="token parameter">app</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    app<span class="token punctuation">.</span>config<span class="token punctuation">.</span>globalProperties<span class="token punctuation">.</span>$showToast <span class="token operator">=</span> showToast\n    app<span class="token punctuation">.</span>config<span class="token punctuation">.</span>globalProperties<span class="token punctuation">.</span>$showDialog <span class="token operator">=</span> showDialog\n    app<span class="token punctuation">.</span>config<span class="token punctuation">.</span>globalProperties<span class="token punctuation">.</span>$showNotify <span class="token operator">=</span> showNotify\n    app<span class="token punctuation">.</span>config<span class="token punctuation">.</span>globalProperties<span class="token punctuation">.</span>$showImagePreview <span class="token operator">=</span> showImagePreview\n    app<span class="token punctuation">.</span>config<span class="token punctuation">.</span>globalProperties<span class="token punctuation">.</span>$showConfirmDialog <span class="token operator">=</span> showConfirmDialog\n\n    app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Lazyload<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 main.js 中使用之，如下：</p><p><img src="' + _imports_123 + '" alt="image-20231113231447140"></p><p>测试插件</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> getCurrentInstance <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> <span class="token punctuation">{</span> proxy <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">getCurrentInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token keyword">let</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  proxy<span class="token punctuation">.</span><span class="token function">$showToast</span><span class="token punctuation">(</span><span class="token string">&#39;登录成功&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>App<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>确定<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>van-button</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="' + _imports_124 + '" alt="image-20231113231717073"></p><hr><h3 id="_3-配置方法自动导入" tabindex="-1"><a class="header-anchor" href="#_3-配置方法自动导入" aria-hidden="true">#</a> 3, 配置方法自动导入</h3><p>安装自动导入插件,</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i unplugin-auto-import\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> AutoImport <span class="token keyword">from</span> <span class="token string">&#39;unplugin-auto-import/vite&#39;</span>\n\n<span class="token function">AutoImport</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">imports</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;vue&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;vue-router&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pinia&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 配置需要自动导入的对象</span>\n    <span class="token literal-property property">eslintrc</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">enabled</span><span class="token operator">:</span> <span class="token boolean">false</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 vite.config.js 中引入</p><p><img src="' + _imports_125 + '" alt="image-20231114111054450"></p><blockquote><p>测试引入的数据是否是自动引入, 自动引入vue中方法是不需要 import导入的, 直接在 script 中声明就可以起作用 , 如下</p></blockquote><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token comment">// import { getCurrentInstance } from &#39;vue&#39;;</span>\n<span class="token keyword">let</span> <span class="token punctuation">{</span> proxy <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">getCurrentInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> num<span class="token operator">=</span><span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>\n<span class="token keyword">let</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  num<span class="token punctuation">.</span>value<span class="token operator">++</span>\n  proxy<span class="token punctuation">.</span><span class="token function">$showToast</span><span class="token punctuation">(</span><span class="token string">&#39;登录成功&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 调用组件实例的方法</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>App<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>{{ num }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>确定<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>van-button</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_4-配置主题" tabindex="-1"><a class="header-anchor" href="#_4-配置主题" aria-hidden="true">#</a> 4, 配置主题</h3><p>安装 less</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token function">less</span> <span class="token parameter variable">-D</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="' + _imports_126 + '" alt="image-20231114112805460"></p><p>先在assets下面创建一个theme.css，如下：</p><blockquote><p>定义好这个项目主题色, #1baeae</p></blockquote><p><img src="' + _imports_127 + '" alt="image-20231114112942154"></p><p>在main.js中引入之，如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token string">&#39;./assets/theme.css&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 引入主题css</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可以把主题色定义成一个变量，后面里哪里使用，直接使用变量，如下：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>@<span class="token property">theme</span><span class="token punctuation">:</span> #1baeae\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="' + _imports_128 + '" alt="image-20231114113324776"></p><p>在vite.confnig.js中配置，加载上面的 var.less，如下：</p><p><img src="' + _imports_129 + '" alt="image-20231114113426419"></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">css</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">preprocessorOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">less</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">additionalData</span><span class="token operator">:</span> <span class="token string">&#39;@import &quot;/src/assets/var.less&quot;;&#39;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码测试</p><p><img src="' + _imports_130 + '" alt="image-20231114114117877"></p><hr><h3 id="_5-tabbar" tabindex="-1"><a class="header-anchor" href="#_5-tabbar" aria-hidden="true">#</a> 5, Tabbar</h3><p>创建 vant 组件 tabbar</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-tabbar</span>\n      <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>active<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isVisible<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name">route</span>\n    <span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-tabbar-item</span>\n        <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>home-o<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/<span class="token punctuation">&quot;</span></span>\n        <span class="token punctuation">&gt;</span></span>首页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>van-tabbar-item</span>\n      <span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-tabbar-item</span>\n        <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>list-switch<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Category<span class="token punctuation">&quot;</span></span>\n        <span class="token punctuation">&gt;</span></span>分类<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>van-tabbar-item</span>\n      <span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-tabbar-item</span>\n        <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cart-o<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cart<span class="token punctuation">&quot;</span></span>\n        <span class="token punctuation">&gt;</span></span>购物车<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>van-tabbar-item</span>\n      <span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-tabbar-item</span>\n        <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>manager-o<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>user<span class="token punctuation">&quot;</span></span>\n        <span class="token punctuation">&gt;</span></span>我的<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>van-tabbar-item</span>\n      <span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>van-tabbar</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在App.vue中使用之，如下：</p><p><img src="' + _imports_131 + '" alt="image-20231114201856796"></p><p>在App.vue中定义状态，控制Tabbar是否显示，如下：</p><p><img src="' + _imports_132 + '" alt="image-20231114205110973"></p><p>在Tabbar组件中，接收，使用之，如下：</p><p><img src="' + _imports_133 + '" alt="image-20231114205123344"></p><p>给有tabbar的页面添加一个padding-bottom，如下：</p><p><img src="' + _imports_134 + '" alt="image-20231114205149008"></p><hr><h3 id="_6-svgicon" tabindex="-1"><a class="header-anchor" href="#_6-svgicon" aria-hidden="true">#</a> 6, svgIcon</h3><p>iconfont官网：https://www.iconfont.cn/</p><p><strong>使用步骤</strong></p><p><img src="' + _imports_135 + '" alt="image-20231114205417526"></p><p><img src="' + _imports_136 + '" alt="image-20231114205426869"></p><p><img src="' + _imports_137 + '" alt="image-20231114205436666"></p><p><img src="' + _imports_138 + '" alt="image-20231114205444890"></p><p><img src="' + _imports_139 + '" alt="image-20231114205457708"></p><p>下载解压：</p><p><img src="' + _imports_140 + '" alt="image-20231114205510222"></p><p>点击html文件，如下：</p><p><img src="' + _imports_141 + '" alt="image-20231114205522490"></p><p>项目中引入iconfont.js，如下：</p><p><img src="' + _imports_142 + '" alt="image-20231114205533457"></p><p>在main.js中直接引入，如下：</p><p><img src="' + _imports_143 + '" alt="image-20231114205548151"></p><p>第二步：</p><p><img src="' + _imports_144 + '" alt="image-20231114205602524"></p><p>第三步：</p><p><img src="' + _imports_145 + '" alt="image-20231114205614654"></p><p>然后，封装一个SvgIcon组件，如下：</p><p><img src="' + _imports_146 + '" alt="image-20231114205629413"></p><p>大家使用我的iconfont.js或者自己去找图标，如下：</p><p><img src="' + _imports_147 + '" alt="image-20231114205648058"></p><hr><h3 id="_7-首页面" tabindex="-1"><a class="header-anchor" href="#_7-首页面" aria-hidden="true">#</a> 7, 首页面</h3><p>直接把之前的项目的api文件夹copy过来，如下：</p><p>index.js 调用后端接口</p><p>http.js 发起 ajax 请求</p><p><img src="' + _imports_148 + '" alt="image-20231114214549817"></p><p>安装加密依赖</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i blueimp-md5\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>配置代理</p><p><img src="' + _imports_149 + '" alt="image-20231114214810663"></p><p>配置代理, 代码参考:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code> <span class="token literal-property property">proxy</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n     <span class="token string-property property">&#39;/api&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n         <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">&#39;http://backend-api-01.newbee.ltd/api/v1&#39;</span><span class="token punctuation">,</span>\n         <span class="token literal-property property">changeOrigin</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n         <span class="token comment">// pathRewrite: { &#39;^/api&#39;: &#39;&#39; }  // 错的</span>\n         <span class="token function-variable function">rewrite</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">path</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> path<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\/api</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n     <span class="token punctuation">}</span>\n <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在组件中调用接口如下：</p><p><img src="' + _imports_150 + '" alt="image-20231114214852174"></p><p>Home.vue 代码</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>\n    <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\n      background-color: gold;\n      position: absolute;\n      z-index: 1000;\n      width: 100%;\n    <span class="token punctuation">&quot;</span></span></span>\n  <span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!-- 头部 --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-sticky</span> <span class="token attr-name">@scroll</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleScorll<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>home-header<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>menu<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/category<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wap-nav<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>search<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>新峰商城<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-icon</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>search<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/search<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>山河无恙，人间皆安<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>login<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/login<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>van-sticky</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n  <span class="token comment">&lt;!-- 轮播图 --&gt;</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-swipe</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>swipe<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:autoplay</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3000<span class="token punctuation">&quot;</span></span> <span class="token attr-name">indicator-color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@theme<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(item, index) of carousels<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-swipe-item</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.carouselUrl<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>van-swipe-item</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>van-swipe</span><span class="token punctuation">&gt;</span></span>\n  <span class="token comment">&lt;!-- 宫格 --&gt;</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-grid</span> <span class="token attr-name">:column-num</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>5<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-grid-item</span>\n      <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>menu in menuList<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>menu.name<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name">:icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>menu.imgUrl<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name">:text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>menu.name<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$showToast(&#39;敬请期待&#39;)<span class="token punctuation">&quot;</span></span>\n    <span class="token punctuation">/&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>van-grid</span><span class="token punctuation">&gt;</span></span>\n\n  <span class="token comment">&lt;!-- 商品 --&gt;</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-skeleton</span> <span class="token attr-name">:row</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>5<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hotGoodses.length === 0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>van-skeleton</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-else</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>HomeGoodsItem</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>新品上线<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:goods-list</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hotGoodses<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>HomeGoodsItem</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>HomeGoodsItem</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>热门商品<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:goods-list</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>newGoodses<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>HomeGoodsItem</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>HomeGoodsItem</span>\n      <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>最新推荐<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name">:goods-list</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>recommendGoodses<span class="token punctuation">&quot;</span></span>\n    <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>HomeGoodsItem</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token constant">API</span> <span class="token keyword">from</span> <span class="token string">&quot;../api/index.js&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> menuList <span class="token keyword">from</span> <span class="token string">&quot;../assets/category&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> carousels <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> hotGoodses <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> newGoodses <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> recommendGoodses <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">try</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token punctuation">{</span> resultCode<span class="token punctuation">,</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">API</span><span class="token punctuation">.</span><span class="token function">queryIndexInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">+</span>resultCode <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      carousels<span class="token punctuation">.</span>value <span class="token operator">=</span> data<span class="token punctuation">.</span>carousels<span class="token punctuation">;</span> <span class="token comment">// 轮播图的数据获取成功</span>\n      hotGoodses<span class="token punctuation">.</span>value <span class="token operator">=</span> data<span class="token punctuation">.</span>hotGoodses<span class="token punctuation">;</span>\n      newGoodses<span class="token punctuation">.</span>value <span class="token operator">=</span> data<span class="token punctuation">.</span>newGoodses<span class="token punctuation">;</span>\n      recommendGoodses<span class="token punctuation">.</span>value <span class="token operator">=</span> data<span class="token punctuation">.</span>recommendGoodses<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">let</span> <span class="token function-variable function">handleScorll</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>less<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\n<span class="token selector">.home-header</span> <span class="token punctuation">{</span>\n  <span class="token property">padding</span><span class="token punctuation">:</span> 0 20px<span class="token punctuation">;</span>\n  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 0.7<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span>\n  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n  <span class="token selector">a</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #444<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token selector">&amp;.active</span> <span class="token punctuation">{</span>\n    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token atrule"><span class="token rule">@theme</span><span class="token punctuation">;</span></span>\n    <span class="token selector">span</span> <span class="token punctuation">{</span>\n      <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token selector">a</span> <span class="token punctuation">{</span>\n      <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.search</span> <span class="token punctuation">{</span>\n  <span class="token property">width</span><span class="token punctuation">:</span> 255px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.van-icon</span> <span class="token punctuation">{</span>\n  <span class="token property">font-size</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.search</span> <span class="token punctuation">{</span>\n  <span class="token selector">span</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token atrule"><span class="token rule">@theme</span><span class="token punctuation">;</span></span>\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 22px<span class="token punctuation">;</span>\n    <span class="token property">padding-right</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>\n    <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token property">line-height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>\n  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.swipe</span> <span class="token punctuation">{</span>\n  <span class="token property">height</span><span class="token punctuation">:</span> 172px<span class="token punctuation">;</span>\n  <span class="token selector">img</span> <span class="token punctuation">{</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>在渲染首页面数据时，后端接口，有些图片的路径是不全的，需要前端处理。还需要给价格添加一个 ￥ 符号</p></blockquote><p>在vue3中直接定义一个工具方法来处理，添加这两个方法, 如下:</p><p><img src="' + _imports_151 + '" alt="image-20231114225358887"></p><p>在首页商品组件中, 调用这些方法</p><p><img src="' + _imports_152 + '" alt="image-20231115142341850"></p><hr><h3 id="_8-分类模块" tabindex="-1"><a class="header-anchor" href="#_8-分类模块" aria-hidden="true">#</a> 8, 分类模块</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>封装 utils 工具方法, 了解工具方法的使用(面试常用的工具方法)\n例如,防抖 节流函数等... \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>把分类的数据存储到 pinia 中，创建仓库如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> <span class="token constant">API</span> <span class="token keyword">from</span> <span class="token string">&#39;../api/index.js&#39;</span>\n\n<span class="token keyword">const</span> useCountStore <span class="token operator">=</span> <span class="token function">defineStore</span><span class="token punctuation">(</span><span class="token string">&#39;Category&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> list <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n\n  <span class="token comment">// pinia =&gt;获取分类数据</span>\n  <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getCategories</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> <span class="token punctuation">{</span> resultCode<span class="token punctuation">,</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">API</span><span class="token punctuation">.</span><span class="token function">queryCategories</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>resultCode <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      list<span class="token punctuation">.</span>value <span class="token operator">=</span> data\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">{</span>\n    list<span class="token punctuation">,</span>\n    getCategories\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> useCountStore\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在main.js中应用仓库，如下：</p><p><img src="' + _imports_153 + '" alt="image-20231115142951222"></p><p>在分类组件中就要调用上面的action，如下：</p><p><img src="' + _imports_154 + '" alt="image-20231115143015426"></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>分类页拿到 list 数据, 解构还需要调用转换为响应式的方法, \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="' + _imports_155 + '" alt="image-20231115144409376"></p><p>在页面挂载的时候等待数据获取,</p><p>查看仓库的数据是否获取成功;</p><p><img src="' + _imports_156 + '" alt="image-20231115144446491"></p><p>在渲染分类数据之前, 还需要封装一个 navbar 组件;</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token comment">&lt;!-- 导航栏 \n  \n  左箭头\n  点击路由跳转=&gt;上一级 (实际上，它相当于用户点击浏览器的返回按钮)\n  --&gt;</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-nav-bar</span>\n    <span class="token attr-name">left-arrow</span>\n    <span class="token attr-name">@click-left</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>router.back()<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!-- 具名插槽 \n    \n    $route.meta.title表示当前路由的元数据中的&quot;title&quot;字段。\n    --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#title</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        {{ title || $route.meta.title }}\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n    <span class="token comment">&lt;!-- 右边按钮 --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#right</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>right<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>van-nav-bar</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token comment">// 接受具名插槽传递的title</span>\n<span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在分类组件中引入 MyNavbar 组件, 并渲染页面中</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyNavbar</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#title</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!-- 搜索框 --&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-search</span>\n          <span class="token attr-name">shape</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>round<span class="token punctuation">&quot;</span></span>\n          <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>搜索需要的产品<span class="token punctuation">&quot;</span></span>\n          <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$router.push(&#39;/search&#39;)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>van-search</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>MyNavbar</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>分类<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后就开始绘制分类数据了，数据已经存储到了pinia中了，存储到pinia中的数据，它是在内存中的，一刷新就没有了，但是一刷新，它又调用了onMounted函数，在这个函数中又去调用接口，获取数据，放到pinia中了 (页面每次刷新都会调用接口获取数据并存放到 pinia 仓库中)</p><p>引用 vant 组件中的侧边栏组件, 代码如下</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyNavbar</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#title</span><span class="token punctuation">&gt;</span></span>\n      <span class="token comment">&lt;!-- 搜索框 --&gt;</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-search</span>\n        <span class="token attr-name">shape</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>round<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>搜索需要的产品<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$router.push(&#39;/search&#39;)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>van-search</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>MyNavbar</span><span class="token punctuation">&gt;</span></span>\n\n  <span class="token comment">&lt;!-- 分类内容 --&gt;</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>main<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!-- 侧边栏 --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-sidebar</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>activeKey<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token comment">&lt;!-- 侧边栏内容 --&gt;</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-sidebar-item</span>\n        <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item in list<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.categoryId<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">:title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.categoryName<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>van-sidebar</span><span class="token punctuation">&gt;</span></span>\n\n    <span class="token comment">&lt;!-- 右边内容 --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>\n      <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>contentArr &amp;&amp; contentArr.length &gt; 0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token comment">&lt;!--二级分类数据 \n        \n        contentArr --&gt;</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>\n        <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content in contentArr<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content.categoryId<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!-- 二级标题 --&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ content.categoryName }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>\n\n        <span class="token comment">&lt;!-- 三级分类 --&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>list<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span>\n            <span class="token attr-name">:to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{\n              path: &#39;/search&#39;,\n              query: { categoryId: item.categoryId }\n            }<span class="token punctuation">&quot;</span></span>\n            <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item in content.thirdLevelCategoryVOS<span class="token punctuation">&quot;</span></span>\n            <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.categoryId<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-image</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>classify<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>{{ item.categoryName }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> storeToRefs <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;pinia&#39;</span>\n<span class="token keyword">import</span> useCategoryStore <span class="token keyword">from</span> <span class="token string">&#39;../stores/useCategoryStore.js&#39;</span> <span class="token comment">// 调用pinia接口</span>\n<span class="token keyword">import</span> classify <span class="token keyword">from</span> <span class="token string">&#39;@/assets/images/classify.png&#39;</span> <span class="token comment">// 商品img</span>\n\n<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">useCategoryStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 获取分类仓库</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> list <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">storeToRefs</span><span class="token punctuation">(</span>store<span class="token punctuation">)</span> <span class="token comment">// 获取list</span>\n\n<span class="token keyword">const</span> activeKey <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// 控制侧边栏,获取分类数据</span>\n\n<span class="token keyword">const</span> contentArr <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// activeKey =&gt; 获取二级分类的数据</span>\n  <span class="token keyword">return</span> list<span class="token punctuation">.</span>value<span class="token punctuation">[</span>activeKey<span class="token punctuation">.</span>value<span class="token punctuation">]</span><span class="token operator">?.</span>secondLevelCategoryVOS\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 钩子函数</span>\n<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>list<span class="token punctuation">.</span>value<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">getCategories</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 调用获取分类数据接口</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>less<span class="token punctuation">&quot;</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\n<span class="token selector">// 搜索框\n:deep(.van-search)</span> <span class="token punctuation">{</span>\n  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.main</span> <span class="token punctuation">{</span>\n  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>100vh - 96px<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.van-sidebar</span> <span class="token punctuation">{</span>\n  <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n  <span class="token property">width</span><span class="token punctuation">:</span> 120px<span class="token punctuation">;</span>\n  <span class="token property">background-color</span><span class="token punctuation">:</span> #f7f8fa<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.van-sidebar-item</span> <span class="token punctuation">{</span>\n  <span class="token property">padding</span><span class="token punctuation">:</span> 15px 10px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.content</span> <span class="token punctuation">{</span>\n  <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n  <span class="token property">width</span><span class="token punctuation">:</span> 255px<span class="token punctuation">;</span>\n  <span class="token property">overflow-x</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>\n  <span class="token property">overflow-y</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>\n  <span class="token selector">.title</span> <span class="token punctuation">{</span>\n    <span class="token property">padding-left</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>\n    <span class="token property">line-height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>\n    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token selector">.list</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n    <span class="token property">flex-wrap</span><span class="token punctuation">:</span> wrap<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 0 10px<span class="token punctuation">;</span>\n    <span class="token selector">a</span> <span class="token punctuation">{</span>\n      <span class="token property">margin-right</span><span class="token punctuation">:</span> 2%<span class="token punctuation">;</span>\n      <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>\n      <span class="token property">width</span><span class="token punctuation">:</span> 32%<span class="token punctuation">;</span>\n      <span class="token selector">.van-image</span> <span class="token punctuation">{</span>\n        <span class="token property">width</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>\n        <span class="token property">height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>\n        <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\n        <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n      <span class="token selector">span</span> <span class="token punctuation">{</span>\n        <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\n        <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n        <span class="token property">line-height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>\n        <span class="token property">color</span><span class="token punctuation">:</span> #555<span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n      <span class="token selector">&amp;:nth-child(3n)</span> <span class="token punctuation">{</span>\n        // <span class="token property">border</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span>\n        <span class="token property">margin-right</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>效果图, 浏览器中分析</p><p><img src="' + _imports_157 + '" alt="image-20231115191252670"></p><hr><h3 id="_9-登录注册" tabindex="-1"><a class="header-anchor" href="#_9-登录注册" aria-hidden="true">#</a> 9, 登录注册</h3><p>配置对应的组件路由,</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token comment">// 登录</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../views/Login.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;login&#39;</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;登录&#39;</span> <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>利用 canvas 绘制验证码模块\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>封装验证码组件, 代码如下:</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span>\n    <span class="token attr-name">:width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">:height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>height<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>canvasBox<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>generateCaptcha<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token comment">// 验证码样式</span>\n<span class="token keyword">const</span> width <span class="token operator">=</span> <span class="token number">120</span>\n<span class="token keyword">const</span> height <span class="token operator">=</span> <span class="token number">30</span>\n<span class="token keyword">const</span> canvasBox <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> emit <span class="token operator">=</span> <span class="token function">defineEmits</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;update:text&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// 8a9i (声明组件可以触发的自定义事件)</span>\n\n<span class="token comment">// 创建随机验证码</span>\n<span class="token keyword">const</span> <span class="token function-variable function">createRandomCaptcha</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">num <span class="token operator">=</span> <span class="token number">4</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> chars <span class="token operator">=</span>\n    <span class="token string">&#39;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&#39;</span>\n  <span class="token keyword">let</span> captcha <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>\n    i <span class="token operator">=</span> <span class="token number">0</span>\n  <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> random <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">61</span><span class="token punctuation">)</span>\n    captcha <span class="token operator">+=</span> chars<span class="token punctuation">[</span>random<span class="token punctuation">]</span>\n    i<span class="token operator">++</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> captcha\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 生成验证码图</span>\n<span class="token keyword">function</span> <span class="token function">generateCaptcha</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> context <span class="token operator">=</span> canvasBox<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span>\n  <span class="token keyword">var</span> captchaText <span class="token operator">=</span> <span class="token function">createRandomCaptcha</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n  <span class="token comment">// 清空画布</span>\n  context<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span>\n  context<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">&#39;#000&#39;</span>\n  context<span class="token punctuation">.</span>font <span class="token operator">=</span> <span class="token string">&#39;30px Arial, sans-serif&#39;</span>\n  context<span class="token punctuation">.</span>textBaseline <span class="token operator">=</span> <span class="token string">&#39;top&#39;</span>\n  context<span class="token punctuation">.</span><span class="token function">fillText</span><span class="token punctuation">(</span>captchaText<span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    context<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    context<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> width<span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> height<span class="token punctuation">)</span>\n    context<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> width<span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> height<span class="token punctuation">)</span>\n    context<span class="token punctuation">.</span>strokeStyle <span class="token operator">=</span> <span class="token string">&#39;#999&#39;</span>\n    context<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;update:text&#39;</span><span class="token punctuation">,</span> captchaText<span class="token punctuation">)</span> <span class="token comment">// 触发, 传参 =&gt;captchaText</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token function">generateCaptcha</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 向父组件暴露reset方法, 值为 generateCaptcha 函数</span>\n<span class="token function">defineExpose</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">reset</span><span class="token operator">:</span> generateCaptcha\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>less<span class="token punctuation">&quot;</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>有了验证码组件，就开始绘制登录注册页面，如下：</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>login<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!-- navbar --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyNavbar</span> <span class="token attr-name">:title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isLogin ? &#39;登录&#39; : &#39;注册账号&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>MyNavbar</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>\n      <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>logo<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>logo<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n\n    <span class="token comment">&lt;!-- 登录表单 --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-form</span> <span class="token attr-name">@submit</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token comment">&lt;!-- 手机号 --&gt;</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-field</span>\n        <span class="token attr-name">v-model.trim</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ruleForm.loginName<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>loginName<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>请输入用户名<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>手机号<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">:rules</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[\n          { pattern: /^1\\d{10}$/, message: &#39;手机号格式有误&#39; }\n        ]<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n\n      <span class="token comment">&lt;!-- 密码 --&gt;</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-field</span>\n        <span class="token attr-name">v-model.trim</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ruleForm.password<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>请输入密码<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>密码<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">:rules</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[{ required: true, message: &#39;密码是必填项&#39; }]<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n\n      <span class="token comment">&lt;!-- 验证码 --&gt;</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-field</span>\n        <span class="token attr-name">v-model.trim</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ruleForm.captcha<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>captcha<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>验证码<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>验证码<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">:rules</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[\n          { validator: validatorCaptcha, message: &#39;验证码输入有误&#39; }\n        ]<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!-- 验证码\n          点击更新, \n          接受captcha组件传来的新值\n         --&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#button</span><span class="token punctuation">&gt;</span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Captcha</span>\n            <span class="token attr-name"><span class="token namespace">v-model:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>captchaImgText<span class="token punctuation">&quot;</span></span>\n            <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>captcha<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Captcha</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>van-field</span><span class="token punctuation">&gt;</span></span>\n\n      <span class="token comment">&lt;!-- 注册/登录 --&gt;</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>\n        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>changeLogin<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        {{ isLogin ? &#39;还没账号,请点此注册&#39; : &#39;已有账号,请点此登录&#39; }}\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">margin</span><span class="token punctuation">:</span> 16px</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-button</span>\n          <span class="token attr-name">round</span>\n          <span class="token attr-name">block</span>\n          <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#FE6800 <span class="token punctuation">&quot;</span></span>\n          <span class="token attr-name">native-type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n          {{ isLogin ? &#39;确认登录&#39; : &#39;点击注册&#39; }}\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>van-button</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>van-form</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> logo <span class="token keyword">from</span> <span class="token string">&#39;@/assets/images/newbee-mall-vue3-app-logo.png&#39;</span>\n<span class="token keyword">const</span> isLogin <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> captcha <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> ruleForm <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">loginName</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 用户名</span>\n  <span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 密码</span>\n  <span class="token literal-property property">captcha</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span> <span class="token comment">// 验证码</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 切换登录</span>\n<span class="token keyword">const</span> <span class="token function-variable function">changeLogin</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 表单及验证初始化</span>\n  isLogin<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token operator">!</span>isLogin<span class="token punctuation">.</span>value\n  ruleForm<span class="token punctuation">.</span>loginName <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>\n  ruleForm<span class="token punctuation">.</span>password <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>\n  ruleForm<span class="token punctuation">.</span>captcha <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>\n  captcha<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 提交登录</span>\n<span class="token keyword">const</span> <span class="token function-variable function">submit</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>less<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\n<span class="token selector">.login</span> <span class="token punctuation">{</span>\n  // <span class="token property">padding</span><span class="token punctuation">:</span> 0 20px<span class="token punctuation">;</span>\n  <span class="token selector">.logo</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 20px auto 20px<span class="token punctuation">;</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 140px<span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 140px<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.text</span> <span class="token punctuation">{</span>\n  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>\n  <span class="token property">margin-top</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>\n  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>\n  <span class="token property">padding</span><span class="token punctuation">:</span> 0 15px<span class="token punctuation">;</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #1989fa<span class="token punctuation">;</span>\n  <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">:deep(.van-nav-bar__title)</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #555<span class="token punctuation">;</span>\n  <span class="token property">font-weight</span><span class="token punctuation">:</span> 400<span class="token punctuation">;</span>\n  <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>到此，登录注册的界面就绘制完毕了。点击提交时，需要调用 API 接口，完成注册或者登录请求</p><p>点击提交，区别出是登录还是注册如下：</p><p><strong>登录页面</strong></p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>login<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!-- navbar --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyNavbar</span> <span class="token attr-name">:title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isLogin ? &#39;登录&#39; : &#39;注册账号&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>MyNavbar</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>\n      <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>logo<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>logo<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n\n    <span class="token comment">&lt;!-- 登录表单 --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-form</span> <span class="token attr-name">@submit</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token comment">&lt;!-- 手机号 --&gt;</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-field</span>\n        <span class="token attr-name">v-model.trim</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ruleForm.loginName<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>loginName<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>请输入用户名<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>手机号<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">:rules</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[\n          { pattern: /^1\\d{10}$/, message: &#39;手机号格式有误&#39; }\n        ]<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n\n      <span class="token comment">&lt;!-- 密码 --&gt;</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-field</span>\n        <span class="token attr-name">v-model.trim</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ruleForm.password<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>请输入密码<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>密码<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">:rules</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[{ required: true, message: &#39;密码是必填项&#39; }]<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n\n      <span class="token comment">&lt;!-- 验证码 --&gt;</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-field</span>\n        <span class="token attr-name">v-model.trim</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ruleForm.captcha<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>captcha<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>验证码<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>验证码<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">:rules</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[\n          { validator: validatorCaptcha, message: &#39;验证码输入有误&#39; }\n        ]<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!-- 验证码\n          点击更新, \n          接受captcha组件传来的新值\n         --&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#button</span><span class="token punctuation">&gt;</span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Captcha</span>\n            <span class="token attr-name"><span class="token namespace">v-model:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>captchaImgText<span class="token punctuation">&quot;</span></span>\n            <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>captcha<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Captcha</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>van-field</span><span class="token punctuation">&gt;</span></span>\n\n      <span class="token comment">&lt;!-- 注册/登录 --&gt;</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>\n        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span>\n        <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>changeLogin<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        {{ isLogin ? &#39;还没账号,请点此注册&#39; : &#39;已有账号,请点此登录&#39; }}\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">margin</span><span class="token punctuation">:</span> 16px</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>van-button</span>\n          <span class="token attr-name">round</span>\n          <span class="token attr-name">block</span>\n          <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#FE6800 <span class="token punctuation">&quot;</span></span>\n          <span class="token attr-name">native-type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n          {{ isLogin ? &#39;确认登录&#39; : &#39;点击注册&#39; }}\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>van-button</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>van-form</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> logo <span class="token keyword">from</span> <span class="token string">&#39;@/assets/images/newbee-mall-vue3-app-logo.png&#39;</span>\n<span class="token keyword">import</span> <span class="token constant">API</span> <span class="token keyword">from</span> <span class="token string">&#39;../api/index.js&#39;</span>\n<span class="token keyword">import</span> _ <span class="token keyword">from</span> <span class="token string">&#39;@/utils/utils&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useRouter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-router&#39;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> proxy <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">getCurrentInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 得到组件实例</span>\n<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">useRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> isLogin <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> captcha <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> ruleForm <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">loginName</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 用户名</span>\n  <span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 密码</span>\n  <span class="token literal-property property">captcha</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span> <span class="token comment">// 验证码</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 切换登录</span>\n<span class="token keyword">const</span> <span class="token function-variable function">changeLogin</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 表单及验证初始化</span>\n  isLogin<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token operator">!</span>isLogin<span class="token punctuation">.</span>value\n  ruleForm<span class="token punctuation">.</span>loginName <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>\n  ruleForm<span class="token punctuation">.</span>password <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>\n  ruleForm<span class="token punctuation">.</span>captcha <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>\n  captcha<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 提交登录or注册</span>\n<span class="token keyword">const</span> <span class="token function-variable function">submit</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>isLogin<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">try</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 调用登录接口</span>\n      <span class="token keyword">let</span> <span class="token punctuation">{</span> resultCode<span class="token punctuation">,</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">API</span><span class="token punctuation">.</span><span class="token function">userLogin</span><span class="token punctuation">(</span>\n        ruleForm<span class="token punctuation">.</span>loginName<span class="token punctuation">,</span>\n        ruleForm<span class="token punctuation">.</span>password\n      <span class="token punctuation">)</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">+</span>resultCode <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        proxy<span class="token punctuation">.</span><span class="token function">$showToast</span><span class="token punctuation">(</span><span class="token string">&#39;登录成功&#39;</span><span class="token punctuation">)</span>\n        _<span class="token punctuation">.</span>storage<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;TK&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>\n        <span class="token comment">// TODO: 被路由守卫拦截的路由,登陆成功后需返回原路由</span>\n        <span class="token comment">//  /login?redirect=&#39;/cart&#39;    登录成功后，获取参数redirect=&#39;/cart&#39;</span>\n        <span class="token comment">// 不要router.push(&quot;/&quot;);   你要push到/cart</span>\n        router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      proxy<span class="token punctuation">.</span><span class="token function">$showToast</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>message<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 注册</span>\n    <span class="token keyword">try</span> <span class="token punctuation">{</span>\n      <span class="token keyword">let</span> <span class="token punctuation">{</span> resultCode<span class="token punctuation">,</span> message <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">API</span><span class="token punctuation">.</span><span class="token function">userRegister</span><span class="token punctuation">(</span>\n        ruleForm<span class="token punctuation">.</span>loginName<span class="token punctuation">,</span>\n        ruleForm<span class="token punctuation">.</span>password\n      <span class="token punctuation">)</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">+</span>resultCode <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        proxy<span class="token punctuation">.</span><span class="token function">$showToast</span><span class="token punctuation">(</span><span class="token string">&#39;注册成功&#39;</span><span class="token punctuation">)</span>\n        <span class="token function">changeLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        proxy<span class="token punctuation">.</span><span class="token function">$showToast</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      proxy<span class="token punctuation">.</span><span class="token function">$showToast</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>message<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>less<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\n<span class="token selector">.login</span> <span class="token punctuation">{</span>\n  // <span class="token property">padding</span><span class="token punctuation">:</span> 0 20px<span class="token punctuation">;</span>\n  <span class="token selector">.logo</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 20px auto 20px<span class="token punctuation">;</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 140px<span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 140px<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.text</span> <span class="token punctuation">{</span>\n  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>\n  <span class="token property">margin-top</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>\n  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>\n  <span class="token property">padding</span><span class="token punctuation">:</span> 0 15px<span class="token punctuation">;</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #aaa<span class="token punctuation">;</span>\n  <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">:deep(.van-nav-bar__title)</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #555<span class="token punctuation">;</span>\n  <span class="token property">font-weight</span><span class="token punctuation">:</span> 400<span class="token punctuation">;</span>\n  <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>登录注册需要携带 token\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>路由守卫：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 不管要访问哪个路由，都要经过这个守卫</span>\nrouter<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token parameter">to</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 判断localstorage中有没有token，如果有，表示已登录</span>\n    <span class="token comment">// 也就是说，登录了，localstorage中一直会有token。</span>\n    <span class="token comment">// 但是你要知道，token是有生存周期，如果后端设置token只能存活7天，那么第8天，你的token就失效了</span>\n\n    <span class="token comment">// localstoreage.getItem(&quot;TK&quot;)</span>\n    <span class="token keyword">let</span> token <span class="token operator">=</span> _<span class="token punctuation">.</span>storage<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;TK&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>token<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>to<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&#39;login&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">// 表示你登录了，你又访问登录页面</span>\n            <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 没有登录</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>to<span class="token punctuation">.</span>matched<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>needLogin<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">// 没有登录，但是此路由需要登录</span>\n            <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&quot;/login&quot;</span><span class="token punctuation">,</span>\n                <span class="token literal-property property">query</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                    <span class="token comment">// 跳到登录页面，并告诉登录页面稍后回调回来</span>\n                    <span class="token literal-property property">redirect</span><span class="token operator">:</span> to<span class="token punctuation">.</span>path<span class="token punctuation">,</span>\n                    <span class="token operator">...</span>to<span class="token punctuation">.</span>query<span class="token punctuation">,</span> <span class="token comment">// 当前页面的其它参数也添加进行</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>浏览器效果</p><p><img src="' + _imports_158 + '" alt="image-20231115233703656"></p><p>处理一下登录成功,</p><p><img src="' + _imports_159 + '" alt="image-20231115234120654"></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>登录注册优化 todo\n使用场景, 在购物车页面如果登录,会路由守卫强制跳转到登录界面, \n在完成注册登录后, 应会跳转到购物车页面, (现在只默认跳转首页)\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在实现登录注册时，没有对验证码进行校验：</p><hr><h3 id="_10-搜索模块" tabindex="-1"><a class="header-anchor" href="#_10-搜索模块" aria-hidden="true">#</a> 10, 搜索模块</h3><p>navbar 搜索框</p><p>下拉框操作栏</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>拿到商品分类-三级分类的数据\nvue2 =&gt; computed计算属性,定义一个递归的算法\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>​</p><hr><h3 id="_11-商品详情" tabindex="-1"><a class="header-anchor" href="#_11-商品详情" aria-hidden="true">#</a> 11, 商品详情</h3><hr><h3 id="_12-购物车模块" tabindex="-1"><a class="header-anchor" href="#_12-购物车模块" aria-hidden="true">#</a> 12, 购物车模块</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>获取购物车数据, 存储在 pinia 中的 list 状态中;\n\n每次刷新, 都会调用接口,给 pinia 中的 list 赋值,保证购物车中的数据存在\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>', 349);
function _sfc_render(_ctx, _cache) {
  const _component_ExternalLinkIcon = resolveComponent("ExternalLinkIcon");
  return openBlock(), createElementBlock("div", null, [
    _hoisted_1,
    createBaseVNode("p", null, [
      createTextVNode("在本文档的其余部分我们使用的主要是 "),
      createBaseVNode("a", _hoisted_32, [
        createTextVNode("ES 模块"),
        createVNode(_component_ExternalLinkIcon)
      ]),
      createTextVNode("语法。现代浏览器大多都已原生支持 ES 模块。因此我们可以像这样通过 CDN 以及原生 ES 模块使用 Vue：")
    ]),
    _hoisted_33,
    createBaseVNode("p", null, [
      createTextVNode("值得注意的是， "),
      _hoisted_184,
      createTextVNode(" 返回的是一个原始对象的 "),
      createBaseVNode("a", _hoisted_185, [
        createTextVNode("Proxy (opens new window)"),
        createVNode(_component_ExternalLinkIcon)
      ]),
      createTextVNode("，它和原始对象是不相等的：")
    ]),
    _hoisted_186,
    _hoisted_187,
    _hoisted_188,
    _hoisted_189,
    _hoisted_190,
    _hoisted_191,
    createBaseVNode("ol", null, [
      createBaseVNode("li", null, [
        _hoisted_192,
        createTextVNode("：它只能用于对象类型 (对象、数组和如 "),
        _hoisted_193,
        createTextVNode("、"),
        _hoisted_194,
        createTextVNode(" 这样的"),
        createBaseVNode("a", _hoisted_195, [
          createTextVNode("集合类型 (opens new window)"),
          createVNode(_component_ExternalLinkIcon)
        ]),
        createTextVNode(")。它不能持有如 "),
        _hoisted_196,
        createTextVNode("、"),
        _hoisted_197,
        createTextVNode(" 或 "),
        _hoisted_198,
        createTextVNode(" 这样的"),
        createBaseVNode("a", _hoisted_199, [
          createTextVNode("原始类型 (opens new window)"),
          createVNode(_component_ExternalLinkIcon)
        ]),
        createTextVNode("。")
      ]),
      _hoisted_200,
      _hoisted_201
    ]),
    _hoisted_202,
    createBaseVNode("ul", null, [
      createBaseVNode("li", null, [
        createBaseVNode("a", _hoisted_274, [
          createTextVNode("onMounted()(opens new window)"),
          createVNode(_component_ExternalLinkIcon)
        ])
      ]),
      createBaseVNode("li", null, [
        createBaseVNode("a", _hoisted_275, [
          createTextVNode("onUpdated()(opens new window)"),
          createVNode(_component_ExternalLinkIcon)
        ])
      ]),
      createBaseVNode("li", null, [
        createBaseVNode("a", _hoisted_276, [
          createTextVNode("onUnmounted()(opens new window)"),
          createVNode(_component_ExternalLinkIcon)
        ])
      ]),
      createBaseVNode("li", null, [
        createBaseVNode("a", _hoisted_277, [
          createTextVNode("onBeforeMount()(opens new window)"),
          createVNode(_component_ExternalLinkIcon)
        ])
      ]),
      createBaseVNode("li", null, [
        createBaseVNode("a", _hoisted_278, [
          createTextVNode("onBeforeUpdate()(opens new window)"),
          createVNode(_component_ExternalLinkIcon)
        ])
      ]),
      createBaseVNode("li", null, [
        createBaseVNode("a", _hoisted_279, [
          createTextVNode("onBeforeUnmount()(opens new window)"),
          createVNode(_component_ExternalLinkIcon)
        ])
      ]),
      createBaseVNode("li", null, [
        createBaseVNode("a", _hoisted_280, [
          createTextVNode("onErrorCaptured()(opens new window)"),
          createVNode(_component_ExternalLinkIcon)
        ])
      ]),
      createBaseVNode("li", null, [
        createBaseVNode("a", _hoisted_281, [
          createTextVNode("onRenderTracked()(opens new window)"),
          createVNode(_component_ExternalLinkIcon)
        ])
      ]),
      createBaseVNode("li", null, [
        createBaseVNode("a", _hoisted_282, [
          createTextVNode("onRenderTriggered()(opens new window)"),
          createVNode(_component_ExternalLinkIcon)
        ])
      ]),
      createBaseVNode("li", null, [
        createBaseVNode("a", _hoisted_283, [
          createTextVNode("onActivated()(opens new window)"),
          createVNode(_component_ExternalLinkIcon)
        ])
      ]),
      createBaseVNode("li", null, [
        createBaseVNode("a", _hoisted_284, [
          createTextVNode("onDeactivated()(opens new window)"),
          createVNode(_component_ExternalLinkIcon)
        ])
      ]),
      createBaseVNode("li", null, [
        createBaseVNode("a", _hoisted_285, [
          createTextVNode("onServerPrefetch()"),
          createVNode(_component_ExternalLinkIcon)
        ])
      ])
    ]),
    _hoisted_286
  ]);
}
const Vue3_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "Vue3.html.vue"]]);
export {
  Vue3_html as default
};
