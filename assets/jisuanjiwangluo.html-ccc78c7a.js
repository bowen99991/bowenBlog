import { _ as _export_sfc, o as openBlock, c as createElementBlock, a as createStaticVNode } from "./app-1a8c9119.js";
const _imports_0 = "/bowenBlog/assets/image-20231008123354472-3c50f9b5.png";
const _imports_1 = "/bowenBlog/assets/image-20231008123543408-05385666.png";
const _imports_2 = "/bowenBlog/assets/image-20231008123639871-e66c347f.png";
const _imports_3 = "/bowenBlog/assets/image-20231008123733129-c86637e0.png";
const _imports_4 = "/bowenBlog/assets/image-20231008123830026-54dc8134.png";
const _imports_5 = "/bowenBlog/assets/image-20231008124101504-a8de4add.png";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="计算机网络" tabindex="-1"><a class="header-anchor" href="#计算机网络" aria-hidden="true">#</a> 计算机网络</h1><hr><h2 id="什么是计算机网络" tabindex="-1"><a class="header-anchor" href="#什么是计算机网络" aria-hidden="true">#</a> <strong>什么是计算机网络?</strong></h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>计算机网络是指由多台计算机和其他相关设备（如路由器、交换机和光纤等）通过通信链路（如有线或无线传输媒体）连接在一起，以实现数据和资源的共享、通信和协作的系统。计算机网络在现代社会中起到了连接人与人、人与物、物与物的重要作用，它是信息社会和互联网的基础。\n\n以下是计算机网络的概述和相关知识点，包括一些可能在面试中被问到的问题：\n\n1. 网络体系结构和分层模型：\n   - 网络体系结构包括两种主要模型：客户端-服务器模型和对等模型（P2P）。\n   - 分层模型如TCP/IP模型和OSI模型将通信协议分成不同的层次，以便实现功能模块化和互操作性。\n2. 网络拓扑：\n   - 网络拓扑指的是计算机网络中节点（计算机）之间的物理或逻辑连接方式，如总线、星型、环形、树型、网状等。\n3. IP地址与子网掩码：\n   - IP地址是唯一标识计算机或设备在网络中的位置，它分为IPv4和IPv6两种版本。\n   - 子网掩码用于将IP地址分割为网络地址和主机地址，以便进行路由和网络划分。\n4. 网络协议：\n   - 协议是计算机网络中规定了通信规范和格式的约定，如TCP、UDP、HTTP、FTP、SMTP等。\n   - 了解不同协议的功能、特点和使用场景，以及常见端口号等。\n5. 路由与交换：\n   - 路由是指在网络中选择最佳路径将数据分组从源节点传输到目标节点的过程。\n   - 交换是指在局域网内直接传递数据帧，常见的交换方式有电路交换、报文交换和分组交换。\n6. 网络安全与隐私保护：\n   - 网络安全包括身份认证、加密通信、防火墙、入侵检测等措施，用于保护网络和数据的安全。\n   - 隐私保护涉及到对个人身份、隐私数据的保护，在网络通信中要注意隐私泄露的风险和防范手段。\n\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>计算机网络中常见的网络协议名称</strong>:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>1.	TCP/IP (Transmission Control Protocol/Internet Protocol)：TCP/IP是互联网最基本的协议套件，它定义了数据在网络上如何传输和交换的标准。它包括TCP协议和IP协议，用于在网络中可靠地传输数据以及将数据分组进行路由。\n\n2.	HTTP (Hypertext Transfer Protocol)：HTTP是用于在Web浏览器和Web服务器之间传输超文本数据的协议。它采用请求-响应模型，客户端发送HTTP请求到服务器，服务器返回响应。\n\n3.	FTP (File Transfer Protocol)：FTP是一种用于在客户端和服务器之间传输文件的协议。它可以让用户从一个主机向另一个主机上传、下载和浏览文件。\n\n4.	SMTP (Simple Mail Transfer Protocol)：SMTP是用于在电子邮件传输中发送和接收电子邮件的协议。它定义了电子邮件的传输规则，包括邮件的格式、地址和路由。\n\n5.	DNS (Domain Name System)：DNS是一种将域名映射到IP地址的分布式系统。它允许用户通过易于记忆的域名访问网站，而无需记住复杂的IP地址。\n\n6.	DHCP (Dynamic Host Configuration Protocol)：DHCP是一种用于自动分配IP地址和其他网络配置参数的协议。它使得设备可以在加入网络时自动获取IP地址，而无需手动配置。\n\n7.	UDP (User Datagram Protocol)：UDP是一种面向无连接的传输协议，在数据传输时不提供可靠性和连接状态。它被用于需要高速传输和实时性的应用程序，如音频、视频和流媒体\n\n8.	HTTPS (Hypertext Transfer Protocol Secure)：HTTPS是在HTTP上添加了安全层的协议，通过使用SSL或TLS协议对通信进行加密和身份验证，确保数据在传输过程中的安全性。\n\n9.	WebSocket：WebSocket是一种在单个TCP连接上提供全双工通信的协议，它允许在客户端和服务器之间建立持久连接，以便进行实时的双向数据传输。\n\n10.	REST (Representational State Transfer)：REST是一种设计原则和架构风格，用于在Web服务中进行资源的标识、请求和操作。它通常使用HTTP协议来实现，通过GET、POST、PUT和DELETE等HTTP方法进行资源的访问和修改。\n\n11.	WebRTC (Web Real-Time Communication)：WebRTC是一种支持浏览器之间实时音频、视频和数据传输的开放标准。它提供了一组API，使得在Web应用程序中可以直接进行点对点通信，而无需使用插件或其他外部工具。\n\n12.	OAuth (Open Authorization)：OAuth是一种授权框架，用于使用户能够无需直接提供其密码，即可授权第三方应用程序访问其受保护的资源。在前端开发中，OAuth通常用于实现用户使用社交媒体账号登录或授权访问第三方API。\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="网络基础" tabindex="-1"><a class="header-anchor" href="#网络基础" aria-hidden="true">#</a> 网络基础</h2><hr><h3 id="_1-两台计算机进行通信" tabindex="-1"><a class="header-anchor" href="#_1-两台计算机进行通信" aria-hidden="true">#</a> 1，两台计算机进行通信</h3><p>假设 wc上了一个野鸡大学买了一台电脑，电脑里存了1部小电影，整宿整宿的在宿舍反复的看。</p><p>wc 如何想要和室友xq 进行收发数据，可以通过一根网线来进行连接，并进行数据的传输。</p><h3 id="_2-同宿舍多个计算机进行通信" tabindex="-1"><a class="header-anchor" href="#_2-同宿舍多个计算机进行通信" aria-hidden="true">#</a> 2，同宿舍多个计算机进行通信</h3><p>其他的室友如何也想和他们的电脑相互连接然后进行资源的共享，此时就需要一个设备 【二层交换机】组件一个局域网。</p><p>二层交换机 : <u>工作在物理层和数据链路层的交换机</u></p><p>当电脑接入交换机之后，我们需要为每台电脑分配一个IP，例如：</p><ul><li>电脑1：192.168.10.1</li><li>电脑2：192.168.10.2</li><li>电脑3：192.168.10.3</li><li>电脑4：192.168.10.4</li></ul><p>局域网内容个电脑之间是基于ARP协议来进行通信，例如：A电脑向 IP为192.168.10.3的另一个电脑发送消息。它的流程是这样的：</p><ul><li>第一步：A封装数据包(有头信息，有数据)，此时只知道目标IP不知道目标mac地址（未知mac地址时默认会设置为FF）。</li><li>第二步：将数据包发送到交换机，交换机通过广播的形式将数据发送给所有电脑。</li><li>第三步：目标电脑接收到数据包后，监测自己是否是目标IP。 <ul><li>是，收到数据并回复。</li><li>不是，则丢弃包。</li></ul></li></ul><p>为防止每次发送消息都是广播形式，每台电脑的内部都为维护了一个ARP表，接受到数据时（无论是否自己的）都会记录自己了解的IP和MAC的对应关系，以便于下次在发送消息时，就知道了目标的mac地址，直接让交换机转发给指定的电脑（单播）。例如：</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code> 	 Internet地址                 物理地址\n    192.168.10.1            14-9d-da-2a-dd-0a\n    192.168.10.3            14-9d-da-2a-dd-0c\n    	...\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同时，当有消息发送经过二层交换机时他的内容也会维护记录了交换机接口和连接的电脑的mac地址的对应关系，这样一来，交换机在进行数据转发时，效率就更高了。例如：</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>    接口（网卡）               mac地址\n      接口1              14-9d-da-2a-dd-0A\n      接口2              14-9d-da-2a-dd-0B\n      接口3              14-9d-da-2a-dd-0C\n      ...\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：每台电脑出厂时在网卡中都设置了唯一的mac地址（不重复），网卡集成在主板上，如果更换了主板则mac地址也会变更。</p><h3 id="_3-多宿舍进行通信" tabindex="-1"><a class="header-anchor" href="#_3-多宿舍进行通信" aria-hidden="true">#</a> 3，多宿舍进行通信</h3><p>多个宿舍之间想想要组建一个相互可以通信网络，此时需要【二层交换机】和【企业路由器】配合组建稍微大一点的局域网（同时也可缓解广播风暴）。</p><p>企业路由器：</p><p>万兆网口, 高带宽网口 , 可自定义端口类型 + 光纤拓展口</p><p>划分好网络结构之后，其实会给各宿舍的电脑分配IP和网关，例如：</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>   宿舍A：\n        - 电脑1：192.168.10.1  网关：192.168.10.254\n        - 电脑2：192.168.10.2  网关：192.168.10.254\n        - 电脑3：192.168.10.3  网关：192.168.10.254\n        - 电脑4：192.168.10.4  网关：192.168.10.254\n   宿舍B\n        - 电脑1：192.168.20.1  网关：192.168.20.254\n        - 电脑2：192.168.20.2  网关：192.168.20.254\n        - 电脑3：192.168.20.3  网关：192.168.20.254\n        - 电脑4：192.168.20.4  网关：192.168.20.254\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后再在路由器中配置路由表（包含网段和路由器上的接口的对应关系），例如：</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>     接口             IP\n     eth0         192.168.10.254（192.168.10网段）\n     eth1         192.168.20.254（192.168.20网段）\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>想与外部网络通信，需要配置网关，网关就是路由表中配置的指向此网段的IP。其实就类似于贸易出口都需要经过海关。数据通信的过程结合了APR协议和IP协议，例如：宿舍A的电脑1向宿舍B的电脑3发送消息（目标IP：192.168.20.3）。简化过程：</p><ul><li>宿舍A的电脑1，通过广播或单播将数据发送到网关（路由器）</li><li>路由器接收到数据之后，再通过对应的接口把数据通过广播的形式发送到宿舍B。</li></ul><p>注意：各自局域网内通过学习并记录相关mac地址后，就可以不再使用广播形式，而是使用单播来发送消息了。</p><h3 id="_4-三层交换机" tabindex="-1"><a class="header-anchor" href="#_4-三层交换机" aria-hidden="true">#</a> 4，三层交换机</h3><p>三层交换机集成了 交换机 &amp; 路由器的功能（大部分路由器功能），上述的三个设备其实可以用一个三层交换机就可以搞定。</p><p><img src="' + _imports_0 + '" alt="image-20231008123354472"></p><p><strong>工作在网络层 , 数据链路层 , 物理层的交换机设备</strong></p><p>在三层交换机上分别做如下几件事：</p><ul><li>划分两个vlan，模拟出来路由器的两个接口</li><li>将交换机的接口划分给指定的vlan，例如： <ul><li>接口1、2、3划分给一个vlan，相当于交换机连接上了路由器</li><li>接口4、5、6划分给一个vlan，相当于交换机连接上了路由器。</li></ul></li><li>电脑连接上交换机</li><li>进行相应的配置。</li></ul><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>  宿舍A（左边）电脑配置：\n        - 电脑1：192.168.10.1  网关：192.168.10.254   对应交换机接口：1\n        - 电脑2：192.168.10.2  网关：192.168.10.254   对应交换机接口：2\n        - 电脑3：192.168.10.3  网关：192.168.10.254   对应交换机接口：3\n    宿舍B（右边）电脑配置：\n        - 电脑1：192.168.20.1  网关：192.168.20.254   对应交换机接口：4\n        - 电脑2：192.168.20.2  网关：192.168.20.254   对应交换机接口：5\n        - 电脑3：192.168.20.3  网关：192.168.20.254   对应交换机接口：6\n    \n    交换机中的路由配置：\n          接口               IP\n         左vlan        192.168.10.254（192.168.10网段）\n         右vlan        192.168.20.254（192.168.20网段）\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过上述的配置之后，就可以实现宿舍A和宿舍B的网络通信了。</p><h3 id="_5-小型企业网络架构" tabindex="-1"><a class="header-anchor" href="#_5-小型企业网络架构" aria-hidden="true">#</a> 5，小型企业网络架构</h3><p><img src="' + _imports_1 + '" alt="image-20231008123543408"></p><h3 id="_6-家庭网络架构" tabindex="-1"><a class="header-anchor" href="#_6-家庭网络架构" aria-hidden="true">#</a> 6，家庭网络架构</h3><p>家用路由器集成了是交换机和路由的功能（性能差、价格便宜）。</p><h3 id="_7-互联网" tabindex="-1"><a class="header-anchor" href="#_7-互联网" aria-hidden="true">#</a> 7，互联网</h3><p><img src="' + _imports_2 + '" alt="image-20231008123639871"></p><h3 id="_8-客户端和服务器" tabindex="-1"><a class="header-anchor" href="#_8-客户端和服务器" aria-hidden="true">#</a> 8，客户端和服务器</h3><p><strong>客户端：</strong> Client 客户所使用的电脑中安装的应用程序。</p><p><strong>服务端：</strong> Server 存放网页，客户端程序，数据处理程序，数据库的电脑。</p><p>Client ----------------- Server</p><p><img src="' + _imports_3 + '" alt="image-20231008123733129"></p><p><strong>客户端（网页浏览器、网络爬虫或者其它的工具）作用</strong></p><ul><li>发起一个HTTP请求到服务器上指定端口（默认端口为80）</li><li>我们称这个客户端为用户代理程序（user agent）</li></ul><p><strong>服务端作用</strong></p><ul><li>响应的服务器上存储着一些资源，比如HTML文件和图像</li><li>我们称这个响应服务器为源服务器（origin server）</li></ul><h3 id="_9-从uri说起" tabindex="-1"><a class="header-anchor" href="#_9-从uri说起" aria-hidden="true">#</a> 9，==! 从URI说起==</h3><hr><p><strong>URI</strong></p><ul><li>Uniform Resource Identifier 统一资源标识符，用来唯一标识一个资源</li></ul><p><strong>URL</strong></p><ul><li>Uniform Resource Locator 统一资源定位符，用来唯一标识一个资源</li><li>URL也可以用来标识一个资源，而且它还可以指明如何定位资源</li></ul><p><strong>URN</strong></p><ul><li>Uniform Resource Name 统一资源命名 通过名字表示资源</li></ul><p><strong>URL肯定是一个URI，URI并不一定是URL，也有可能是URN，URL与URN是URI的子集</strong></p><ul><li>你要找WC这个人，WC就是一个URI，URI没有寻找资源的方式</li><li>家庭住址 =&gt; URL 定位</li><li>姓名+身份证号 =&gt; URN</li></ul><p><img src="' + _imports_4 + '" alt="image-20231008123830026"></p><p><strong>对于我们来说，最重要的是URL，它的作用</strong></p><ul><li>资源标识</li><li>有定位资源的功能</li><li>指明了获取资源所采用的协议</li></ul><p><strong>URL格式</strong></p><ul><li>协议名称 + 主机名称 + 端口号 + 路径 + 文件 + 查询所需的字符串 + HASH</li><li>http:// baidu.com :80 /01/index.html ?a=1&amp;b=2 #abc</li><li>scheme:// host port path filename ?query hash</li></ul><h3 id="_10-bs-架构和-cs-架构" tabindex="-1"><a class="header-anchor" href="#_10-bs-架构和-cs-架构" aria-hidden="true">#</a> 10，BS 架构和 CS 架构</h3><p><strong>BS架构</strong></p><ul><li>Browser/Server(浏览器/服务器), 利用浏览器去呈现界面，浏览器提供浏览器所需要的数据</li><li>优点：无需安装客户端软件，只需要有浏览器，无需升级客户端。</li><li>缺点：浏览器的兼容性可能有问题，功能性相对弱一点，安全性弱，交互性弱。</li></ul><p><strong>CS架构</strong></p><ul><li>Client/Server 将应用程序放到一个软件中，可以是Android也可以是iOS，服务器给客户端软件提供它需要的数据。</li><li>优点：界面丰富，交互性强，响应速度快，安全性强。</li><li>缺点：开发成本高，需要下载安装，维护成本高，升级麻烦。</li></ul><h3 id="_11-购买云服务器和域名" tabindex="-1"><a class="header-anchor" href="#_11-购买云服务器和域名" aria-hidden="true">#</a> 11，购买云服务器和域名</h3><p><strong>服务器分类</strong></p><ul><li>实体服务器：自己购买服务器。</li><li>云服务器：阿里云，华为云，JD云....</li></ul><p><strong>域名分类</strong></p><ul><li>通用类 <ul><li>.com 工商金融企业</li><li>.com.cn 公司</li><li>.gov 政府</li><li>.net 提供互联网网络服务机构</li><li>.org 各类组织机构</li><li>.edu 教育机制</li></ul></li><li>国家地区分类 <ul><li>.cn 中国</li><li>.ca 加拿大</li><li>.uk 英国</li><li>.jp 日本</li></ul></li><li>域名级别 <ul><li>顶级域名（一级域名） baiu.com 一般我们买的是一级域名，在一级域名下可以配 置N个二级域名</li><li>二级域名 zhidao.baidu.com image.baidu.com wenku.baidu.com tieba.baidu.com</li><li>三级域名 sport.news.baidu.com</li><li>www.baidu.com 也是所谓的二级域名</li></ul></li></ul><p><strong>www: world Wide Web 万维网</strong></p><ul><li>Internet，叫因特网。这个因特网中提供非常多的服务，如www网页服务，ftp文件传输服务，E-mail电子邮件服务，Telnet远程登录服务...，www是浏览器访问网页的服务，所以说，很早之前，所有的网站主页域名前面都会加上www。后来，可以配置二域名和三级域名，不同的域名，就可以对应不同的业务，而业务处理任务会分配到不同的服务器，所以，不再需要使用www来标注主页了。但是加上www，已经成为一种习惯了，所以现在，很多网站都还会做DNS解析www，说到底还是尊重用户习惯。国外的网站基本上都不会使用www。</li></ul><h3 id="_12-dns-解析" tabindex="-1"><a class="header-anchor" href="#_12-dns-解析" aria-hidden="true">#</a> 12，==! DNS 解析==</h3><hr><p><strong>DNS</strong>：Domain Name Server(域名服务器)</p><ul><li>作用：域名与对应的IP转化的服务器</li><li>DNS中保存了一张域名与对应的IP地址的表，一个域名对应一个IP地址，一个IP地址可以对应多个域名</li><li>说白了，根据域名，通过DNS解析就可以得到一个IP 地址。就可以找到对应的服务器</li></ul><h3 id="_13-ip-地址和端口号" tabindex="-1"><a class="header-anchor" href="#_13-ip-地址和端口号" aria-hidden="true">#</a> 13，IP 地址和端口号</h3><p><strong>IP</strong>：Internet Protocol Address 互联网协议地址 IP地址</p><ul><li>作用：分配给用户上网使用的互联网协议</li><li>分类：IPv4 IPv6</li></ul><p>根据IP地址，就可以找到对应的服务器，服务器上可以提供N种服务器，你需要哪种服务呢？就需要根据端口号，来区分你需要哪种服务。</p><ul><li>端口号范围：0~65535 0~1024是系统使用的 1025~65535之间</li><li>知名端口号：http协议下：80 https协议下：443 mysql: 3306 FTP协议下：20 21...</li></ul><h3 id="_14-tcp连接" tabindex="-1"><a class="header-anchor" href="#_14-tcp连接" aria-hidden="true">#</a> 14，==! TCP连接==</h3><hr><p><strong>TCP</strong>：transmission Control Protocol 传输控制协议</p><ul><li>特点：在收发数据之前，必须建立可靠的连接。TCP就是可靠连接。UDP不可靠连接。</li><li>建立连接基础：三次握手</li><li>应用场景：HTTP请求(HTTP请求就是基于TCP的)，FTP文件传输，邮件发送</li><li>优点：速度慢，稳定，重传机制</li><li>缺点：效率低，占用资源，容易被攻击</li></ul><p><strong>TCP 三次握手理解 (双方确认)（非常重要，面试必问）</strong></p><ul><li>TCP是一个端到端的 可靠 面相连接的协议</li><li>HTTP基于传输层TCP协议不用担心数据传输的各种问题（当发生错误时，可以重传）</li><li>根据IP，找到对应的服务器，发起TCP的三次握手</li></ul><p><img src="' + _imports_5 + '" alt="image-20231008124101504"></p><p><strong>为什么要3次握手？</strong></p><p>我们假定第一次发送的请求, 因为网络延迟很慢才到达服务端，然后客户端以为这服务器居然不理睬我， 然后 默默的关闭的等待连接的请求，走开了（好比追女神）；但事实呢？女神（服务器）是因为各种各样的原因，很 晚才看到，然后说我接受你了, 同意你的要求咱们两结婚吧！但是，A早已经远走高飞，这个请求A完全不会收到 （在第二次握手，服务端打开连接，等待客户端的响应），那么女生呢，以为对方收到了，就会一直等待，这样 B的资源就会被浪费的（创建连接的时候，空间浪费以及端口消耗）；而三次握手, 就不会发生，服务端同意连 接了，但是A缺一直没有下一步的动作，导致资源浪费；</p><p><strong>关闭TCP连接四次挥手的理解 (客气挽留)</strong></p><ul><li>不能直接一次性断开连接(双方知晓), 万一还有什么数据没有传完, 造成数据的丢失!</li></ul><p><strong>为什么要4次挥手？</strong></p><p>这和有礼貌的好友道别一样：（a：客户端 b: 服务端） 1、一开始A想要回家离开，但是呢？怕B还有事情要交代， 那么呢？只好先向B打招呼，我要走了，请求停止交谈(请求断开连接)，(此时，a到B的连接没有断开，依旧可以 进行通信）； 2、同意A的请求，说好的，但是我这里可能还有一些话（数据）没说完。我检查看看, 你等等, 等我说完你再走。 3、B确实没啥要补充的了，就告知你我可以撤了 4、A说好的，知道了，88；（B得知A走开了，关闭了自己的连接 )</p><p><strong>总结三次握手和四次挥手</strong></p><ul><li>建立连接 =&gt; 三次握手 (双方确认) <ul><li>(1) 服务器啊, 我是浏览器, 我要和你建立连接</li><li>(2)服务器看到了, 好的, 那么建立连接吧, 我准备好了, 你确定吗?</li><li>(3)浏览器: 是的, 我确定!</li><li>(4) 连接就建立成功，三次握手 = 连接的发起 + 双方的确认</li></ul></li><li>断开连接 =&gt; 四次挥手 (客气挽留) <ul><li>(1) 一方A发起断开连接的消息</li><li>(2) 另一方B会确认收到断开的需求, 但是会要求等一等, 确认是否数据传输完毕</li><li>(3) B当确认完之后, 确实数据都传完了, 告知A, 连接可以断开了</li><li>(4) A确认收到消息, 告知B, 我要走了</li></ul></li></ul><h3 id="_15-http的概念" tabindex="-1"><a class="header-anchor" href="#_15-http的概念" aria-hidden="true">#</a> 15，==! HTTP的概念==</h3><hr><p><strong>HTTP：HyperText Transfer Protocol 超文本传输协议</strong>：</p><ul><li>客户端和与服务器之间传递数据的规范</li><li>HTTP请求：按照HTTP协议（规则），由客户端（浏览器）向服务器发出请求</li><li>HTTP响应：按照HTTP协议（规则），由服务器给出响应</li></ul><p><strong>HTTPS:</strong> HyperText Transfer Protocol Secure 超文本传输安全协议。</p><ul><li>HTTP的安全版本（安全的基础是SSL/TLS）</li><li>SSL: Secure Sockets Layer 安全套接层</li><li>TLS：transport Layer Security 传输层安全</li><li>说白了，就是为了网络通信提供的一种安全协议，对网络连接进行加密</li></ul><p><strong>HTTP和HTTPS的区别</strong></p><ul><li>HTTP是不安全 HTTPS可以防止攻击</li><li>HTTP协议传输的内容是明文，直接在TCP连接上传递，客户端和服务器都无法验证对方的身份</li><li>HTTPS协议的传输内容都是被SSL/TLS加密，且运行在SSL/TLS，SSL/TLS运行在TCP连接上，所以传递的数据是安全</li></ul><h3 id="_16-http报文" tabindex="-1"><a class="header-anchor" href="#_16-http报文" aria-hidden="true">#</a> 16，HTTP报文</h3><p>HTTP是基于TCP通信协议来传递数据。通过一个可靠的连接来交换信息。在交换信息之前，客户端和服务器之间需要有规则。</p><p><strong>HTTP通信包含两部分</strong></p><ul><li>HTTP请求 Request</li><li>HTTP响应 Response</li></ul>', 120);
const _hoisted_121 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache) {
  return openBlock(), createElementBlock("div", null, _hoisted_121);
}
const jisuanjiwangluo_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "jisuanjiwangluo.html.vue"]]);
export {
  jisuanjiwangluo_html as default
};
