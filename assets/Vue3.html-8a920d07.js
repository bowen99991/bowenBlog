import { _ as _export_sfc, r as resolveComponent, o as openBlock, c as createElementBlock, a as createBaseVNode, b as createTextVNode, e as createVNode, d as createStaticVNode } from "./app-b060986b.js";
const _imports_0 = "/bowenBlog/assets/image-20231107190813439-0f09cd8a.png";
const _imports_1 = "/bowenBlog/assets/image-20231107190824305-a7fbd5d7.png";
const _imports_2 = "/bowenBlog/assets/image-20231107190829549-16e65511.png";
const _imports_3 = "/bowenBlog/assets/image-20231107190922329-40ac5170.png";
const _imports_4 = "/bowenBlog/assets/image-20231107191047318-f99d6984.png";
const _imports_5 = "/bowenBlog/assets/image-20231107191133982-b6320572.png";
const _imports_6 = "/bowenBlog/assets/image-20231107191358350-1b0e0388.png";
const _imports_7 = "/bowenBlog/assets/image-20231107192853212-d2a46bcd.png";
const _imports_8 = "/bowenBlog/assets/image-20231107192921548-6357f7b1.png";
const _imports_9 = "/bowenBlog/assets/image-20231107193118362-896ba0e4.png";
const _imports_10 = "/bowenBlog/assets/image-20231107193128082-facc7d44.png";
const _imports_11 = "/bowenBlog/assets/image-20231107194051590-08ebcd09.png";
const _imports_12 = "/bowenBlog/assets/image-20231107194103639-3d3ded42.png";
const _imports_13 = "/bowenBlog/assets/image-20231107194132716-f8156210.png";
const _imports_14 = "/bowenBlog/assets/image-20231107194204271-4b23786c.png";
const _imports_15 = "/bowenBlog/assets/image-20231107194335199-8ffd3bbc.png";
const _imports_16 = "/bowenBlog/assets/image-20231108201630101-3c339afe.png";
const _imports_17 = "/bowenBlog/assets/image-20231108201721507-8e19749e.png";
const _imports_18 = "/bowenBlog/assets/image-20231108201820165-badd1798.png";
const _imports_19 = "/bowenBlog/assets/image-20231108201830671-6f44b437.png";
const _imports_20 = "/bowenBlog/assets/image-20231108202021412-022e8a15.png";
const _imports_21 = "/bowenBlog/assets/image-20231108202046442-fcac8ee9.png";
const _imports_22 = "/bowenBlog/assets/image-20231108202203957-d96a50c3.png";
const _imports_23 = "/bowenBlog/assets/image-20231108202215579-de6000d8.png";
const _imports_24 = "/bowenBlog/assets/image-20231108142241023-dd2f46c3.png";
const _imports_25 = "/bowenBlog/assets/image-20231108142531556-08c2b9d0.png";
const _imports_26 = "/bowenBlog/assets/image-20231108142646281-3c402abe.png";
const _imports_27 = "/bowenBlog/assets/image-20231108142808201-3e51d97c.png";
const _imports_28 = "/bowenBlog/assets/image-20231108153441033-2eacbf05.png";
const _imports_29 = "/bowenBlog/assets/image-20231108204420517-58306477.png";
const _imports_30 = "/bowenBlog/assets/image-20231108153917434-0cc13e0a.png";
const _imports_31 = "/bowenBlog/assets/image-20231108204528035-40ca9740.png";
const _imports_32 = "/bowenBlog/assets/image-20231108204923527-f5c25dca.png";
const _imports_33 = "/bowenBlog/assets/image-20231108205122161-655c19e3.png";
const _imports_34 = "/bowenBlog/assets/image-20231108210007669-0837a590.png";
const _imports_35 = "/bowenBlog/assets/image-20231108210056057-389fbf23.png";
const _imports_36 = "/bowenBlog/assets/image-20231108210232185-1885d8b6.png";
const _imports_37 = "/bowenBlog/assets/image-20231108210304847-657103f1.png";
const _imports_38 = "/bowenBlog/assets/image-20231108211811774-ceaece24.png";
const _imports_39 = "/bowenBlog/assets/image-20231108211821794-fed9249f.png";
const _imports_40 = "/bowenBlog/assets/image-20231108212215938-2c40e96e.png";
const _imports_41 = "/bowenBlog/assets/image-20231108212414548-3a050b83.png";
const _imports_42 = "/bowenBlog/assets/image-20231108212428472-d01e0eba.png";
const _imports_43 = "/bowenBlog/assets/image-20231108212443282-b3f349b9.png";
const _imports_44 = "/bowenBlog/assets/image-20231108212613686-f0b45d7a.png";
const _imports_45 = "/bowenBlog/assets/image-20231108212854519-02bd4adf.png";
const _imports_46 = "/bowenBlog/assets/image-20231108212913551-ad45229a.png";
const _imports_47 = "/bowenBlog/assets/image-20231108212929143-56176dd2.png";
const _imports_48 = "/bowenBlog/assets/image-20231108212949651-81165e19.png";
const _imports_49 = "/bowenBlog/assets/image-20231108213005019-ec1c962c.png";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h2 id="vue3" tabindex="-1"><a class="header-anchor" href="#vue3" aria-hidden="true">#</a> Vue3</h2><hr><h2 id="一-vue3" tabindex="-1"><a class="header-anchor" href="#一-vue3" aria-hidden="true">#</a> 一, VUe3</h2><h3 id="_1-vue3-介绍" tabindex="-1"><a class="header-anchor" href="#_1-vue3-介绍" aria-hidden="true">#</a> 1, Vue3 介绍</h3><p>Vue3文档地址：https://cn.vuejs.org/</p><p><strong>渐进式,JavaScript框架</strong></p><p><strong>Vue特点:</strong></p><p>易学易用</p><ul><li>API设计简单，好上手，也是Vue很火的原因</li></ul><p>性能出色</p><ul><li>proxy，精准更新，diff算法....</li></ul><p>灵活多变</p><ul><li>渐进式，可大可小的项目都可以做，可以逐步集成很多第三方的依赖</li></ul><p><strong>你是如何理解vue2？</strong></p><ul><li>vue是数据驱动视图（响应式原理）</li><li>vue2是选项式API（一堆的选项）</li><li>组件化开发（自定义属性，自定义事件，自定义插槽，选项式API，组件通信）</li><li>十几个指令（内置指令），指令的本质是对DOM操作的封装......</li><li>五大内置组件（slot, transition, component, keep-alive, transition-group）</li><li>复用技巧（组件，混入，过滤器，自定义指令，插件，原型链....）</li><li>图：组件的生命周期图，MVVM图，Vuex图，响应式原理图...</li></ul><p><strong>技术栈官网</strong></p><ul><li>技术栈：Vue3+VueRouter4+Pinia2+Vant3/ElementPlus</li><li>1、Vue3官网：https://vuejs.org/</li><li>2、VueRouter(V4)：https://router.vuejs.org/</li><li>3、Pinia(V2)：https://pinia.vuejs.org/</li><li>4、Vite构建工具：https://vitejs.dev/</li><li>5、ElementPlus：https://element-plus.gitee.io/zh-CN/</li><li>6、Vant(v3)：https://vant-contrib.gitee.io/vant/#/zh-CN</li></ul><p><strong>Vue3 相较于 Vue2 有了哪些升级,有什么区别?</strong></p><blockquote><p>Vue 3 相较于 Vue 2 进行了一些重要的升级和改进。以下是 Vue 3 相对于 Vue 2 的主要区别和改进：</p><ol><li><p><strong>更高的性能：</strong> Vue 3 在内部进行了重写和优化，提供了更快的渲染速度和更小的包大小。通过使用更高效的虚拟 DOM 算法（Faster DOM），以及优化的编译器，Vue 3 在性能方面有了显著的提升。</p></li><li><p><strong>Composition API：</strong> Vue 3 引入了 Composition API，这是一种新的组合式 API 风格，提供了更灵活和可组合的组件逻辑复用方式。相较于 Vue 2 的 Options API，Composition API 更好地支持逻辑的组合和代码的重用，使得组件更易于维护和测试。</p></li><li><p><strong>更好的 TypeScript 支持：</strong> Vue 3 对 TypeScript 的支持更加完善，并且内部使用了 TypeScript 进行开发。Vue 3 中引入了一些新的类型和增强的类型推导，使得在使用 TypeScript 开发 Vue 应用时更加友好和高效。</p></li><li><p><strong>Teleport（传送门）：</strong> Vue 3 引入了 Teleport 组件，它允许将组件的内容渲染到 DOM 中的任意位置。这对于创建弹出框、模态框、通知等需要在 DOM 中的不同位置渲染的场景非常有用。</p></li><li><p><strong>Fragment（片段）：</strong> Vue 3 支持使用 <code>&lt;template&gt;</code> 标签以外的方式来定义组件的根元素，例如直接使用文本节点或多个根级元素。这样可以更灵活地组织组件的结构，而不再限制于单个根元素。</p></li><li><p><strong>更好的 Tree-Shaking 支持：</strong> Vue 3 的模块被重构为更好地支持 Tree-Shaking（摇树优化），这意味着在构建应用程序时可以更有效地剔除未使用的代码，减少最终打包的体积。</p></li><li><p><strong>全局 API 的变更：</strong> Vue 3 中的一些全局 API 发生了变化，例如 <code>Vue.component</code> 被替换为 <code>app.component</code>，<code>Vue.filter</code> 被替换为 <code>app.config.globalProperties.$filter</code> 等。这些变化主要是为了提高代码的可靠性、可维护性和可扩展性。</p></li></ol><p>Vue 3 的目标是提供更好的性能、更灵活的开发体验和更好的 TypeScript 支持，以便开发者能够构建更加高效、可维护和可扩展的 Vue 应用程序。</p></blockquote><h3 id="_2-创建-vue3项目" tabindex="-1"><a class="header-anchor" href="#_2-创建-vue3项目" aria-hidden="true">#</a> 2, 创建 Vue3项目</h3><p><strong>npm 方式创建 Vue</strong></p><p><em>直接安装了最新的vue版本</em></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> create vue@latest\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>', 23);
const _hoisted_24 = {
  href: "https://github.com/vuejs/create-vue",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_25 = /* @__PURE__ */ createStaticVNode('<p><img src="' + _imports_0 + '" alt="image-20231107190813439"></p><p>进入项目，安装依赖，运行项目，如下：</p><p><img src="' + _imports_1 + '" alt="image-20231107190824305"></p><p><img src="' + _imports_2 + '" alt="image-20231107190829549"></p><p>项目运行由vite打包, 所以项目启动相较于vue2 速度提升非常多</p><p><strong>CDN 的方式引入 Vue</strong></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://unpkg.com/vue@3/dist/vue.global.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>通过 CDN 使用 Vue 时，不涉及“构建步骤”。这使得设置更加简单，并且可以用于增强静态的 HTML 或与后端框架集成。但是，你将无法使用单文件组件 (SFC) 语法。</p><p><em>可能出现的问题: 如果报错, 是因为请求连接失败, 网络原因(需要开启代理, 科学上网!)</em></p><p><strong>使用全局构建版本</strong></p><p>上面的链接使用了<em>全局构建版本</em>的 Vue，该版本的所有顶层 API 都以属性的形式暴露在了全局的 <code>Vue</code> 对象上。这里有一个使用全局构建版本的例子：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://unpkg.com/vue@3/dist/vue.global.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ message }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token operator">=</span> Vue\n  <span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;Hello Vue!&#39;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>使用 ES 模块构建版本</strong></p>', 13);
const _hoisted_38 = {
  href: "https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Modules",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_39 = /* @__PURE__ */ createStaticVNode('<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ message }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>module<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;https://unpkg.com/vue@3/dist/vue.esm-browser.js&#39;</span>\n  \n  <span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;Hello Vue!&#39;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意我们使用了 <code>&lt;script type=&quot;module&quot;&gt;</code>，且导入的 CDN URL 指向的是 Vue 的 <strong>ES 模块构建版本</strong>。</p><p>使用 vscode 打开,查看项目架构:</p><p><img src="' + _imports_3 + '" alt="image-20231107190922329"></p><p><strong>目录分析：</strong></p><ul><li>vite.config.js 是Vite官方配置文件，各种配置参考Vite官网。</li><li>index.html 是SPA挂载的根页面</li><li>main.js 是入口文件</li><li>App.vue 是根组件（SFC单文件组织）</li><li>src 文件夹 是源码目录 <ul><li>views 放路由级别的组件</li><li>compoents 放通用组件</li><li>router 放路由相关的</li><li>store 放仓库相关的</li><li>api 封装API接口相关的</li><li>utils 放工具函数</li></ul></li></ul><p>在开发Vue3，在VSCode中还需要安装插件，如下：</p><p><strong>volar</strong></p><p><img src="' + _imports_4 + '" alt="image-20231107191047318"></p><p>互动教程，如下：</p><p><img src="' + _imports_5 + '" alt="image-20231107191133982"></p><h3 id="_3-声明式渲染" tabindex="-1"><a class="header-anchor" href="#_3-声明式渲染" aria-hidden="true">#</a> 3, 声明式渲染</h3><p><strong>四种语法范式：</strong></p><ul><li>选项式写法：完成支持Vue2写法，我们之前学习的Vue2的写法就是选项式写法</li><li>组合式写法：只使用setup()，把组合式API写在setup中就是组合式写法</li><li>选项式+组合式写法：可以使用setup()+选项式写法</li><li>组合式语法糖写法：在script标签上添加setup，只支持组合式写法，规避选项式写法。</li></ul><p><strong>选项式写法：</strong></p><p><img src="' + _imports_6 + '" alt="image-20231107191358350"></p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>选项式API写法<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>num<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>add<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>+1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">num</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>num<span class="token operator">++</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>组合式写法:(了解)</strong></p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>选项式API写法<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>num<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>add<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>+1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token comment">// ref是组合式API</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token comment">// Vue3的选项写法：对Vue2范式完全兼容，可以同时使用setup和选项，也可只使用setup。</span>\n  <span class="token comment">// 官方已经不推荐使用这种选项写法了。选项写法，都有对应的组合API来实现。</span>\n  <span class="token comment">// 解读setup这个选项：相当于Vue2中的created()，可以理解成是组件生命周期的第一阶段；setup(props,context)，context表示上下文，为什么在setup中要有一个上下文对象，因为在setup选项中没有this。</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// setup是组合式API的入口</span>\n    <span class="token keyword">const</span> num <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">//num是调用ref函数之后的结果，它是一个对象</span>\n    <span class="token comment">// 不能直接num++  num.value才是响应式数据的值</span>\n    <span class="token comment">// 在模板中，它会自动的.value</span>\n    <span class="token keyword">const</span> <span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      num<span class="token punctuation">.</span>value<span class="token operator">++</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      num<span class="token punctuation">,</span>\n      add<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>选项式和组合式混写：（了解）</strong></p><p><img src="' + _imports_7 + '" alt="image-20231107192853212"></p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>选项式+组合式API写法<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>num<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>add<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>+1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>\n<span class="token comment">// 非常不推荐这种写法</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 组合选项</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> num <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      num<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>num<span class="token operator">++</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>组合式语法糖写法(推荐):</strong></p><p><img src="' + _imports_8 + '" alt="image-20231107192921548"></p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>组合式语法糖写法<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>num<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>add<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>+1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> num <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  num<span class="token punctuation">.</span>value<span class="token operator">++</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>官方文档教程，如下：</p><p><img src="' + _imports_9 + '" alt="image-20231107193118362"></p><p><img src="' + _imports_10 + '" alt="image-20231107193128082"></p><h3 id="_4-tribute绑定" tabindex="-1"><a class="header-anchor" href="#_4-tribute绑定" aria-hidden="true">#</a> 4, tribute绑定</h3><p>试着把一个动态的 <code>class</code> 绑定添加到这个 <code>&lt;h1&gt;</code> 上，并使用 <code>titleClass</code> 的 ref 作为它的值。如果绑定正确，文字将会变为红色。代码如下：</p><p><img src="' + _imports_11 + '" alt="image-20231107194051590"></p><h3 id="_5-表单绑定与双向绑定" tabindex="-1"><a class="header-anchor" href="#_5-表单绑定与双向绑定" aria-hidden="true">#</a> 5, 表单绑定与双向绑定</h3><p><img src="' + _imports_12 + '" alt="image-20231107194103639"></p><p><img src="' + _imports_13 + '" alt="image-20231107194132716"></p><p><strong>什么是双向绑定？什么是单向绑定？</strong></p><ul><li>单向绑定：数据驱动视图，通过ref或reactive定义的响应式数据，数据发生变化时，模板会自动刷新。</li><li>双向绑定：数据驱动视图，视图驱动数据。 v-model=@input + :value</li></ul><h3 id="_6-条件渲染" tabindex="-1"><a class="header-anchor" href="#_6-条件渲染" aria-hidden="true">#</a> 6, 条件渲染</h3><p><img src="' + _imports_14 + '" alt="image-20231107194204271"></p><h3 id="_7-列表渲染" tabindex="-1"><a class="header-anchor" href="#_7-列表渲染" aria-hidden="true">#</a> 7, 列表渲染</h3><p>直接写todo案例，如下：</p><p><img src="' + _imports_15 + '" alt="image-20231107194335199"></p><p>参考代码,如下</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">@submit.prevent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>addTodo<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>newTodo<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token comment">&lt;!-- &lt;button @click=&quot;addTodo&quot;&gt;Add Todo&lt;/button&gt; --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>Add Todo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>todo in todos<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>todo.id<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      {{ todo.text }}\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>removeTodo(todo)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>X<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 给每个 todo 对象一个唯一的 id</span>\n\n<span class="token keyword">const</span> newTodo <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> todos <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n  <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> id<span class="token operator">++</span><span class="token punctuation">,</span> <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;Learn HTML&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> id<span class="token operator">++</span><span class="token punctuation">,</span> <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;Learn JavaScript&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> id<span class="token operator">++</span><span class="token punctuation">,</span> <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;Learn Vue&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">removeTodo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">todo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// console.log(&quot;todo:&quot;,todo.id);</span>\n  <span class="token keyword">let</span> idx <span class="token operator">=</span> todos<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token operator">=&gt;</span>item<span class="token punctuation">.</span>id <span class="token operator">===</span> todo<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  todos<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">addTodo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>newTodo<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;输入框不能为空~&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> \n  todos<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> id<span class="token operator">++</span><span class="token punctuation">,</span> <span class="token literal-property property">text</span><span class="token operator">:</span> newTodo<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  newTodo<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为什么 key 的值不能为索引?</p><blockquote><p>在 Vue 中，<code>key</code> 是用于跟踪每个节点的身份的特殊属性。当 Vue 执行更新时，它会使用 <code>key</code> 来检测哪些组件或元素已被修改、添加或删除。</p><p>使用索引作为 <code>key</code> 的值可能会导致一些问题，尤其是在存在动态列表或条件渲染时。以下是为什么不建议将索引作为 <code>key</code> 的值的原因：</p><ol><li><strong>不稳定的排序</strong>：索引是基于元素在列表中的位置，而不是元素自身的唯一标识。如果列表中的元素被重新排序，索引可能会发生变化，这可能会导致 Vue 错误地认为某些元素已经被替换或删除，从而导致意外的行为。</li><li><strong>重复的键</strong>：如果列表中存在重复的索引，即多个元素具有相同的 <code>key</code> 值，Vue 将无法准确地区分它们，从而导致渲染错误或意外的行为。</li><li><strong>性能问题</strong>：Vue 使用 <code>key</code> 来优化渲染过程。通过使用稳定且唯一的 <code>key</code>，Vue 可以更快地识别出哪些元素发生了变化，并进行针对性的更新操作。如果使用索引作为 <code>key</code>，则可能会导致 Vue 需要检查更多的元素，从而降低性能。</li></ol><p>避免以上的问题, 建议使用<strong>具有稳定且唯一标识的值作为 <code>key</code></strong> .</p><p>例如: 每个元素在列表中的唯一标识符,数据库中唯一的ID,或其他具有唯一性的属性作为 key 的值.</p></blockquote><h3 id="_8-计算属性" tabindex="-1"><a class="header-anchor" href="#_8-计算属性" aria-hidden="true">#</a> 8, 计算属性</h3><blockquote><p>计算属性就是根据已有的状态，计算出一个新的状态。我们可以把模板中的复杂计算抽离到计算属性中，让模板看上去更优雅。计算属性有缓存，当计算属性依赖的状态发生了变化，才会重新计算。</p></blockquote><p>官方文档写的：</p><ul><li>计算属性会自动跟踪其计算中所使用的到的其他响应式状态，并将它们收集为自己的依赖。计算结果会被缓存，并<strong>只有在其依赖发生改变时才会被自动更新</strong>。</li></ul><p><strong>总结：</strong></p><ul><li>计算属性有缓存的特性。</li><li>只有它依赖的状态，变化的空间不大，计算属性的收益更高</li></ul><p><img src="' + _imports_16 + '" alt="image-20231108201630101"></p><p>参考代码：</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">@submit.prevent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>addTodo<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>newTodo<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>Add Todo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>todo in filterTodos<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>todo.id<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>todo.done<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ done: todo.done }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> {{ todo.text }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>removeTodo(todo)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>X<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hideCompleted = !hideCompleted<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    {{ hideCompleted ? &quot;Show all&quot; : &quot;Hide completed&quot; }}\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> reactive<span class="token punctuation">,</span> computed <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 给每个 todo 对象一个唯一的 id</span>\n\n<span class="token keyword">const</span> hideCompleted <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> newTodo <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> todos <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n  <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> id<span class="token operator">++</span><span class="token punctuation">,</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;Learn HTML&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> id<span class="token operator">++</span><span class="token punctuation">,</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;Learn JavaScript&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> id<span class="token operator">++</span><span class="token punctuation">,</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;Learn Vue&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> filterTodos <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hideCompleted<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> todos<span class="token punctuation">.</span>value<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>hideCompleted<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> todos<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">todo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token operator">!</span>todo<span class="token punctuation">.</span>done<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">removeTodo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">todo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// console.log(&quot;todo:&quot;,todo.id);</span>\n  <span class="token keyword">let</span> idx <span class="token operator">=</span> todos<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>id <span class="token operator">===</span> todo<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  todos<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">addTodo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>newTodo<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;输入框不能为空~&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  todos<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> id<span class="token operator">++</span><span class="token punctuation">,</span> <span class="token literal-property property">text</span><span class="token operator">:</span> newTodo<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  newTodo<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\n<span class="token selector">.done</span> <span class="token punctuation">{</span>\n  <span class="token property">text-decoration</span><span class="token punctuation">:</span> line-through<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_9-生命周期与模板引用" tabindex="-1"><a class="header-anchor" href="#_9-生命周期与模板引用" aria-hidden="true">#</a> 9, 生命周期与模板引用</h3><blockquote><p>目前为止，Vue 为我们处理了所有的 DOM 更新，这要归功于响应性和声明式渲染。然而，有时我们也会不可避免地需要手动操作 DOM。</p><p>这时我们需要使用<strong>模板引用</strong>——也就是指向模板中一个 DOM 元素的 ref。直接上代码：</p></blockquote><p><img src="' + _imports_17 + '" alt="image-20231108201721507"></p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token comment">&lt;!-- 此处的ref和我们讲面讲的ref含义是不一样的 --&gt;</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>p<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>hello<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token comment">// 在vue3中生命周期函数都是组合式API</span>\n<span class="token comment">// 都是以on打头</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> onMounted <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n  <span class="token comment">// 此时组件已经挂载。</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  p<span class="token punctuation">.</span>value<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token string">&#39;mounted!&#39;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_10-侦听器" tabindex="-1"><a class="header-anchor" href="#_10-侦听器" aria-hidden="true">#</a> 10, 侦听器</h3><p>直接上代码：</p><p><img src="' + _imports_18 + '" alt="image-20231108201820165"></p><p>直接官方的案例：</p><p><img src="' + _imports_19 + '" alt="image-20231108201830671"></p><p>参考代码:</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Todo id: {{ todoId }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>todoId++<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Fetch next todo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>!todoData<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Loading...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span> <span class="token attr-name">v-else</span><span class="token punctuation">&gt;</span></span>{{ todoData }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> watch <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> todoId <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> todoData <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fetchData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  todoData<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>\n    <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://jsonplaceholder.typicode.com/todos/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>todoId<span class="token punctuation">.</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  todoData<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">await</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">fetchData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token function">watch</span><span class="token punctuation">(</span>todoId<span class="token punctuation">,</span> fetchData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_11-组件" tabindex="-1"><a class="header-anchor" href="#_11-组件" aria-hidden="true">#</a> 11, 组件</h3><p>组件的使用,如下:</p><p><img src="' + _imports_20 + '" alt="image-20231108202021412"></p><h3 id="_12-props" tabindex="-1"><a class="header-anchor" href="#_12-props" aria-hidden="true">#</a> 12, props</h3><p>子组件可以通过 props 从父组件接受动态数据。</p><p>直接上代码：</p><p><img src="' + _imports_21 + '" alt="image-20231108202046442"></p><h3 id="_13-emits" tabindex="-1"><a class="header-anchor" href="#_13-emits" aria-hidden="true">#</a> 13, Emits</h3><p><strong>vue是单向数据流</strong>，什么叫单向数据流？props只能从上到下流。如果想把数据从子流到父，方式有：</p><ul><li><strong>给子传递一个方法，子去调用方法</strong></li><li><strong>通过自定义事件</strong></li></ul><p>在vue2中，自定义事件需要接收，在vue3中自定义事件也需要接收，如下：</p><p><img src="' + _imports_22 + '" alt="image-20231108202203957"></p><p><img src="' + _imports_23 + '" alt="image-20231108202215579"></p><h3 id="_14-slot" tabindex="-1"><a class="header-anchor" href="#_14-slot" aria-hidden="true">#</a> 14, Slot</h3><p>参考文档：https://cn.vuejs.org/tutorial/#step-14</p><h2 id="二-todo实现" tabindex="-1"><a class="header-anchor" href="#二-todo实现" aria-hidden="true">#</a> 二, Todo实现</h2><hr><h3 id="_1-静态页面" tabindex="-1"><a class="header-anchor" href="#_1-静态页面" aria-hidden="true">#</a> 1，静态页面</h3><p>todo.html，如下：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>X-UA-Compatible<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>IE=edge<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./index.css<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>todoapp<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>header<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>todos<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>new-todo<span class="token punctuation">&quot;</span></span> <span class="token attr-name">autofocus</span> <span class="token attr-name">autocomplete</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>off<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>What needs to be done?<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>main<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>toggle-all<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>toggle-all<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>toggle-all<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Mark all as complete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>todo-list<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n                <span class="token comment">&lt;!-- :class=&quot;{ completed: item.done }&quot; --&gt;</span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>todo<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>toggle<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span>学习vue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>\n                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>destroy<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>edit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span> <span class="token punctuation">/&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>footer<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>todo-count<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span> 1 item left <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>filters<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>All<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Active<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>\n                    <span class="token comment">&lt;!-- :class=&quot;{ selected: visibility == &#39;Completed&#39;} --&gt;</span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Completed<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>clear-completed<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n                Clear completed\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">&gt;</span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>todo.css 代码如下：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">html,\nbody</span> <span class="token punctuation">{</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">button</span> <span class="token punctuation">{</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">border</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">background</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n    <span class="token property">vertical-align</span><span class="token punctuation">:</span> baseline<span class="token punctuation">;</span>\n    <span class="token property">font-family</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>\n    <span class="token property">font-weight</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>\n    <span class="token property">-webkit-appearance</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n    <span class="token property">appearance</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n    <span class="token property">-webkit-font-smoothing</span><span class="token punctuation">:</span> antialiased<span class="token punctuation">;</span>\n    <span class="token property">-moz-osx-font-smoothing</span><span class="token punctuation">:</span> grayscale<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">body</span> <span class="token punctuation">{</span>\n    <span class="token property">font</span><span class="token punctuation">:</span> 14px <span class="token string">&#39;Helvetica Neue&#39;</span><span class="token punctuation">,</span> Helvetica<span class="token punctuation">,</span> Arial<span class="token punctuation">,</span> sans-serif<span class="token punctuation">;</span>\n    <span class="token property">line-height</span><span class="token punctuation">:</span> 1.4em<span class="token punctuation">;</span>\n    <span class="token property">background</span><span class="token punctuation">:</span> #f5f5f5<span class="token punctuation">;</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #4d4d4d<span class="token punctuation">;</span>\n    <span class="token property">min-width</span><span class="token punctuation">:</span> 230px<span class="token punctuation">;</span>\n    <span class="token property">max-width</span><span class="token punctuation">:</span> 550px<span class="token punctuation">;</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span>\n    <span class="token property">-webkit-font-smoothing</span><span class="token punctuation">:</span> antialiased<span class="token punctuation">;</span>\n    <span class="token property">-moz-osx-font-smoothing</span><span class="token punctuation">:</span> grayscale<span class="token punctuation">;</span>\n    <span class="token property">font-weight</span><span class="token punctuation">:</span> 300<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">:focus</span> <span class="token punctuation">{</span>\n    <span class="token property">outline</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.hidden</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todoapp</span> <span class="token punctuation">{</span>\n    <span class="token property">background</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 130px 0 40px 0<span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n    <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 2px 4px 0 <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.2<span class="token punctuation">)</span><span class="token punctuation">,</span>\n        0 25px 50px 0 <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todoapp input::-webkit-input-placeholder</span> <span class="token punctuation">{</span>\n    <span class="token property">font-style</span><span class="token punctuation">:</span> italic<span class="token punctuation">;</span>\n    <span class="token property">font-weight</span><span class="token punctuation">:</span> 300<span class="token punctuation">;</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #e6e6e6<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todoapp input::-moz-placeholder</span> <span class="token punctuation">{</span>\n    <span class="token property">font-style</span><span class="token punctuation">:</span> italic<span class="token punctuation">;</span>\n    <span class="token property">font-weight</span><span class="token punctuation">:</span> 300<span class="token punctuation">;</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #e6e6e6<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todoapp input::input-placeholder</span> <span class="token punctuation">{</span>\n    <span class="token property">font-style</span><span class="token punctuation">:</span> italic<span class="token punctuation">;</span>\n    <span class="token property">font-weight</span><span class="token punctuation">:</span> 300<span class="token punctuation">;</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #e6e6e6<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todoapp h1</span> <span class="token punctuation">{</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>\n    <span class="token property">top</span><span class="token punctuation">:</span> -155px<span class="token punctuation">;</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>\n    <span class="token property">font-weight</span><span class="token punctuation">:</span> 100<span class="token punctuation">;</span>\n    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>175<span class="token punctuation">,</span> 47<span class="token punctuation">,</span> 47<span class="token punctuation">,</span> 0.15<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token property">-webkit-text-rendering</span><span class="token punctuation">:</span> optimizeLegibility<span class="token punctuation">;</span>\n    <span class="token property">-moz-text-rendering</span><span class="token punctuation">:</span> optimizeLegibility<span class="token punctuation">;</span>\n    <span class="token property">text-rendering</span><span class="token punctuation">:</span> optimizeLegibility<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.new-todo,\n.edit</span> <span class="token punctuation">{</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 24px<span class="token punctuation">;</span>\n    <span class="token property">font-family</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>\n    <span class="token property">font-weight</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>\n    <span class="token property">line-height</span><span class="token punctuation">:</span> 1.4em<span class="token punctuation">;</span>\n    <span class="token property">border</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>\n    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #999<span class="token punctuation">;</span>\n    <span class="token property">box-shadow</span><span class="token punctuation">:</span> inset 0 -1px 5px 0 <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>\n    <span class="token property">-webkit-font-smoothing</span><span class="token punctuation">:</span> antialiased<span class="token punctuation">;</span>\n    <span class="token property">-moz-osx-font-smoothing</span><span class="token punctuation">:</span> grayscale<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.new-todo</span> <span class="token punctuation">{</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 16px 16px 16px 60px<span class="token punctuation">;</span>\n    <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.003<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token property">box-shadow</span><span class="token punctuation">:</span> inset 0 -2px 1px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.03<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.main</span> <span class="token punctuation">{</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n    <span class="token property">z-index</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span>\n    <span class="token property">border-top</span><span class="token punctuation">:</span> 1px solid #e6e6e6<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.toggle-all</span> <span class="token punctuation">{</span>\n    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n    <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n    <span class="token comment">/* Mobile Safari */</span>\n    <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.toggle-all+label</span> <span class="token punctuation">{</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 34px<span class="token punctuation">;</span>\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>\n    <span class="token property">top</span><span class="token punctuation">:</span> -52px<span class="token punctuation">;</span>\n    <span class="token property">left</span><span class="token punctuation">:</span> -13px<span class="token punctuation">;</span>\n    <span class="token property">-webkit-transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>90deg<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>90deg<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.toggle-all+label:before</span> <span class="token punctuation">{</span>\n    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&#39;❯&#39;</span><span class="token punctuation">;</span>\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 22px<span class="token punctuation">;</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #e6e6e6<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 10px 27px 10px 27px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.toggle-all:checked+label:before</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #737373<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todo-list</span> <span class="token punctuation">{</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todo-list li</span> <span class="token punctuation">{</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 24px<span class="token punctuation">;</span>\n    <span class="token property">border-bottom</span><span class="token punctuation">:</span> 1px solid #ededed<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todo-list li:last-child</span> <span class="token punctuation">{</span>\n    <span class="token property">border-bottom</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todo-list li.editing</span> <span class="token punctuation">{</span>\n    <span class="token property">border-bottom</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todo-list li .edit</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 506px<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 12px 16px<span class="token punctuation">;</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 0 0 0 43px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todo-list li.editing .view</span> <span class="token punctuation">{</span>\n    <span class="token comment">/* display: none; */</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todo-list li .toggle</span> <span class="token punctuation">{</span>\n    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>\n    <span class="token comment">/* auto, since non-WebKit browsers doesn&#39;t support input styling */</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>\n    <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> auto 0<span class="token punctuation">;</span>\n    <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n    <span class="token comment">/* Mobile Safari */</span>\n    <span class="token property">-webkit-appearance</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n    <span class="token property">appearance</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todo-list li .toggle</span> <span class="token punctuation">{</span>\n    <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todo-list li .toggle+label</span> <span class="token punctuation">{</span>\n    <span class="token comment">/*\n		Firefox requires `#` to be escaped - https://bugzilla.mozilla.org/show_bug.cgi?id=922433\n		IE and Edge requires *everything* to be escaped to render, so we do that instead of just the `#` - https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/7157459/\n	*/</span>\n    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;data:image/svg+xml;utf8,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20width%3D%2240%22%20height%3D%2240%22%20viewBox%3D%22-10%20-18%20100%20135%22%3E%3Ccircle%20cx%3D%2250%22%20cy%3D%2250%22%20r%3D%2250%22%20fill%3D%22none%22%20stroke%3D%22%23ededed%22%20stroke-width%3D%223%22/%3E%3C/svg%3E&#39;</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span>\n    <span class="token property">background-repeat</span><span class="token punctuation">:</span> no-repeat<span class="token punctuation">;</span>\n    <span class="token property">background-position</span><span class="token punctuation">:</span> center left<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todo-list li .toggle:checked+label</span> <span class="token punctuation">{</span>\n    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;data:image/svg+xml;utf8,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20width%3D%2240%22%20height%3D%2240%22%20viewBox%3D%22-10%20-18%20100%20135%22%3E%3Ccircle%20cx%3D%2250%22%20cy%3D%2250%22%20r%3D%2250%22%20fill%3D%22none%22%20stroke%3D%22%23bddad5%22%20stroke-width%3D%223%22/%3E%3Cpath%20fill%3D%22%235dc2af%22%20d%3D%22M72%2025L42%2071%2027%2056l-4%204%2020%2020%2034-52z%22/%3E%3C/svg%3E&#39;</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todo-list li label</span> <span class="token punctuation">{</span>\n    <span class="token property">word-break</span><span class="token punctuation">:</span> break-all<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 15px 15px 15px 60px<span class="token punctuation">;</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\n    <span class="token property">line-height</span><span class="token punctuation">:</span> 1.2<span class="token punctuation">;</span>\n    <span class="token property">transition</span><span class="token punctuation">:</span> color 0.4s<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todo-list li.completed label</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #d9d9d9<span class="token punctuation">;</span>\n    <span class="token property">text-decoration</span><span class="token punctuation">:</span> line-through<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todo-list li .destroy</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>\n    <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">right</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>\n    <span class="token property">bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> auto 0<span class="token punctuation">;</span>\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #cc9a9a<span class="token punctuation">;</span>\n    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 11px<span class="token punctuation">;</span>\n    <span class="token property">transition</span><span class="token punctuation">:</span> color 0.2s ease-out<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todo-list li .destroy:hover</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #af5b5e<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todo-list li .destroy:after</span> <span class="token punctuation">{</span>\n    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&#39;×&#39;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todo-list li:hover .destroy</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">/* .todo-list li .edit {\n	display: none;\n} */</span>\n\n<span class="token selector">.todo-list li.editing:last-child</span> <span class="token punctuation">{</span>\n    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> -1px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.footer</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #777<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 10px 15px<span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>\n    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n    <span class="token property">border-top</span><span class="token punctuation">:</span> 1px solid #e6e6e6<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.footer:before</span> <span class="token punctuation">{</span>\n    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>\n    <span class="token property">right</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>\n    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>\n    <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 1px 1px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.2<span class="token punctuation">)</span><span class="token punctuation">,</span> filters 0 8px 0 -3px #f6f6f6<span class="token punctuation">,</span>\n        0 9px 1px -3px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.2<span class="token punctuation">)</span><span class="token punctuation">,</span>\n        0 16px 0 -6px #f6f6f6<span class="token punctuation">,</span>\n        0 17px 2px -6px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todo-count</span> <span class="token punctuation">{</span>\n    <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>\n    <span class="token property">text-align</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.todo-count strong</span> <span class="token punctuation">{</span>\n    <span class="token property">font-weight</span><span class="token punctuation">:</span> 300<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.filters</span> <span class="token punctuation">{</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>\n    <span class="token property">right</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.filters li</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> inline<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.filters li a</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 3px 7px<span class="token punctuation">;</span>\n    <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid transparent<span class="token punctuation">;</span>\n    <span class="token property">border-radius</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.filters li a:hover</span> <span class="token punctuation">{</span>\n    <span class="token property">border-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>175<span class="token punctuation">,</span> 47<span class="token punctuation">,</span> 47<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.filters li a.selected</span> <span class="token punctuation">{</span>\n    <span class="token property">border-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>175<span class="token punctuation">,</span> 47<span class="token punctuation">,</span> 47<span class="token punctuation">,</span> 0.2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.clear-completed,\nhtml .clear-completed:active</span> <span class="token punctuation">{</span>\n    <span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>\n    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n    <span class="token property">line-height</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>\n    <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n    <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.clear-completed:hover</span> <span class="token punctuation">{</span>\n    <span class="token property">text-decoration</span><span class="token punctuation">:</span> underline<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.info</span> <span class="token punctuation">{</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 65px auto 0<span class="token punctuation">;</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #bfbfbf<span class="token punctuation">;</span>\n    <span class="token property">font-size</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>\n    <span class="token property">text-shadow</span><span class="token punctuation">:</span> 0 1px 0 <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 0.5<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.info p</span> <span class="token punctuation">{</span>\n    <span class="token property">line-height</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.info a</span> <span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>\n    <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n    <span class="token property">font-weight</span><span class="token punctuation">:</span> 400<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.info a:hover</span> <span class="token punctuation">{</span>\n    <span class="token property">text-decoration</span><span class="token punctuation">:</span> underline<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">/*\n	Hack to remove background from Mobile Safari.\n	Can&#39;t use it globally since it destroys checkboxes in Firefox\n*/</span>\n<span class="token atrule"><span class="token rule">@media</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">-webkit-min-device-pixel-ratio</span><span class="token punctuation">:</span>0<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>\n\n    <span class="token selector">.toggle-all,\n    .todo-list li .toggle</span> <span class="token punctuation">{</span>\n        <span class="token property">background</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token selector">.todo-list li .toggle</span> <span class="token punctuation">{</span>\n        <span class="token property">height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 430px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>\n    <span class="token selector">.footer</span> <span class="token punctuation">{</span>\n        <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token selector">.filters</span> <span class="token punctuation">{</span>\n        <span class="token property">bottom</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三-vue3-深入指南" tabindex="-1"><a class="header-anchor" href="#三-vue3-深入指南" aria-hidden="true">#</a> 三, Vue3 深入指南</h2><hr><h3 id="_1-创建一个应用" tabindex="-1"><a class="header-anchor" href="#_1-创建一个应用" aria-hidden="true">#</a> 1, 创建一个应用</h3><p>创建应用</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>\n    createApp\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n\n<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&#39;./App.vue&#39;</span>\n\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>\n\n<span class="token comment">// #app是哪里来的？</span>\napp<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>应用实例会暴露一个 <code>.config</code> 对象允许我们<strong>配置一些应用级的选项</strong>，例如定义一个<strong>应用级的错误处理器</strong>，用来捕获所有子组件上的错误：</p><p><img src="' + _imports_24 + '" alt="image-20231108142241023"></p><p>应用实例还提供了一些方法来<strong>注册应用范围内可用的资源</strong>，例如注册一个组件：</p><p><img src="' + _imports_25 + '" alt="image-20231108142531556"></p><p>应用实例并不只限于一个。 <code>createApp</code> API 允许你在同一个页面中创建多个共存的 Vue 应用，而且每个应用都拥有自己的用于配置和全局资源的作用域。</p><blockquote><p>可以存在多个app组件</p><p>示例如下:</p></blockquote><p><img src="' + _imports_26 + '" alt="image-20231108142646281"></p><h4 id="ref-函数" tabindex="-1"><a class="header-anchor" href="#ref-函数" aria-hidden="true">#</a> <strong>ref 函数</strong></h4><blockquote><p>在 Vue 3 中，<code>ref</code> 是一个函数，用于<strong>创建一个响应式的数据引用</strong>。它可以将普通的 JavaScript 值转换为响应式的。</p><p>使用 <code>ref</code>，我们可以在 Vue 组件中定义一个具有响应式特性的变量。这意味着当变量的值发生变化时，相关的组件会自动更新，并且可以通过访问 <code>value</code> 属性来获取或修改变量的值。</p><p>示例如下:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// count 就是一个响应式数据了</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出: 0</span>\ncount<span class="token punctuation">.</span>value<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// 修改 count 的值</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出: 1</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意的是，<strong>由于 <code>ref</code> 返回的是一个对象</strong>，<strong>我们需要通过访问其 <code>value</code> 属性来获取或修改变量的值</strong>。这是因为在内部，<strong><code>ref</code> 使用了 ES6 的 <code>Proxy</code> 对象来劫持对变量的访问</strong>，从而<strong>实现响应式的特性</strong>。</p><p>可以通过 <code>ref</code> 的返回值进行解构，以便更方便地访问变量的值，例如：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> value <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出: 0</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>总结 ref 函数:</strong></p><p><code>ref</code> 允许我们在 Vue 3 组件中创建具有响应式特性的变量，使得变量的值变化时可以自动更新相关组件。这对于管理状态和实现数据驱动的视图非常有用。</p></blockquote><h4 id="reactive-函数" tabindex="-1"><a class="header-anchor" href="#reactive-函数" aria-hidden="true">#</a> reactive 函数</h4><blockquote><p>在Vue 3中，<code>reactive</code>是一个函数，用于<strong>创建响应式的数据对象</strong>。它接受一个普通的 JavaScript 对象作为参数，并<strong>返回一个代理对象</strong>，<strong>该代理对象会跟踪对象的变化并实时地更新相关的视图</strong>。</p><p>使用<code>reactive</code>函数可以将一个普通的 JavaScript 对象转换为响应式对象。当你修改响应式对象中的属性时，Vue 会自动检测到变化，并更新相关的视图。</p><p>一个使用<code>reactive</code>的简单示例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>state<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出: 0</span>\nstate<span class="token punctuation">.</span>count<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// 修改响应式对象的属性</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>state<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出: 1</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意:</strong></p><p><code>reactive</code>只会将对象的属性转换为响应式的，而不会转换对象的原型链上的属性。如果你需要使对象原型链上的属性也变为响应式的，可以使用<code>ref</code>函数或将原型链上的属性也转换为响应式对象。</p></blockquote><hr><h3 id="_2-模板表达式" tabindex="-1"><a class="header-anchor" href="#_2-模板表达式" aria-hidden="true">#</a> 2, 模板表达式</h3><p><strong>v-html</strong></p><p>渲染原始html字符串，如下：</p><p><img src="' + _imports_27 + '" alt="image-20231108142808201"></p><p><strong>什么是表达式？</strong></p><ul><li>任何有值的内容都是表达式</li><li>只要可以写在return后面的都是表达式</li></ul><p><strong>胡子语法中可以放什么？</strong></p><p><img src="' + _imports_28 + '" alt="image-20231108153441033"></p><p><strong>受限的全局访问</strong></p><p>模板中的表达式将被沙盒化，仅能够访问到有限的全局对象列表, 该列表中会暴露常用的内置全局对象，比如 <code>Math</code> 和 <code>Date</code> 。</p>', 114);
const _hoisted_153 = /* @__PURE__ */ createBaseVNode(
  "code",
  null,
  "window",
  -1
  /* HOISTED */
);
const _hoisted_154 = {
  href: "https://cn.vuejs.org/api/application.html#app-config-globalproperties",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_155 = /* @__PURE__ */ createBaseVNode(
  "code",
  null,
  "app.config.globalProperties",
  -1
  /* HOISTED */
);
const _hoisted_156 = /* @__PURE__ */ createStaticVNode('<p><img src="' + _imports_29 + '" alt="image-20231108204420517"></p><p><strong>动态绑定多个值</strong>，如下：</p><p><img src="' + _imports_30 + '" alt="image-20231108153917434"></p><hr><h3 id="_3-响应式基础" tabindex="-1"><a class="header-anchor" href="#_3-响应式基础" aria-hidden="true">#</a> 3, 响应式基础</h3><p>vue的响应式, 如下</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// count实际上是对象</span>\n\n<span class="token keyword">function</span> <span class="token function">inc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  count<span class="token punctuation">.</span>value<span class="token operator">++</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>\n    {{ count }}\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>inc<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>点我+1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>看文章：</p><p>https://cn.vuejs.org/guide/extras/reactivity-in-depth.html</p><p><strong>代码示例:</strong></p><p><img src="' + _imports_31 + '" alt="image-20231108204528035"></p><blockquote><p>上述代码, <em>并不是响应式的数据</em>, 即使改变了 A0的值, A2的表达式已经在JS的顺序执行中有了结果,所以并不会影响A2 的结果.</p></blockquote><p>手动update模型，如下：</p><p><img src="' + _imports_32 + '" alt="image-20231108204923527"></p><blockquote><p>于是, 可以定义一个函数, 在我们更改数据后, 调用这个 update 函数, 来更新数据, 但这只是手动更新数据, 数据并不是响应式更新</p></blockquote><p>自动update模型，如下：</p><p><img src="' + _imports_33 + '" alt="image-20231108205122161"></p><p>参考代码：</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token comment">// 只有对应才能被代理  data是原始对象，不具备响应式的</span>\n    <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token constant">A0</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n        <span class="token constant">A1</span><span class="token operator">:</span> <span class="token number">2</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">function</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token parameter">receiver</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token constant">A2</span> <span class="token operator">=</span> receiver<span class="token punctuation">.</span><span class="token constant">A0</span> <span class="token operator">+</span> receiver<span class="token punctuation">.</span><span class="token constant">A1</span><span class="token punctuation">;</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;A2:&quot;</span><span class="token punctuation">,</span> <span class="token constant">A2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">function</span> <span class="token function">whenDepsChange</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">let</span> proxy_data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n            <span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> propKey<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token comment">// 每次A0 A1发生变化会执行</span>\n                target<span class="token punctuation">[</span>propKey<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>\n                <span class="token function">callback</span><span class="token punctuation">(</span>receiver<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// target表示原始对象  propKey就是代理的key</span>\n            <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> propKey<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// receiver是proxy对象本身</span>\n                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;get...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">return</span> target<span class="token punctuation">[</span>propKey<span class="token punctuation">]</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token keyword">return</span> proxy_data<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">// 代理对象  具备响应了</span>\n    <span class="token keyword">let</span> proxy_data <span class="token operator">=</span> <span class="token function">whenDepsChange</span><span class="token punctuation">(</span>update<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// console.log(proxy_data.A0);</span>\n    <span class="token comment">// console.log(proxy_data.A1);</span>\n    proxy_data<span class="token punctuation">.</span><span class="token constant">A0</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>\n\n    proxy_data<span class="token punctuation">.</span><span class="token constant">A1</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>这里用到了 proxy 代理( ES6中的新特性), <strong><code>Proxy</code> 是 JavaScript 中的一个内置对象</strong>，它允许你创建一个代理对象，用于拦截并自定义对目标对象的操作。</p><p>通过 <code>Proxy</code>，你可以拦截并重定义目标对象上的一系列操作，如属性访问、属性赋值、函数调用等。</p><p>使用 <code>Proxy</code>，你可以在操作目标对象之前和之后执行自定义的逻辑，实现诸如属性验证、数据绑定、日志记录等功能。它提供了一种强大的机制，用于动态地创建和操作对象，而无需直接操作对象本身。</p></blockquote><p>==深层响应式== , 如下:</p><p><img src="' + _imports_34 + '" alt="image-20231108210007669"></p><p>有深层响应式，就有浅层响应式，如下：</p><p>https://cn.vuejs.org/api/reactivity-advanced.html#shallowreactive</p><p>DOM的更新时机，如下：</p><p><img src="' + _imports_35 + '" alt="image-20231108210056057"></p><p>什么是代理对象？</p><p><img src="' + _imports_36 + '" alt="image-20231108210232185"></p><p>reactive是代理对象，如下：</p><p><img src="' + _imports_37 + '" alt="image-20231108210304847"></p><p>reactive也是深层响应式，如下：</p><p><img src="' + _imports_38 + '" alt="image-20231108211811774"></p><h4 id="shallowref" tabindex="-1"><a class="header-anchor" href="#shallowref" aria-hidden="true">#</a> <strong>shallowRef</strong></h4><blockquote><p>浅层响应式 =&gt; 只会对第一层做代理</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token function">shallowRef</span> <span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">c</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote><p>有深层响应式，就有浅层响应式，如下：</p><p><img src="' + _imports_39 + '" alt="image-20231108211821794"></p><p>代码示例:</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>info1.a.b.c<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>add1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>自增<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>info2.a.b.c<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>add2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>自增<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> reactive<span class="token punctuation">,</span> shallowRef<span class="token punctuation">,</span> triggerRef <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>\n\n<span class="token comment">// ref是定义基本数据数据的响应式</span>\n<span class="token comment">// reactive是定义引用数据类型的响应式</span>\n<span class="token comment">// 其实ref也可以定义，如果ref中写了一人引用数据类型，它的内部还是会调用reactive</span>\n<span class="token keyword">let</span> info1 <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> <span class="token function-variable function">add1</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  info1<span class="token punctuation">.</span>value<span class="token punctuation">.</span>a<span class="token punctuation">.</span>b<span class="token punctuation">.</span>c<span class="token operator">++</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment">// {a:{b:{c:3}}} 整体替换的话是响应式的，对a,b,c修改并不是响应式的</span>\n<span class="token keyword">let</span> info2 <span class="token operator">=</span> <span class="token function">shallowRef</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> <span class="token function-variable function">add2</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  info2<span class="token punctuation">.</span>value<span class="token punctuation">.</span>a<span class="token punctuation">.</span>b<span class="token punctuation">.</span>c<span class="token operator">++</span><span class="token punctuation">;</span>\n  <span class="token comment">// info2.value.a.b = { c: 888 };</span>\n  <span class="token comment">// info2.value.a = { b: { c: 888 } };</span>\n  <span class="token comment">// info2.value = { a: { b: { c: 888 } } };  // 响应式数据</span>\n\n  <span class="token function">triggerRef</span><span class="token punctuation">(</span>info2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 强制刷新</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="shallowreactive" tabindex="-1"><a class="header-anchor" href="#shallowreactive" aria-hidden="true">#</a> <strong>shallowReactive</strong></h4><p>我们也可以利用shallowReactive定义浅层响应式，如下：</p><p><img src="' + _imports_40 + '" alt="image-20231108212215938"></p><p>代码示例:</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>shallowReactive的使用<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>{{ aa }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>change<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>change<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> reactive<span class="token punctuation">,</span> shallowRef<span class="token punctuation">,</span> shallowReactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 浅层响应式</span>\n<span class="token comment">// 只能对第1层代理</span>\n<span class="token comment">// aa 是调用shallowReactive的返回值  它是一个proxy</span>\n<span class="token keyword">let</span> aa <span class="token operator">=</span> <span class="token function">shallowReactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">change</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// aa.a.b.c = 888;</span>\n  <span class="token comment">// aa.a.b = { c: 888 };</span>\n  aa<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">888</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// 是响应式的</span>\n\n  <span class="token comment">// 你是把一个普通对象赋值给了aa，aa此时就是一个普通对象了，不再是响应式</span>\n  <span class="token comment">// aa = { a: { b: { c: 888 } } };</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="响应式代理-vs-原始对象" tabindex="-1"><a class="header-anchor" href="#响应式代理-vs-原始对象" aria-hidden="true">#</a> <strong>响应式代理 vs 原始对象</strong></h4>', 44);
const _hoisted_200 = /* @__PURE__ */ createBaseVNode(
  "code",
  null,
  "reactive()",
  -1
  /* HOISTED */
);
const _hoisted_201 = {
  href: "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_202 = /* @__PURE__ */ createBaseVNode(
  "p",
  null,
  [
    /* @__PURE__ */ createBaseVNode("img", {
      src: _imports_41,
      alt: "image-20231108212414548"
    })
  ],
  -1
  /* HOISTED */
);
const _hoisted_203 = /* @__PURE__ */ createBaseVNode(
  "p",
  null,
  [
    /* @__PURE__ */ createTextVNode("为保证访问代理的一致性，对同一个原始对象调用 "),
    /* @__PURE__ */ createBaseVNode("code", null, "reactive()"),
    /* @__PURE__ */ createTextVNode(" 会总是返回同样的代理对象，而对一个已存在的代理对象调用 "),
    /* @__PURE__ */ createBaseVNode("code", null, "reactive()"),
    /* @__PURE__ */ createTextVNode(" 会返回其本身：")
  ],
  -1
  /* HOISTED */
);
const _hoisted_204 = /* @__PURE__ */ createBaseVNode(
  "p",
  null,
  [
    /* @__PURE__ */ createBaseVNode("img", {
      src: _imports_42,
      alt: "image-20231108212428472"
    })
  ],
  -1
  /* HOISTED */
);
const _hoisted_205 = /* @__PURE__ */ createBaseVNode(
  "p",
  null,
  "这个规则对嵌套对象也适用。依靠深层响应性，响应式对象内的嵌套对象依然是代理：",
  -1
  /* HOISTED */
);
const _hoisted_206 = /* @__PURE__ */ createBaseVNode(
  "p",
  null,
  [
    /* @__PURE__ */ createBaseVNode("img", {
      src: _imports_43,
      alt: "image-20231108212443282"
    })
  ],
  -1
  /* HOISTED */
);
const _hoisted_207 = /* @__PURE__ */ createBaseVNode(
  "p",
  null,
  [
    /* @__PURE__ */ createBaseVNode("strong", null, "reactive的局限性：")
  ],
  -1
  /* HOISTED */
);
const _hoisted_208 = /* @__PURE__ */ createBaseVNode(
  "strong",
  null,
  "有限的值类型",
  -1
  /* HOISTED */
);
const _hoisted_209 = /* @__PURE__ */ createBaseVNode(
  "code",
  null,
  "Map",
  -1
  /* HOISTED */
);
const _hoisted_210 = /* @__PURE__ */ createBaseVNode(
  "code",
  null,
  "Set",
  -1
  /* HOISTED */
);
const _hoisted_211 = {
  href: "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects#keyed_collections",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_212 = /* @__PURE__ */ createBaseVNode(
  "code",
  null,
  "string",
  -1
  /* HOISTED */
);
const _hoisted_213 = /* @__PURE__ */ createBaseVNode(
  "code",
  null,
  "number",
  -1
  /* HOISTED */
);
const _hoisted_214 = /* @__PURE__ */ createBaseVNode(
  "code",
  null,
  "boolean",
  -1
  /* HOISTED */
);
const _hoisted_215 = {
  href: "https://developer.mozilla.org/en-US/docs/Glossary/Primitive",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_216 = /* @__PURE__ */ createBaseVNode(
  "li",
  null,
  [
    /* @__PURE__ */ createBaseVNode("strong", null, "不能替换整个对象"),
    /* @__PURE__ */ createTextVNode("：由于 Vue 的响应式跟踪是通过属性访问实现的，因此我们必须始终保持对响应式对象的相同引用。这意味着我们不能轻易地“替换”响应式对象，因为这样的话与第一个引用的响应性连接将丢失："),
    /* @__PURE__ */ createBaseVNode("img", {
      src: _imports_44,
      alt: "image-20231108212613686"
    })
  ],
  -1
  /* HOISTED */
);
const _hoisted_217 = /* @__PURE__ */ createBaseVNode(
  "li",
  null,
  [
    /* @__PURE__ */ createBaseVNode("strong", null, "对解构操作不友好"),
    /* @__PURE__ */ createTextVNode("：当我们将响应式对象的原始类型属性解构为本地变量时，或者将该属性传递给函数时，我们将丢失响应性连接："),
    /* @__PURE__ */ createBaseVNode("img", {
      src: _imports_45,
      alt: "image-20231108212854519"
    })
  ],
  -1
  /* HOISTED */
);
const _hoisted_218 = /* @__PURE__ */ createStaticVNode('<p>ref作为reactive对象的属性，会自动解包：</p><p><img src="' + _imports_46 + '" alt="image-20231108212913551"></p><p>如果将一个新的 ref 赋值给一个关联了已有 ref 的属性，那么它会替换掉旧的 ref：<img src="' + _imports_47 + '" alt="image-20231108212929143"></p><p>与 reactive 对象不同的是，当 ref 作为响应式数组或原生集合类型(如 <code>Map</code> ) 中的元素被访问时，它<strong>不会</strong>被解包：</p><p><img src="' + _imports_48 + '" alt="image-20231108212949651"></p><p><img src="' + _imports_49 + '" alt="image-20231108213005019"></p><h3 id="_4-计算属性" tabindex="-1"><a class="header-anchor" href="#_4-计算属性" aria-hidden="true">#</a> 4, 计算属性</h3><p>官方的代码：</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Has published books:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>{{ publishedBooksMessage }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> reactive<span class="token punctuation">,</span> computed<span class="token punctuation">,</span> onMounted <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> author <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;John Doe&quot;</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">books</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token string">&quot;Vue 2 - Advanced Guide&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;Vue 3 - Basic Guide&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;Vue 4 - The Mystery&quot;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 一个计算属性 ref</span>\n<span class="token keyword">const</span> publishedBooksMessage <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> author<span class="token punctuation">.</span>books<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">&quot;Yes&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;No&quot;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>publishedBooksMessage<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-类与样式绑定" tabindex="-1"><a class="header-anchor" href="#_5-类与样式绑定" aria-hidden="true">#</a> 5, 类与样式绑定</h3><p>class 可以写在组件上</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>my-component</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>active<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isActive<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>my-component</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>不是动态绑定的class会渲染到父级的div上,</p><p>:class 绑定的会渲染到组件上</p><h3 id="_6-条件渲染-1" tabindex="-1"><a class="header-anchor" href="#_6-条件渲染-1" aria-hidden="true">#</a> 6, 条件渲染</h3><p>v-if 可以用于 template标签, v-show (控制元素的display属性)不行</p><p><strong>v-if 和 v-show ?</strong></p><blockquote></blockquote><p><strong>v-if 和 v-for</strong></p><blockquote><p>v-if 在vue3中优先级更高 , v-for 在 vue2中优先级更高</p><p>这两个指令不推荐连用, 为什么不建议连用, 两者在一起出现优先级的问题, 导致元素无法正常渲染;</p></blockquote><p>template 标签使用 v-for 是可以使用的, 也可以添加 key 值</p><h3 id="_7-列表渲染-1" tabindex="-1"><a class="header-anchor" href="#_7-列表渲染-1" aria-hidden="true">#</a> 7, 列表渲染</h3><p>改变原数组的数组操作,在计算属性中需要注意, 需要拷贝一份原数组再去改变数组</p><h3 id="_8-事件处理" tabindex="-1"><a class="header-anchor" href="#_8-事件处理" aria-hidden="true">#</a> 8, 事件处理</h3><p>事件绑定:</p><h4 id="事件修饰符" tabindex="-1"><a class="header-anchor" href="#事件修饰符" aria-hidden="true">#</a> <strong>事件修饰符</strong></h4><p>vue3提供了一些事件修饰符,用于解决默认事件</p><h3 id="_9-表单输入绑定" tabindex="-1"><a class="header-anchor" href="#_9-表单输入绑定" aria-hidden="true">#</a> 9, 表单输入绑定</h3><h3 id="_10-生命周期" tabindex="-1"><a class="header-anchor" href="#_10-生命周期" aria-hidden="true">#</a> 10, 生命周期</h3><p>onUpdated</p><p>onMounted</p><p>onUnMounted 组件实例被卸载的时候调用</p><h3 id="_11-侦听器" tabindex="-1"><a class="header-anchor" href="#_11-侦听器" aria-hidden="true">#</a> 11, 侦听器</h3><p>深层侦听</p><p>与 Vue2 中的 watch 有相同之处</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">watch</span> <span class="token punctuation">(</span>\n	<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> count<span class="token punctuation">;</span> \n	<span class="token punctuation">{</span>\n	 <span class="token literal-property property">deep</span> <span class="token operator">:</span><span class="token boolean">true</span>  <span class="token comment">// 开启深度监听</span>\n   <span class="token literal-property property">immediate</span><span class="token operator">:</span> <span class="token boolean">true</span>   <span class="token comment">// 立即执行 </span>\n	<span class="token punctuation">}</span>\n<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>watchEffect</p><blockquote><p>侦听器的另一种写法</p></blockquote><p>watch 和 watchEffect ?</p><p>watchPostEffect</p><p>等待dom更新完毕之后执行</p>', 41);
function _sfc_render(_ctx, _cache) {
  const _component_ExternalLinkIcon = resolveComponent("ExternalLinkIcon");
  return openBlock(), createElementBlock("div", null, [
    _hoisted_1,
    createBaseVNode("p", null, [
      createTextVNode("这一指令将会安装并执行 "),
      createBaseVNode("a", _hoisted_24, [
        createTextVNode("create-vue"),
        createVNode(_component_ExternalLinkIcon)
      ]),
      createTextVNode("，它是 Vue 官方的项目脚手架工具。你将会看到一些诸如 TypeScript 和测试支持之类的可选功能提示：")
    ]),
    _hoisted_25,
    createBaseVNode("p", null, [
      createTextVNode("在本文档的其余部分我们使用的主要是 "),
      createBaseVNode("a", _hoisted_38, [
        createTextVNode("ES 模块"),
        createVNode(_component_ExternalLinkIcon)
      ]),
      createTextVNode("语法。现代浏览器大多都已原生支持 ES 模块。因此我们可以像这样通过 CDN 以及原生 ES 模块使用 Vue：")
    ]),
    _hoisted_39,
    createBaseVNode("p", null, [
      createTextVNode("没有显式包含在列表中的全局对象将不能在模板内表达式中访问，例如用户附加在 "),
      _hoisted_153,
      createTextVNode(" 上的属性。然而，你也可以自行在 "),
      createBaseVNode("a", _hoisted_154, [
        _hoisted_155,
        createTextVNode(" (opens new window)"),
        createVNode(_component_ExternalLinkIcon)
      ]),
      createTextVNode("上显式地添加它们，供所有的 Vue 表达式使用。")
    ]),
    _hoisted_156,
    createBaseVNode("p", null, [
      createTextVNode("值得注意的是， "),
      _hoisted_200,
      createTextVNode(" 返回的是一个原始对象的 "),
      createBaseVNode("a", _hoisted_201, [
        createTextVNode("Proxy (opens new window)"),
        createVNode(_component_ExternalLinkIcon)
      ]),
      createTextVNode("，它和原始对象是不相等的：")
    ]),
    _hoisted_202,
    _hoisted_203,
    _hoisted_204,
    _hoisted_205,
    _hoisted_206,
    _hoisted_207,
    createBaseVNode("ol", null, [
      createBaseVNode("li", null, [
        _hoisted_208,
        createTextVNode("：它只能用于对象类型 (对象、数组和如 "),
        _hoisted_209,
        createTextVNode("、"),
        _hoisted_210,
        createTextVNode(" 这样的"),
        createBaseVNode("a", _hoisted_211, [
          createTextVNode("集合类型 (opens new window)"),
          createVNode(_component_ExternalLinkIcon)
        ]),
        createTextVNode(")。它不能持有如 "),
        _hoisted_212,
        createTextVNode("、"),
        _hoisted_213,
        createTextVNode(" 或 "),
        _hoisted_214,
        createTextVNode(" 这样的"),
        createBaseVNode("a", _hoisted_215, [
          createTextVNode("原始类型 (opens new window)"),
          createVNode(_component_ExternalLinkIcon)
        ]),
        createTextVNode("。")
      ]),
      _hoisted_216,
      _hoisted_217
    ]),
    _hoisted_218
  ]);
}
const Vue3_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "Vue3.html.vue"]]);
export {
  Vue3_html as default
};
