import { _ as _export_sfc, o as openBlock, c as createElementBlock, b as createStaticVNode } from "./app-04a9e21c.js";
const _imports_0 = "/bowenBlog/assets/image-20230912220946383-1451b65e.png";
const _imports_1 = "/bowenBlog/assets/image-20230913103131579-6f631db3.png";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<hr><h2 id="一-dom-介绍" tabindex="-1"><a class="header-anchor" href="#一-dom-介绍" aria-hidden="true">#</a> 一，Dom 介绍</h2><h2 id="_1-认识dom" tabindex="-1"><a class="header-anchor" href="#_1-认识dom" aria-hidden="true">#</a> 1，认识dom</h2><p><strong>JavaScript是一门编程语言，它的运行环境有两个，一个是浏览器，一个是node，前面我们学的JS必于ECMAScript中的语法，浏览器的JS有三部分组成：</strong></p><ul><li>ECMAScript</li><li>DOM</li><li>BOM</li></ul><p>ECMAScript并不能和和网页进行交互，操作浏览器（网页），就需要给我们提供一个API，我们去调用API，实现操作，学习DOM和BOM就是学习浏览器给我们提供的API，所以说，DOM和BOM操作，也叫WebAPI。</p><p><strong>深入理解DOM</strong></p><ul><li>浏览器将我们编写在HTML中的每一个元素（Element）都抽象成了一个个对象</li><li>所有这些对象都可以通过JavaScript来对其进行访问，那么我们就可以通过JavaScript来操作页面</li><li>将这个抽象过程称之为 文档对象模型（Document Object Model）</li></ul><p><strong>DOM：Docuemnt Object Model 文档对象模型</strong></p><ul><li>文档：html文档 之前的html文件就可以称一个文档</li><li>Object: 对象 一切都是对象 所有的元素都是对象</li><li>Model：模型 树模型 所有的元素，要形成一个树模型</li></ul><p><strong>整个文档被抽象到 document 对象中</strong></p><ul><li>如document.documentElement对应的是html元素</li><li>如document.body对应的是body元素</li><li>如document.head对应的是head元素</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token comment">// 下面的一行代码可以让整个页面变成红色</span>\ndocument<span class="token punctuation">.</span>body<span class="token punctuation">.</span>style<span class="token punctuation">.</span>background <span class="token operator">=</span> <span class="token string">&quot;gold&quot;</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>DOM树</strong></p><ul><li>在html结构中，最终会形成一个树结构</li></ul><h2 id="_2-认识window" tabindex="-1"><a class="header-anchor" href="#_2-认识window" aria-hidden="true">#</a> 2，认识window</h2><p><strong>前面我们学习了一个window的全局对象，window上事实上就包含了这些内容</strong></p><ul><li>JavaScript语法部分的Object、Array、Date等</li><li>DOM</li><li>BOM</li></ul><p><img src="' + _imports_0 + '" alt="image-20230912220946383"></p><h2 id="_3-dom对象" tabindex="-1"><a class="header-anchor" href="#_3-dom对象" aria-hidden="true">#</a> 3，dom对象</h2><p><strong>Document节点表示的整个载入的网页，它的实例是全局的document对象</strong></p><ul><li>对DOM的所有操作都是从 document 对象开始的</li><li>它是DOM的 入口点，可以从document开始去访问任何节点元素</li></ul><p><strong>对于最顶层的html、head、body元素，我们可以直接在document对象中获取到</strong></p><ul><li>document.documentElement 得到 html元素</li><li>document.body 得到 body元素</li><li>document.head 得到 head元素</li><li>document.doctype 得到 文档声明元素</li></ul><h2 id="_4-节点与节点之间的关系" tabindex="-1"><a class="header-anchor" href="#_4-节点与节点之间的关系" aria-hidden="true">#</a> 4，节点与节点之间的关系</h2><p><strong>节点分类：</strong></p><ul><li>元素节点</li><li>文本节点</li><li>属性节点</li><li>注释节点</li></ul><p><strong>注意点：</strong></p><ul><li>在DOM树上，只需要关注元素节点和文本节点，在DOM上，没有属性节点。</li><li>我们只需要关注三种节点：1）元素节点 2）文本节点 3）属性节点</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!-- 我是一个注释 --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>haha<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>我是一个DIV<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.baidu.com<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>百度一下<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n        <span class="token keyword">let</span> oDiv <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;box&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// nodeType判断一个节点的类型</span>\n        <span class="token comment">// 如果是元素节点  它的nodeType是1</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>oDiv<span class="token punctuation">.</span>nodeType<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 1 </span>\n\n        <span class="token comment">// 要获取属性节点，必须先得到元素节点</span>\n        <span class="token comment">// 通过打点的形式，就可以获取属性节点</span>\n        <span class="token comment">// console.log(oDiv.title); // haha</span>\n\n        <span class="token comment">// getAttribute 根据属性名获取属性值的</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>oDiv<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// haha</span>\n        <span class="token comment">// getAttributeNode 获取属性节点</span>\n        <span class="token keyword">let</span> attr <span class="token operator">=</span> oDiv<span class="token punctuation">.</span><span class="token function">getAttributeNode</span><span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>attr<span class="token punctuation">.</span>nodeType<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">let</span> text <span class="token operator">=</span> oDiv<span class="token punctuation">.</span>firstChild<span class="token punctuation">;</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 我是一个DIV</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span>nodeType<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>\n    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>节点之间的关系一：</strong></p><ul><li>获取到一个节点（Node）后，可以根据这个节点去获取其他的节点，我们称之为节点之间的关系</li><li>父节点：parentNode</li><li>前兄弟节点：previousSibling</li><li>后兄弟节点：nextSibling</li><li>子节点：childNodes</li><li>第一个子节点：firstChild</li><li>最后一个子节点：lastChild</li></ul><p><strong>节点之间的关系二：</strong></p><ul><li>获取到一个节点（Node）后，可以根据这个节点去获取其他的节点，我们称之为节点之间的关系</li><li>父节点：parentElement</li><li>前兄弟节点：previousElementSibling</li><li>后兄弟节点：nextElementSibling</li><li>子节点：children</li><li>第一个子节点：firstElementChild</li><li>最后一个子节点：lastElementChild</li></ul><p><strong>节点关系总结（加粗的是需要记的）：</strong></p><ul><li><strong>parentNode</strong> 获取父元素节点 没有兼容性问题</li><li><strong>parentElement</strong> 获取父元素节点 没有兼容性问题</li><li>firstChild 获取第一个子节点 会考虑换行节点和注释节点 不要用</li><li><strong>firstElementChild</strong> 获取第一个子元素节点 可以使用</li><li>lastChild 获取最后一个子节点 会考虑换行节点和注释节点 不要用</li><li><strong>lastElementChild</strong> 获取最后一个子元素节点 可以使用</li><li>nextSibling 获取下一个兄弟节点 会考虑换行节点和注释节点 不要用</li><li><strong>nextElementSibling</strong> 获取下一个兄弟元素节点 可以使用</li><li>previousSibling 获取上一个兄弟节点 会考虑换行节点和注释节点 不要用</li><li><strong>previousElementSibling</strong> 获取上一个兄弟元素节点 可以使用</li></ul><h2 id="_5-获取节点的方法" tabindex="-1"><a class="header-anchor" href="#_5-获取节点的方法" aria-hidden="true">#</a> 5，获取节点的方法</h2><p>通过节点关系可以得到某个元素，但是，在实际开发中，我们希望可以任意的获取到某一个元素应该如何操作呢？</p><p><strong>DOM为我们提供了获取元素的方法：</strong></p><p><strong>最常用的几个方法如下：</strong></p><ul><li>document.getElementById</li><li>document.getElementsByTagName</li><li>document.querySelectorAll</li><li>document.querySelector</li></ul><h2 id="_6-节点的属性" tabindex="-1"><a class="header-anchor" href="#_6-节点的属性" aria-hidden="true">#</a> 6，节点的属性</h2><h3 id="_1-节点的属性之nodetype" tabindex="-1"><a class="header-anchor" href="#_1-节点的属性之nodetype" aria-hidden="true">#</a> 1.节点的属性之nodeType</h3><p><strong>不同的节点类型有可能有不同的属性，但它们有共有属性：</strong></p><ul><li>nodeType 属性提供了一种获取节点类型的方法</li><li>其他类型可以查看MDN文档： https://developer.mozilla.org/zh-CN/docs/Web/API/Node/nodeType</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!-- 我是一个注释 --&gt;</span>\n    我是文本\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>father<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>我是一个H2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>我是内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n        <span class="token keyword">let</span> bodyChildNodes <span class="token operator">=</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>childNodes<span class="token punctuation">;</span>\n        <span class="token keyword">let</span> commentNode <span class="token operator">=</span> bodyChildNodes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> textNode <span class="token operator">=</span> bodyChildNodes<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> divNode <span class="token operator">=</span> bodyChildNodes<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>commentNode<span class="token punctuation">.</span>nodeType<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>textNode<span class="token punctuation">.</span>nodeType<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>divNode<span class="token punctuation">.</span>nodeType<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> node <span class="token keyword">of</span> bodyChildNodes<span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">if</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>nodeType <span class="token operator">===</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>node <span class="token operator">+</span> <span class="token string">&quot;是注释节点&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>nodeType <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>node <span class="token operator">+</span> <span class="token string">&quot;是文本节点&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>nodeType <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>node <span class="token operator">+</span> <span class="token string">&quot;是元素节点&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-节点的属性之nodename" tabindex="-1"><a class="header-anchor" href="#_2-节点的属性之nodename" aria-hidden="true">#</a> 2.节点的属性之nodeName</h3><ul><li>nodeName：获取node节点的名字；</li><li>tagName：获取元素的标签名词；</li></ul><p><strong>tagName 和 nodeName 之间有什么不同呢？</strong></p><ul><li>tagName 属性仅适用于 Element 节点；</li><li>nodeName 是为任意 Node 定义的</li><li>nodeName 对于元素，它的意义与 tagName 相同，所以使用哪一个都是可以的；</li><li>nodeName 对于其他节点类型（text，comment 等），它拥有一个对应节点类型的字符串</li></ul><h3 id="_3-节点的属性之innerhtml和textcontent" tabindex="-1"><a class="header-anchor" href="#_3-节点的属性之innerhtml和textcontent" aria-hidden="true">#</a> 3. 节点的属性之innerHTML和textContent</h3><p><strong>innerHTML 属性</strong></p><ul><li>将元素中的 HTML 获取为字符串形式</li><li>设置元素中的内容；</li></ul><p><strong>outerHTML 属性</strong></p><ul><li>包含了元素的完整 HTML</li><li>innerHTML 加上元素本身一样；</li></ul><p><strong>textContent 属性</strong></p><ul><li>仅仅获取元素中的文本内容；</li></ul><p><strong>innerHTML和textContent的区别：</strong></p><ul><li>使用 innerHTML，我们将其“作为 HTML”插入，带有所有 HTML 标签。</li><li>使用 textContent，我们将其“作为文本”插入，所有符号（symbol）均按字面意义处理。</li></ul><h3 id="_4-节点属性值nodevalue" tabindex="-1"><a class="header-anchor" href="#_4-节点属性值nodevalue" aria-hidden="true">#</a> 4，节点属性值nodeValue</h3><ul><li>用于获取非元素节点的文本内容</li></ul><h3 id="_5-节点的属性之hidden" tabindex="-1"><a class="header-anchor" href="#_5-节点的属性之hidden" aria-hidden="true">#</a> 5，节点的属性之hidden</h3><ul><li>用于设置元素隐藏</li></ul><h2 id="_7-创建和挂载节点" tabindex="-1"><a class="header-anchor" href="#_7-创建和挂载节点" aria-hidden="true">#</a> 7， 创建和挂载节点</h2><p><strong>我们想要插入一个元素，通常会按照如下步骤：</strong></p><ul><li>步骤一：创建一个元素；</li><li>步骤二：插入元素到DOM的某一个位置；</li></ul><p><strong>创建节点：</strong></p><ul><li>createElement 创建元素节点</li><li>createTextNode 创建文本节点</li><li>createComment 创建注释节点</li><li>createAttribute 创建属性节点</li></ul><p><strong>挂载节点：</strong></p><ul><li>node.append(...nodes or strings) —— 在 node 末尾 插入节点或字符串，</li><li>node.prepend(...nodes or strings) —— 在 node 开头 插入节点或字符串，</li><li>node.before(...nodes or strings) —— 在 node 前面 插入节点或字符串，</li><li>node.after(...nodes or strings) —— 在 node 后面 插入节点或字符串，</li><li>node.replaceWith(...nodes or strings) —— 将 node 替换为给定的节点或字符串。</li></ul><h2 id="_8-删除、替换、克隆节点" tabindex="-1"><a class="header-anchor" href="#_8-删除、替换、克隆节点" aria-hidden="true">#</a> 8，删除、替换、克隆节点</h2><p><strong>删除节点：</strong></p><ul><li>removeChild 只有父元素才有资格删除一个子元素</li><li>remove 移除元素我们可以调用元素本身的remove方法：</li></ul><p><strong>替换节点：</strong></p><ul><li>replaceChild</li></ul><p><strong>如果我们想要复制一个现有的元素，可以通过cloneNode方法克隆节点：</strong></p><ul><li>可以传入一个Boolean类型的值，来决定是否是深度克隆；</li><li>深度克隆会克隆对应元素的子元素，否则不会；</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>father<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>son<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n            son\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n        <span class="token keyword">let</span> father <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;.father&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> son <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;.son&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 默认是浅copy  只copy一个节点，内部的其它节点不会copy</span>\n        <span class="token comment">// let newFather = father.cloneNode();</span>\n        <span class="token comment">// console.log(newFather);</span>\n\n        <span class="token comment">// 如果传递一个true表示深copy   如果不传或传一个false表示浅copy</span>\n        <span class="token keyword">let</span> newFather <span class="token operator">=</span> father<span class="token punctuation">.</span><span class="token function">cloneNode</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newFather<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二-属性节点操作" tabindex="-1"><a class="header-anchor" href="#二-属性节点操作" aria-hidden="true">#</a> 二，属性节点操作</h2><h2 id="_1-元素的属性attribute" tabindex="-1"><a class="header-anchor" href="#_1-元素的属性attribute" aria-hidden="true">#</a> 1，元素的属性attribute</h2><p><strong>一个元素除了有开始标签、结束标签、内容之外，还有很多的属性（attribute）</strong></p><p><strong>浏览器在解析HTML元素时，会将对应的attribute也创建出来放到对应的元素对象上。</strong></p><ul><li>比如id、class就是全局的attribute，会有对应的id、class属性；</li><li>比如href属性是针对a元素的，type、value属性是针对input元素的；</li></ul><p><strong>attribute的分类</strong></p><ul><li>标准的attribute：某些attribute属性是标准的，比如id、class、href、type、value等；</li><li>非标准的attribute：某些attribute属性是自定义的，比如abc、age、height等；</li></ul><h2 id="_2-attribute的操作" tabindex="-1"><a class="header-anchor" href="#_2-attribute的操作" aria-hidden="true">#</a> 2，attribute的操作</h2><p><strong>对于所有的attribute访问都支持如下的方法：</strong></p><ul><li>elem.hasAttribute(name) — 检查特性是否存在。</li><li>elem.getAttribute(name) — 获取这个特性值。</li><li>elem.setAttribute(name, value) — 设置这个特性值。</li><li>elem.removeAttribute(name) — 移除这个特性。</li><li>attributes：attr对象的集合，具有name、value属性；</li></ul><p><strong>attribute具备以下特征：</strong></p><ul><li>它们的名字是大小写不敏感的（id 与 ID 相同）。</li><li>它们的值总是字符串类型的。</li></ul><h2 id="_3-元素的属性之property" tabindex="-1"><a class="header-anchor" href="#_3-元素的属性之property" aria-hidden="true">#</a> 3，元素的属性之property</h2><p><strong>对于标准的attribute，会在DOM对象上创建与其对应的property属性：</strong></p><p><strong>在大多数情况下，它们是相互作用的</strong></p><ul><li>改变property，通过attribute获取的值，会随着改变；</li><li>通过attribute操作修改，property的值会随着改变；（但是input的value修改只能通过attribute的方法）</li></ul><p><strong>除非特别情况，大多数情况下，设置、获取attribute，推荐使用property的方式</strong></p><ul><li>因为它默认情况下是有类型的；</li></ul><h2 id="_4-html5-的data-自定义属性" tabindex="-1"><a class="header-anchor" href="#_4-html5-的data-自定义属性" aria-hidden="true">#</a> 4，HTML5 的data 自定义属性</h2><p><strong>HTML5的data-*自定义属性，它们可以在dataset属性中获取到的</strong></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!-- 以data-打头的，叫html5中的自定义属性 --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>father<span class="token punctuation">&quot;</span></span> <span class="token attr-name">age</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>18<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-score</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>88<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-address</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bj<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        我是一个孤独的DIV\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n        <span class="token keyword">let</span> boxEle <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;.father&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>boxEle<span class="token punctuation">.</span>dataset<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>boxEle<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>score<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>boxEle<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三-动态修改样式" tabindex="-1"><a class="header-anchor" href="#三-动态修改样式" aria-hidden="true">#</a> 三，动态修改样式</h2><p><strong>JavaScript动态修改样式，有两个选择：</strong></p><ul><li>选择一：在CSS中编写好对应的样式，动态的添加class；</li><li>选择二：动态的修改style属性；</li></ul><h2 id="_1-元素的classname和classlist" tabindex="-1"><a class="header-anchor" href="#_1-元素的classname和classlist" aria-hidden="true">#</a> 1，元素的className和classList</h2><p><strong>元素的class attribute，对应的property并非叫class，而是className：</strong></p><ul><li>因为JavaScript早期是不允许使用class这种关键字来作为对象的属性，所以DOM规范使用了className</li><li>可以对className进行赋值，它会替换整个类中的字符串</li></ul><p><strong>如果我们需要添加或者移除单个的class，那么可以使用classList属性：</strong></p><ul><li>elem.classList.add (class) ：添加一个类</li><li>elem.classList.remove(class)：添加/移除类</li><li>elem.classList.toggle(class) ：如果类不存在就添加类，存在就移除它</li><li>elem.classList.contains(class)：检查给定类，返回 true/false</li></ul><h2 id="_2-元素的style属性" tabindex="-1"><a class="header-anchor" href="#_2-元素的style属性" aria-hidden="true">#</a> 2，元素的style属性</h2><p><strong>单独修改某一个CSS属性，那么可以通过style来操作：</strong></p><ul><li>对于多词（multi-word）属性，使用驼峰式 camelCase</li><li>多个样式的写法，我们需要使用cssText属性，不推荐这种用法，因为它会替换整个字符串</li></ul><h2 id="_3-元素style的读取" tabindex="-1"><a class="header-anchor" href="#_3-元素style的读取" aria-hidden="true">#</a> 3，元素style的读取</h2><ul><li><p>getComputedStyle</p></li><li><p>对于内联样式，是可以通过style.*的方式读取到的</p></li><li><p>对于style、css文件中的样式，是读取不到的</p></li><li><p>通过getComputedStyle的全局函数来实现</p></li></ul><h2 id="四-js操作盒子模型" tabindex="-1"><a class="header-anchor" href="#四-js操作盒子模型" aria-hidden="true">#</a> 四，JS操作盒子模型</h2><p><img src="' + _imports_1 + '" alt="image-20230913103131579"></p><h2 id="五-事件处理" tabindex="-1"><a class="header-anchor" href="#五-事件处理" aria-hidden="true">#</a> 五，事件处理</h2><h2 id="_1-事件类型" tabindex="-1"><a class="header-anchor" href="#_1-事件类型" aria-hidden="true">#</a> 1，事件类型</h2><p><strong>事件 + 事件的反馈 = 前端交互（前端的核心）</strong></p><p><strong>鼠标事件：</strong></p><ul><li>onclick 点击事件 = onmousedown + onmouseup</li><li>ondbclick 双击事件</li><li>onmousedown 鼠标按下去</li><li>onmouseup 鼠标抬起来</li><li>onmouseover 鼠标移到某元素上面</li><li>onmouseout 鼠标离开某元素上面</li><li>onmousemove 鼠标在元素上面的移动</li></ul><p><strong>键盘事件：</strong></p><ul><li>onkeydown 键盘按下去</li><li>onkeyup 键盘抬起来</li><li>onkeypress 键盘抬住</li></ul><p>事件的执行顺序是 onkeydown、onkeypress、onkeyup</p><ul><li>down事件先发生</li><li>press发生在文本被输入</li><li>up发生在文本输入完成</li></ul><p><strong>加载事件：</strong></p><ul><li>load 加载 浏览器不仅加载完成了 HTML，还加载完成了所有外部资源 事件源是window</li><li>unload 加载 退出页面 此事件不好捕获到 也没有什么用</li><li>DOMContentLoaded：浏览器已完全加载 HTML，并构建了 DOM 树，但像 img 和样式表之类的外部资源可能尚未加载 完成。</li></ul><p><strong>表单事件：</strong></p><ul><li>focus: 获取焦点</li><li>blur: 失去焦点</li><li>change: 改变输入框中的内容，并失去焦点时触发</li><li>input：内部发生变化，立即触发，不等到失去焦点</li><li>submit: 当点击了提交按钮，会触发submit事件</li><li>reset: 当点击了重置按钮，会触发reset事件</li></ul><p><strong>其它事件：</strong></p><ul><li>resize: 改变了浏览器窗口大小时，会触发resize事件</li><li>scroll: 页面滚动时，会触发scroll事件</li><li>....</li></ul><h2 id="_2-事件的绑定和解绑" tabindex="-1"><a class="header-anchor" href="#_2-事件的绑定和解绑" aria-hidden="true">#</a> 2，事件的绑定和解绑</h2><h3 id="html级别的事件绑定" tabindex="-1"><a class="header-anchor" href="#html级别的事件绑定" aria-hidden="true">#</a> HTML级别的事件绑定</h3><p><strong>可以在HTML开始标签上，去绑定事件，这种绑定基本不用</strong></p><h3 id="dom0事件绑定" tabindex="-1"><a class="header-anchor" href="#dom0事件绑定" aria-hidden="true">#</a> DOM0事件绑定</h3><p><strong>DOM0事件绑定，就是给DOM元素的onxxxx属性赋值，是基于属性赋值的操作</strong></p><p><strong>如果有HTML级别的事件绑定和DOM0的事件绑定，谁的优先给高，演示如下：</strong></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>加载更多<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n        <span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;html级别的事件绑定&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token comment">// dom0级别的事件绑定优先级是高于HTML级别的事件绑定的</span>\n        <span class="token keyword">let</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;btn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        btn<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;dom0级别的事件绑定&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="dom2的事件绑定" tabindex="-1"><a class="header-anchor" href="#dom2的事件绑定" aria-hidden="true">#</a> DOM2的事件绑定</h3><p><strong>DOM2的事件绑定是基于事件池的，不是基于属性赋值的，所以可以多次绑定，不会覆盖掉，演示代码如下：</strong></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\n        <span class="token selector">.loading</span><span class="token punctuation">{</span>\n            <span class="token property">background-color</span><span class="token punctuation">:</span> #ccc<span class="token punctuation">;</span>\n            <span class="token property">color</span><span class="token punctuation">:</span> #424242<span class="token punctuation">;</span>\n            <span class="token property">outline</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>\n            <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>加载更多<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n        <span class="token keyword">let</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;btn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// DOM2的事件绑定</span>\n        <span class="token comment">// 基于事件池   事件绑定都是异步代码  都是宏任务</span>\n        btn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&quot;加载中...&quot;</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">&quot;loading&quot;</span>\n            \n            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&quot;加载更多&quot;</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">2000</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        btn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;~我是有底线的~&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span> \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>特别需要注意，绑定的是事件处理程序，也就是监听器，也就是事件反馈，如果你的监听器是同一个，即使你绑定了多次，也只会执行一次，演示如下：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>加载更多<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n        <span class="token keyword">let</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;btn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        btn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;111&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        btn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;222&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>加载更多<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n        <span class="token keyword">let</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;btn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// 如果这样绑定，事件池中只有一个Fn</span>\n        btn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span>fn<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        btn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span>fn<span class="token punctuation">)</span>\n        <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;xxx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-事件解绑" tabindex="-1"><a class="header-anchor" href="#_3-事件解绑" aria-hidden="true">#</a> 3，事件解绑</h2><p>绑定它是绑定的监听器，解绑也是解绑监听器，解绑也分DOM0的解和DOM2的解绑，演示DOM0的解绑代码如下：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\n        <span class="token selector">button</span><span class="token punctuation">{</span>\n            <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n            <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n            <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>\n            <span class="token property">height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>\n            <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n            <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>\n            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n            <span class="token property">line-height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token selector">.got</span><span class="token punctuation">{</span>\n            <span class="token property">background-color</span><span class="token punctuation">:</span> #ddd<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>领取优惠劵<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n        <span class="token keyword">let</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;btn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// 事件绑定  绑定的监听器</span>\n        btn<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&quot;已领取&quot;</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">&quot; got&quot;</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;已领取~&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token comment">// 已领取 需要解绑  解绑的也是监听器</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// DOM0的解绑</span>\n        <span class="token punctuation">}</span>\n    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面的DOM2的事件解绑是不OK的，如下：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\n        <span class="token selector">button</span> <span class="token punctuation">{</span>\n            <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n            <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n            <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>\n            <span class="token property">height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>\n            <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n            <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>\n            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n            <span class="token property">line-height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token selector">.got</span> <span class="token punctuation">{</span>\n            <span class="token property">background-color</span><span class="token punctuation">:</span> #ddd<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>领取优惠劵<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n        <span class="token keyword">let</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;btn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        \n        <span class="token comment">// DOM2的事件绑定</span>\n        btn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span>fn<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span>\n\n        <span class="token comment">// DOM2的解绑  解绑的参数需要和绑定的参数一样</span>\n        <span class="token comment">// 不行：因为上，刚把fn扔到池中，下面紧接着，把fn从池中扔出来的</span>\n        btn<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> fn<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span>\n\n        <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&quot;已领取&quot;</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">&quot; got&quot;</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;已领取~&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>正确的解绑如下：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\n        <span class="token selector">button</span> <span class="token punctuation">{</span>\n            <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n            <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n            <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>\n            <span class="token property">height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>\n            <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n            <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>\n            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n            <span class="token property">line-height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token selector">.got</span> <span class="token punctuation">{</span>\n            <span class="token property">background-color</span><span class="token punctuation">:</span> #ddd<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>领取优惠劵<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n        <span class="token keyword">let</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;btn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        \n        <span class="token comment">// DOM2的事件绑定</span>\n        btn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span>fn<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span>\n\n\n        <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&quot;已领取&quot;</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">&quot; got&quot;</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;已领取~&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token comment">// DOM2的解绑  解绑的参数需要和绑定的参数一样</span>\n            btn<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> fn<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其它的解绑方案如下：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>领取优惠劵<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n        <span class="token keyword">let</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;btn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        \n        <span class="token comment">// DOM2的事件绑定</span>\n        btn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&quot;已领取&quot;</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">&quot; got&quot;</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;已领取~&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            btn<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> fn<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>领取优惠劵<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n        <span class="token keyword">let</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;btn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        \n        <span class="token comment">// DOM2的事件绑定</span>\n        btn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&quot;已领取&quot;</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">&quot; got&quot;</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;已领取~&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token comment">// console.log(arguments.callee);</span>\n\n            btn<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> arguments<span class="token punctuation">.</span>callee<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-事件冒泡和事件捕获" tabindex="-1"><a class="header-anchor" href="#_4-事件冒泡和事件捕获" aria-hidden="true">#</a> 4，事件冒泡和事件捕获</h2><ul><li>我们会发现默认情况下事件是从最内层的span向外依次传递的顺序，这个顺序我们称之为事件冒泡（Event Bubble）</li><li>另外一种监听事件流的方式就是从外层到内层（body -&gt; span），这种称之为事件捕获（Event Capture）</li></ul><p><strong>如果我们都监听，那么会按照如下顺序来执行：</strong></p><ul><li>捕获阶段（Capturing phase）：事件（从 Window）向下走近元素</li><li>目标阶段（Target phase）：事件到达目标元素</li><li>冒泡阶段（Bubbling phase）：事件从元素上开始冒泡</li></ul><h2 id="_5-事件对象" tabindex="-1"><a class="header-anchor" href="#_5-事件对象" aria-hidden="true">#</a> 5，事件对象</h2><p><strong>当一个事件发生时，就会有和这个事件相关的很多信息：</strong></p><ul><li>比如事件的类型是什么，你点击的是哪一个元素，点击的位置是哪里等等相关的信息</li><li>那么这些信息会被封装到一个Event对象中，这个对象由浏览器创建，称之为event对象；</li><li>该对象给我们提供了想要的一些属性，以及可以通过该对象进行某些操作；</li></ul><p><strong>如何获取这个event对象呢？</strong></p><ul><li>event对象会在传入的事件处理（event handler）函数回调时，被系统传入；</li><li>我们可以在回调函数中拿到这个event对象；</li></ul><p><strong>常见的属性：</strong></p><ul><li>type：事件的类型；</li><li>target：当前事件发生的元素；</li><li>currentTarget：当前处理事件的元素；</li><li>eventPhase：事件所处的阶段；</li><li>offsetX、offsetY：事件发生在元素内的位置；</li><li>clientX、clientY：事件发生在客户端内的位置；</li><li>pageX、pageY：事件发生在客户端相对于document的位置；</li><li>screenX、screenY：事件发生相对于屏幕的位置；</li></ul><p><strong>常见的方法：</strong></p><ul><li>preventDefault：取消事件的默认行为；</li><li>stopPropagation：阻止事件的进一步传递（冒泡或者捕获都可以阻止）；</li></ul><h2 id="_6-事件委托" tabindex="-1"><a class="header-anchor" href="#_6-事件委托" aria-hidden="true">#</a> 6，事件委托</h2><p><strong>事件冒泡在某种情况下可以帮助我们实现强大的事件处理模式 – 事件委托模式（也是一种设计模式）</strong></p><ul><li>当子元素被点击时，父元素可以通过冒泡可以监听到子元素的点击；</li><li>可以通过event.target获取到当前监听的元素；</li></ul>', 168);
const _hoisted_169 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache) {
  return openBlock(), createElementBlock("div", null, _hoisted_169);
}
const dom_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "dom.html.vue"]]);
export {
  dom_html as default
};
