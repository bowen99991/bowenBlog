import { _ as _export_sfc, o as openBlock, c as createElementBlock, d as createStaticVNode } from "./app-12e56767.js";
const _imports_0 = "/bowenBlog/assets/image-20231201205347646-40df4b2a.png";
const _imports_1 = "/bowenBlog/assets/image-20231201204914029-66a4d172.png";
const _imports_2 = "/bowenBlog/assets/image-20231201214057329-84f910b2.png";
const _imports_3 = "/bowenBlog/assets/image-20231201220744353-42b5249f.png";
const _imports_4 = "/bowenBlog/assets/image-20231201223949725-ac8d162c.png";
const _imports_5 = "/bowenBlog/assets/image-20231201224455869-8ab3be5a.png";
const _imports_6 = "/bowenBlog/assets/image-20231203214644525-8ca0461f.png";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<hr><h2 id="vue-后台管理系统" tabindex="-1"><a class="header-anchor" href="#vue-后台管理系统" aria-hidden="true">#</a> Vue 后台管理系统</h2><hr><p>vue-element-admin</p><h2 id="一-开源项目介绍" tabindex="-1"><a class="header-anchor" href="#一-开源项目介绍" aria-hidden="true">#</a> 一, 开源项目介绍</h2><h3 id="_1-项目介绍" tabindex="-1"><a class="header-anchor" href="#_1-项目介绍" aria-hidden="true">#</a> 1, 项目介绍</h3><p>开源地址：https://github.com/PanJiaChen/vue-element-admin</p><p>预览地址：https://panjiachen.github.io/vue-element-admin/#/login?redirect=%2Fdashboard</p><p>文档地址：https://panjiachen.github.io/vue-element-admin-site/zh/guide/#%E5%8A%9F%E8%83%BD</p><p><strong>亮点</strong>：</p><ul><li><p>权限设计</p></li><li><p>全局功能 （Layout）</p><ul><li>菜单如何渲染</li><li>设置功能实现</li><li>全局操作实现</li><li>切换组件实现</li><li>国际化实现</li><li>TabView</li><li>面包屑</li><li>....</li></ul><p><strong>再次提示Vue的重要性(四选一)</strong>：</p><ul><li>Vue2 / Vue3 / React / Uniapp</li><li>ElementUI组件库必须熟练掌握，比Vant还重要。</li></ul></li></ul><p><strong>vue3的开源模板：</strong></p><ul><li>vue-vben-admin</li></ul><p>备注:</p><blockquote><p>可能存在的错误, npm i 报错, 请查看对应的 node 版本, 是否过低或过高</p><p>目前环境, node 版本16.20.0</p><p>已经开启科学上网</p><p>nrm 源选择的是 npm.js<img src="' + _imports_0 + '" alt="image-20231201205347646"></p></blockquote><h3 id="_2-启动项目" tabindex="-1"><a class="header-anchor" href="#_2-启动项目" aria-hidden="true">#</a> 2, 启动项目</h3><p><strong>项目文件结构</strong></p><p><img src="' + _imports_1 + '" alt="image-20231201204914029"></p><p>先看一下项目的说明文件，是 README. MD 文件</p><h3 id="_3-可以科学上网安装依赖" tabindex="-1"><a class="header-anchor" href="#_3-可以科学上网安装依赖" aria-hidden="true">#</a> 3, 可以科学上网安装依赖</h3><p>你电脑上，需要有工具，打开代理工具，直接通过npm 去安装所有的依赖，项目就直接通过npm run dev运行直来，需要注意你的node版本是16.16.0。</p><h3 id="_4-使用工具删除-node-module" tabindex="-1"><a class="header-anchor" href="#_4-使用工具删除-node-module" aria-hidden="true">#</a> 4, 使用工具删除 node_module</h3><p>先安装一个工具：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>npm install rimraf <span class="token operator">-</span> g\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>删除node_module：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>rimraf node_modules\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-研究项目" tabindex="-1"><a class="header-anchor" href="#_5-研究项目" aria-hidden="true">#</a> 5, 研究项目</h3><p>得到一个新的项目，如何研究，研究的流程是怎么样的？</p><ul><li>README.md 项目的说明文件（今天大家从上到下过一遍）</li><li>package.json 看一下，项目中运行了什么依赖，启动项目，打包项目</li><li>项目都有哪些配置文件，不能有语法障碍，如果配置文件没有见过，直接把配置文件名放到百度</li><li>src是项目的源码，重点就是src</li><li>先看入口文件，main.js</li><li>看APP.vue</li><li>路由，Layout组件，路由对应的哪些组件</li><li>Vuex，状态管理，存储哪些公共的状态</li><li>axios是如何封装的，api接口是如何封装，跨域是是如何配置的</li><li>看别人写的组件，是如何写的，如何命名，你如果在基于人家的项目去开发，你的习惯最好和人家的习惯一样</li><li>把项目跑起来，边去看效果，边看代码</li></ul><p>边研究，边记录，把遇到的问题都记录下来。不会的问题列表。</p><h2 id="二-项目" tabindex="-1"><a class="header-anchor" href="#二-项目" aria-hidden="true">#</a> 二, 项目</h2><h3 id="_1-main-js" tabindex="-1"><a class="header-anchor" href="#_1-main-js" aria-hidden="true">#</a> 1, main.js</h3><p>main.js中的代码如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 引入vue</span>\n<span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n\n<span class="token comment">// 引入js-cookie</span>\n<span class="token comment">// 是用来操作cookie的，后端返回的token就存储在cookie中</span>\n<span class="token comment">// 之前我们是存储在loccalstroage中</span>\n<span class="token keyword">import</span> Cookies <span class="token keyword">from</span> <span class="token string">&#39;js-cookie&#39;</span>\n\n<span class="token comment">// 引入重置样式</span>\n<span class="token keyword">import</span> <span class="token string">&#39;normalize.css/normalize.css&#39;</span>\n\n<span class="token comment">// vant是手机端的UI库</span>\n<span class="token comment">// Element是PC端的UI组件库</span>\n<span class="token keyword">import</span> Element <span class="token keyword">from</span> <span class="token string">&#39;element-ui&#39;</span>\n<span class="token keyword">import</span> <span class="token string">&#39;./styles/element-variables.scss&#39;</span>\n<span class="token comment">// 引入国际包  国际化</span>\n<span class="token keyword">import</span> enLang <span class="token keyword">from</span> <span class="token string">&#39;element-ui/lib/locale/lang/en&#39;</span><span class="token comment">// 如果使用中文语言包请默认支持，无需额外引入，请删除该依赖</span>\n\n<span class="token comment">// 引入自已写的CSS全局样式</span>\n<span class="token keyword">import</span> <span class="token string">&#39;@/styles/index.scss&#39;</span>\n\n<span class="token comment">// 引入APP组件</span>\n<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&#39;./App&#39;</span>\n<span class="token comment">// 引入仓库</span>\n<span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">&#39;./store&#39;</span>\n<span class="token comment">// 引入路由</span>\n<span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">&#39;./router&#39;</span>\n\n<span class="token comment">// 引入自己封装的icon图标</span>\n<span class="token keyword">import</span> <span class="token string">&#39;./icons&#39;</span> <span class="token comment">// icon</span>\n<span class="token comment">// 引入权限模块，非常重要，面试必问</span>\n<span class="token keyword">import</span> <span class="token string">&#39;./permission&#39;</span> <span class="token comment">// permission control</span>\n<span class="token keyword">import</span> <span class="token string">&#39;./utils/error-log&#39;</span> <span class="token comment">// error log</span>\n\n<span class="token comment">// 引入过滤器</span>\n<span class="token comment">// 在读别人的代码时，不能有语法障碍</span>\n<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> filters <span class="token keyword">from</span> <span class="token string">&#39;./filters&#39;</span> <span class="token comment">// global filters</span>\n\n<span class="token doc-comment comment">/**\n * If you don&#39;t want to use mock-server\n * you want to use MockJs for mock api\n * you can execute: mockXHR()\n *\n * Currently MockJs will be used in the production environment,\n * please remove it before going online ! ! !\n */</span>\n<span class="token comment">// process是node中的全局变量</span>\n<span class="token comment">// 当通过npm run build时，node_env就是production</span>\n<span class="token comment">// 当通过npm run dev时，node_env就是development</span>\n<span class="token comment">// p<wbr>rocess.env.NODE_ENV === &#39;production&#39; 表示是生成环境</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 导入mock模块，模拟接口中的，本项目中的接口，都是模拟的，都是假的</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> mockXHR <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../mock&#39;</span><span class="token punctuation">)</span>\n  <span class="token function">mockXHR</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// Vue.use(Element) </span>\n<span class="token comment">// 之前：Vue.use(vant)</span>\nVue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Element<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  <span class="token comment">// Button  可以设置  如果不设置默认是medium</span>\n  <span class="token literal-property property">size</span><span class="token operator">:</span> Cookies<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;size&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;medium&#39;</span><span class="token punctuation">,</span> <span class="token comment">// set element-ui default size</span>\n  <span class="token comment">// locale: enLang 表示组件使用英文</span>\n  <span class="token literal-property property">locale</span><span class="token operator">:</span> enLang <span class="token comment">// 如果使用中文，无需设置，请删除</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n\n<span class="token comment">// 注册全局过滤器</span>\n<span class="token comment">// register global utility filters</span>\nObject<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>filters<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  Vue<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> filters<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 关闭生成环境下，vue提示</span>\nVue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>productionTip <span class="token operator">=</span> <span class="token boolean">false</span>\n\n<span class="token comment">// new一个Vue  </span>\n<span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>\n  router<span class="token punctuation">,</span>\n  store<span class="token punctuation">,</span>\n  <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token parameter">h</span> <span class="token operator">=&gt;</span> <span class="token function">h</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-app-vue" tabindex="-1"><a class="header-anchor" href="#_2-app-vue" aria-hidden="true">#</a> 2, App.vue</h3><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!-- 这是一级路由出品 --&gt;</span>\n    <span class="token comment">&lt;!-- 一会看路由，需要知道，哪些路由匹配的组件会放到一级路由出口 --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span> <span class="token punctuation">/&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;App&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-路由" tabindex="-1"><a class="header-anchor" href="#_3-路由" aria-hidden="true">#</a> 3, 路由</h3><p>路由模块+权限管理模块 (重点)</p><p><img src="' + _imports_2 + '" alt="image-20231201214057329"></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 引入vue</span>\n<span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token comment">// 引入vue-router</span>\n<span class="token keyword">import</span> Router <span class="token keyword">from</span> <span class="token string">&#39;vue-router&#39;</span>\n\n<span class="token comment">// 路由就是一个插件，需要use</span>\nVue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Router<span class="token punctuation">)</span>\n\n<span class="token comment">// 引入layout组件</span>\n<span class="token comment">// layout组件非常重要  </span>\n<span class="token comment">// 一级路由出口中，匹配layout组件</span>\n<span class="token keyword">import</span> Layout <span class="token keyword">from</span> <span class="token string">&#39;@/layout&#39;</span>\n\n<span class="token comment">// 引入其它四个路由模块</span>\n<span class="token keyword">import</span> componentsRouter <span class="token keyword">from</span> <span class="token string">&#39;./modules/components&#39;</span>\n<span class="token keyword">import</span> chartsRouter <span class="token keyword">from</span> <span class="token string">&#39;./modules/charts&#39;</span>\n<span class="token keyword">import</span> tableRouter <span class="token keyword">from</span> <span class="token string">&#39;./modules/table&#39;</span>\n<span class="token keyword">import</span> nestedRouter <span class="token keyword">from</span> <span class="token string">&#39;./modules/nested&#39;</span>\n\n<span class="token doc-comment comment">/**\n * Note: sub-menu only appear when route children.length &gt;= 1\n * Detail see: https://panjiachen.github.io/vue-element-admin-site/guide/essentials/router-and-nav.html\n *\n * hidden: true                   if set true, item will not show in the sidebar(default is false)\n * alwaysShow: true               if set true, will always show the root menu\n *                                if not set alwaysShow, when item has more than one children route,\n *                                it will becomes nested mode, otherwise not show the root menu\n * redirect: noRedirect           if set noRedirect will no redirect in the breadcrumb\n * name:&#39;router-name&#39;             the name is used by &lt;keep-alive&gt; (must set!!!)\n * meta : <span class="token punctuation">{</span>\n    roles: [&#39;admin&#39;,&#39;editor&#39;]    control the page roles (you can set multiple roles)\n    title: &#39;title&#39;               the name show in sidebar and breadcrumb (recommend set)\n    icon: &#39;svg-name&#39;/&#39;el-icon-x&#39; the icon show in the sidebar\n    noCache: true                if set true, the page will no be cached(default is false)\n    affix: true                  if set true, the tag will affix in the tags-view\n    breadcrumb: false            if set false, the item will hidden in breadcrumb(default is true)\n    activeMenu: &#39;/example/list&#39;  if set path, the sidebar will highlight the path you set\n  <span class="token punctuation">}</span>\n */</span>\n\n<span class="token doc-comment comment">/**\n * constantRoutes\n * a base page that does not have permission requirements\n * all roles can be accessed\n */</span>\n<span class="token comment">// constantRoutes是静态路由</span>\n<span class="token comment">// 本项目，路由分成了两大模块：静态路由 和 动态路由</span>\n<span class="token comment">// 静态路由：所有的用户可以访问，不需要权限</span>\n<span class="token comment">// 动态路由：需要权限，如果有权限，就可以访问，如果没有权限，就不能访问</span>\n<span class="token comment">// 路则规则：就是一个对象</span>\n<span class="token comment">//     path: &#39;/redirect&#39;,  访问的url</span>\n<span class="token comment">//     component: Layout,  访问出口中放什么组件  在一级中币出口中放 Layout 组件</span>\n<span class="token comment">//     hidden: true,  隐藏   把侧边栏中不能看到声明式导航</span>\n<span class="token comment">//     children: [  配置二级路由</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> constantRoutes <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/redirect&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">component</span><span class="token operator">:</span> Layout<span class="token punctuation">,</span>\n    <span class="token literal-property property">hidden</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/redirect/:path(.*)&#39;</span><span class="token punctuation">,</span>\n        <span class="token comment">// 在二级路由出口中放@/views/redirect/index组件 </span>\n        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/redirect/index&#39;</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token comment">// 当访问 /login时，  在一级路由出口放登录页面  一级路由出口是在APP组件中</span>\n    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/login/index&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token comment">//  把侧边栏中不能看到声明式导航</span>\n    <span class="token literal-property property">hidden</span><span class="token operator">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/auth-redirect&#39;</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/login/auth-redirect&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">hidden</span><span class="token operator">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/404&#39;</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/error-page/404&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">hidden</span><span class="token operator">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/401&#39;</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/error-page/401&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">hidden</span><span class="token operator">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">component</span><span class="token operator">:</span> Layout<span class="token punctuation">,</span>\n    <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token string">&#39;/dashboard&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;dashboard&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/dashboard/index&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Dashboard&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Dashboard&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;dashboard&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">affix</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/documentation&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">component</span><span class="token operator">:</span> Layout<span class="token punctuation">,</span>\n    <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;index&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/documentation/index&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Documentation&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Documentation&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;documentation&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">affix</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/guide&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">component</span><span class="token operator">:</span> Layout<span class="token punctuation">,</span>\n    <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token string">&#39;/guide/index&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;index&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/guide/index&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Guide&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Guide&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;guide&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">noCache</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/profile&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">component</span><span class="token operator">:</span> Layout<span class="token punctuation">,</span>\n    <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token string">&#39;/profile/index&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">hidden</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;index&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/profile/index&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Profile&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Profile&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;user&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">noCache</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n\n<span class="token doc-comment comment">/**\n * asyncRoutes\n * the routes that need to be dynamically loaded based on user roles\n */</span>\n<span class="token comment">// asyncRoutes是动态路由</span>\n<span class="token comment">// 页面级（路由级）权限：</span>\n<span class="token comment">//     不同用户，登录到系统，看到的侧边栏是不一样，也就是有不同的页面</span>\n<span class="token comment">//     同一个页面，有的用户可以访问，有的用户不能访问</span>\n<span class="token comment">//  并不是说，你在下面配置完就OK，背后还有很多代码</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> asyncRoutes <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/permission&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">component</span><span class="token operator">:</span> Layout<span class="token punctuation">,</span>\n    <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token string">&#39;/permission/page&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">alwaysShow</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// will always show the root menu</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Permission&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Permission&#39;</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;lock&#39;</span><span class="token punctuation">,</span>\n      <span class="token comment">// roles表示什么样的用户可以访问permission</span>\n      <span class="token comment">// 不同的用户有不同的角色</span>\n      <span class="token comment">// 本项目就两个角色：admin   editor</span>\n      <span class="token comment">// roles: [&#39;admin&#39;, &#39;editor&#39;]  表示amdin可以访问persmisson  editor也可以访问persmisson</span>\n      <span class="token literal-property property">roles</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;admin&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;editor&#39;</span><span class="token punctuation">]</span> <span class="token comment">// you can set roles in root nav</span>\n\n      <span class="token comment">// roles: [&#39;admin&#39;]  表示只能admin用户可以访问persmisson</span>\n      <span class="token comment">// roles: [&#39;admin&#39;] // you can set roles in root nav</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;page&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/permission/page&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;PagePermission&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Page Permission&#39;</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">roles</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;admin&#39;</span><span class="token punctuation">]</span> <span class="token comment">// or you can only set roles in sub nav</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;directive&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/permission/directive&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;DirectivePermission&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Directive Permission&#39;</span><span class="token punctuation">,</span>\n          <span class="token comment">// 没有roles，表示此路由规则，不需要校验</span>\n          <span class="token comment">// if do not set roles, means: this page does not require permission</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;role&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/permission/role&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;RolePermission&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Role Permission&#39;</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">roles</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;admin&#39;</span><span class="token punctuation">]</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/icon&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">component</span><span class="token operator">:</span> Layout<span class="token punctuation">,</span>\n    <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;index&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/icons/index&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Icons&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Icons&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;icon&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">noCache</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  <span class="token doc-comment comment">/** when your routing map is too long, you can split it into small modules **/</span>\n  componentsRouter<span class="token punctuation">,</span>\n  chartsRouter<span class="token punctuation">,</span>\n  nestedRouter<span class="token punctuation">,</span>\n  tableRouter<span class="token punctuation">,</span>\n\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/example&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">component</span><span class="token operator">:</span> Layout<span class="token punctuation">,</span>\n    <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token string">&#39;/example/list&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Example&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Example&#39;</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;el-icon-s-help&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;create&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/example/create&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;CreateArticle&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Create Article&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;edit&#39;</span> <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;edit/:id(\\\\d+)&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/example/edit&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;EditArticle&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Edit Article&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">noCache</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">activeMenu</span><span class="token operator">:</span> <span class="token string">&#39;/example/list&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">hidden</span><span class="token operator">:</span> <span class="token boolean">true</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;list&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/example/list&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;ArticleList&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Article List&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;list&#39;</span> <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/tab&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">component</span><span class="token operator">:</span> Layout<span class="token punctuation">,</span>\n    <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;index&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/tab/index&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Tab&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Tab&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;tab&#39;</span> <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/error&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">component</span><span class="token operator">:</span> Layout<span class="token punctuation">,</span>\n    <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token string">&#39;noRedirect&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;ErrorPages&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Error Pages&#39;</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;404&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;401&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/error-page/401&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Page401&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;401&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">noCache</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;404&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/error-page/404&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Page404&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;404&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">noCache</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/error-log&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">component</span><span class="token operator">:</span> Layout<span class="token punctuation">,</span>\n    <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;log&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/error-log/index&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;ErrorLog&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Error Log&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;bug&#39;</span> <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/excel&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">component</span><span class="token operator">:</span> Layout<span class="token punctuation">,</span>\n    <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token string">&#39;/excel/export-excel&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Excel&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Excel&#39;</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;excel&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;export-excel&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/excel/export-excel&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;ExportExcel&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Export Excel&#39;</span> <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;export-selected-excel&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/excel/select-excel&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;SelectExcel&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Export Selected&#39;</span> <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;export-merge-header&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/excel/merge-header&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;MergeHeader&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Merge Header&#39;</span> <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;upload-excel&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/excel/upload-excel&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;UploadExcel&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Upload Excel&#39;</span> <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/zip&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">component</span><span class="token operator">:</span> Layout<span class="token punctuation">,</span>\n    <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token string">&#39;/zip/download&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">alwaysShow</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Zip&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Zip&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;zip&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;download&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/zip/index&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;ExportZip&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Export Zip&#39;</span> <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/pdf&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">component</span><span class="token operator">:</span> Layout<span class="token punctuation">,</span>\n    <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token string">&#39;/pdf/index&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;index&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/pdf/index&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;PDF&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;PDF&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;pdf&#39;</span> <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/pdf/download&#39;</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/pdf/download&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">hidden</span><span class="token operator">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/theme&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">component</span><span class="token operator">:</span> Layout<span class="token punctuation">,</span>\n    <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;index&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/theme/index&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Theme&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Theme&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;theme&#39;</span> <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/clipboard&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">component</span><span class="token operator">:</span> Layout<span class="token punctuation">,</span>\n    <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;index&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/clipboard/index&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;ClipboardDemo&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Clipboard&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;clipboard&#39;</span> <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;external-link&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">component</span><span class="token operator">:</span> Layout<span class="token punctuation">,</span>\n    <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;https://github.com/PanJiaChen/vue-element-admin&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;External Link&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;link&#39;</span> <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  <span class="token comment">// 404 page must be placed at the end !!!</span>\n  <span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;*&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token string">&#39;/404&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">hidden</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n\n<span class="token comment">// 创建一个路由对象  router</span>\n<span class="token keyword">const</span> <span class="token function-variable function">createRouter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Router</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token comment">// mode: &#39;history&#39;, // require service support</span>\n  <span class="token function-variable function">scrollBehavior</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">routes</span><span class="token operator">:</span> constantRoutes\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">createRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token comment">// Detail see: https://github.com/vuejs/vue-router/issues/1234#issuecomment-357941465</span>\n<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">resetRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> newRouter <span class="token operator">=</span> <span class="token function">createRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  router<span class="token punctuation">.</span>matcher <span class="token operator">=</span> newRouter<span class="token punctuation">.</span>matcher <span class="token comment">// reset router</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> router\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>左则的菜单是动态的计算出来的，如下：</p><p><img src="' + _imports_3 + '" alt="image-20231201220744353"></p><p>它是在permission模块中动态计算出来的，这个模块是最最难的模块</p><h3 id="_4-promising-模块" tabindex="-1"><a class="header-anchor" href="#_4-promising-模块" aria-hidden="true">#</a> 4, promising 模块</h3><p>如果把这个模块注释掉，菜单都没有了</p><p>promising.js 代码如下:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 引入路由器</span>\n<span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">&#39;./router&#39;</span>\n<span class="token comment">// 引入仓库</span>\n<span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">&#39;./store&#39;</span>\n<span class="token comment">// 引入elementui中的提示性组件</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Message <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;element-ui&#39;</span>\n<span class="token comment">// 引入nprogress  进度条</span>\n<span class="token keyword">import</span> NProgress <span class="token keyword">from</span> <span class="token string">&#39;nprogress&#39;</span> <span class="token comment">// progress bar</span>\n<span class="token keyword">import</span> <span class="token string">&#39;nprogress/nprogress.css&#39;</span> <span class="token comment">// progress bar style</span>\n\n<span class="token comment">// getToken就是从cookie中获取token</span>\n<span class="token comment">// 如果登录了，是有token，如果没有登录，就没有token</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> getToken <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/utils/auth&#39;</span> <span class="token comment">// get token from cookie</span>\n<span class="token comment">// 得到页面中的title</span>\n<span class="token keyword">import</span> getPageTitle <span class="token keyword">from</span> <span class="token string">&#39;@/utils/get-page-title&#39;</span>\n\n<span class="token comment">// 配置NProgress</span>\nNProgress<span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">showSpinner</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// NProgress Configuration</span>\n\n<span class="token comment">// whiteList是白名单   不需要登录，就可以直接访问</span>\n<span class="token keyword">const</span> whiteList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;/auth-redirect&#39;</span><span class="token punctuation">]</span> <span class="token comment">// no redirect whitelist</span>\n\n<span class="token comment">// 全局前置路由守卫</span>\n<span class="token comment">// 核心代码都是在守卫中</span>\nrouter<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n	<span class="token operator">...</span><span class="token punctuation">.</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n\n<span class="token comment">// 全局后置路由守卫</span>\nrouter<span class="token punctuation">.</span><span class="token function">afterEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 关闭进度条</span>\n  NProgress<span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>核心-前置路由, 如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 全局前置路由守卫</span>\n<span class="token comment">// 核心代码都是在守卫中</span>\nrouter<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 开启进度条</span>\n  NProgress<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n  <span class="token comment">// 给页面的title赋值</span>\n  document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token function">getPageTitle</span><span class="token punctuation">(</span>to<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>title<span class="token punctuation">)</span>\n\n  <span class="token comment">// 从cookie中获取token 如果有token表示登录了</span>\n  <span class="token keyword">const</span> hasToken <span class="token operator">=</span> <span class="token function">getToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>hasToken<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 有token，说明已经登录了</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>to<span class="token punctuation">.</span>path <span class="token operator">===</span> <span class="token string">&#39;/login&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 已经登录了，你又去登录，放行到后面首页面</span>\n      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token comment">// 关闭进度条</span>\n      NProgress<span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 已经登录了，去其它页面</span>\n      <span class="token comment">// store.getters.roles得到vuex中的角色</span>\n      <span class="token comment">// 如果登录了，我们会调用一个接口，去拿用户信息，在用户信息中，有当前用户的角色</span>\n      <span class="token comment">// 点击登录，先发一个登录请求，服务器响应一个token，前端把token存储到cookie</span>\n      <span class="token comment">// 紧接着发第二个请求，是用来获取用户信息的，前端把用户信息存储到了vuex中，用户信息中有一个角色</span>\n      <span class="token comment">// 也就是说，在vuex中是可以获取角色的  通过store.getters.roles</span>\n      <span class="token comment">// store.getters.roles.length &gt; 0 表示vuex是有角色</span>\n      <span class="token keyword">const</span> hasRoles <span class="token operator">=</span> store<span class="token punctuation">.</span>getters<span class="token punctuation">.</span>roles <span class="token operator">&amp;&amp;</span> store<span class="token punctuation">.</span>getters<span class="token punctuation">.</span>roles<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>hasRoles<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 从vuex中获取角色，直接放行</span>\n        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        <span class="token comment">// else表示vuex中没有角色  当你又去刷新浏览器时，vuex中就没有角色，vuex中的数据也是存储在内存</span>\n        <span class="token keyword">try</span> <span class="token punctuation">{</span>\n          <span class="token comment">// get user info</span>\n          <span class="token comment">// note: roles must be a object array! such as: [&#39;admin&#39;] or ,[&#39;developer&#39;,&#39;editor&#39;]</span>\n          <span class="token comment">// store.dispatch(&#39;user/getInfo&#39;)  重新获取用户信息   肯定是在vuex中发送ajax请求</span>\n          <span class="token comment">// roles 表示用户信息，用户信息中包含用户角色</span>\n          <span class="token keyword">const</span> <span class="token punctuation">{</span> roles <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">&#39;user/getInfo&#39;</span><span class="token punctuation">)</span>\n\n          <span class="token comment">// generate accessible routes map based on roles</span>\n          <span class="token comment">// dispatch(&#39;permission/generateRoutes&#39;, roles)  根据用户角色，生成路由规则</span>\n          <span class="token comment">// 至于怎么生成，不要管，明天才会看如何生成路由规则的代码</span>\n          <span class="token keyword">const</span> accessRoutes <span class="token operator">=</span> <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">&#39;permission/generateRoutes&#39;</span><span class="token punctuation">,</span> roles<span class="token punctuation">)</span>\n\n          <span class="token comment">// console.log(&quot;accessRoutes&quot;, accessRoutes);</span>\n\n          <span class="token comment">// dynamically add accessible routes</span>\n          <span class="token comment">// 一个路由器中，可以有很多的规则，计算了当前用户角色有18个规则</span>\n          <span class="token comment">// 利用addRoutes，把这18个规则，添加到路由器</span>\n          router<span class="token punctuation">.</span><span class="token function">addRoutes</span><span class="token punctuation">(</span>accessRoutes<span class="token punctuation">)</span>\n\n          <span class="token comment">// hack method to ensure that addRoutes is complete</span>\n          <span class="token comment">// set the replace: true, so the navigation will not leave a history record</span>\n          <span class="token comment">// 上面已经把规则添加到路由器中，放行，此时，你就可以看到，你有权限看到的页面了</span>\n          <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token operator">...</span>to<span class="token punctuation">,</span> <span class="token literal-property property">replace</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token comment">// remove token and go to login page to re-login</span>\n          <span class="token comment">// 如果在生成规则时，出问题了</span>\n          <span class="token comment">// store.dispatch(&#39;user/resetToken&#39;)  清除token</span>\n          <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">&#39;user/resetToken&#39;</span><span class="token punctuation">)</span>\n          Message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error <span class="token operator">||</span> <span class="token string">&#39;Has Error&#39;</span><span class="token punctuation">)</span>\n          <span class="token comment">// 重新回到登录页面</span>\n          <span class="token function">next</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/login?redirect=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>to<span class="token punctuation">.</span>path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n          NProgress<span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 没有token</span>\n    <span class="token comment">// 没有token看一下，你访问的路径有没有在白名单中</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>whiteList<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>to<span class="token punctuation">.</span>path<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 如果在白名单中，就放行</span>\n      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 如果没有在白名单中，表示你访问的路由规则，需要登录 </span>\n      <span class="token comment">// 需要登录，放行到登录页面</span>\n      <span class="token function">next</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/login?redirect=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>to<span class="token punctuation">.</span>path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n      <span class="token comment">// 关闭进度条</span>\n      NProgress<span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>==<strong>主要分析图如下</strong>==</p><p><img src="' + _imports_4 + '" alt="image-20231201223949725"></p><h3 id="_5-网络请求" tabindex="-1"><a class="header-anchor" href="#_5-网络请求" aria-hidden="true">#</a> 5, 网络请求</h3><p>登录成功后，从network面板中，看到了发出了三个请求：</p><p>看登录接口，如下：</p><p><img src="' + _imports_5 + '" alt="image-20231201224455869"></p><p>登录成功，后token，本项目是存储在cookie中，如下：</p><h3 id="_6-vuex" tabindex="-1"><a class="header-anchor" href="#_6-vuex" aria-hidden="true">#</a> 6, Vuex</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> Vuex <span class="token keyword">from</span> <span class="token string">&#39;vuex&#39;</span>\n\n<span class="token comment">// 导入getters</span>\n<span class="token keyword">import</span> getters <span class="token keyword">from</span> <span class="token string">&#39;./getters&#39;</span>\n\n<span class="token comment">// 由于vuex是一个插件， 你需要use</span>\nVue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Vuex<span class="token punctuation">)</span>\n\n<span class="token comment">// 加载modules文件夹下面所有以.js结尾的模块</span>\n<span class="token keyword">const</span> modulesFiles <span class="token operator">=</span> require<span class="token punctuation">.</span><span class="token function">context</span><span class="token punctuation">(</span><span class="token string">&#39;./modules&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span>\n\n<span class="token comment">// you do not need `import app from &#39;./modules/app&#39;`</span>\n<span class="token comment">// it will auto require all vuex module from modules file</span>\n\n<span class="token comment">// 注册模块</span>\n<span class="token keyword">const</span> modules <span class="token operator">=</span> modulesFiles<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">modules<span class="token punctuation">,</span> modulePath</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token comment">// set &#39;./app.js&#39; =&gt; &#39;app&#39;</span>\n    <span class="token keyword">const</span> moduleName <span class="token operator">=</span> modulePath<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\.\\/(.*)\\.\\w+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;$1&#39;</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token function">modulesFiles</span><span class="token punctuation">(</span>modulePath<span class="token punctuation">)</span>\n    modules<span class="token punctuation">[</span>moduleName<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">.</span>default\n    <span class="token keyword">return</span> modules\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    modules<span class="token punctuation">,</span>\n    getters\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> store\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-整合页面路由" tabindex="-1"><a class="header-anchor" href="#_7-整合页面路由" aria-hidden="true">#</a> 7, 整合页面路由</h3><p>把默认的规则可以抽离到一个备份文件中，如下：</p><p>bak.js</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 备份路由</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_8-前端权限设计总结" tabindex="-1"><a class="header-anchor" href="#_8-前端权限设计总结" aria-hidden="true">#</a> 8, 前端权限设计总结</h3><p>不同的公司，权限设计是不一样的，从前后端协作的角度说，权限设计大体上有两种思路，第一种是单纯由前端来实现，第二种由后端来实现。后端实现，我们后面会讲一个案例。由前端来设计管理系统的权限，开发成本相对较低。</p><p>中小型公司：前端做权限设计，本开源项目主要前端做的权限设计。</p><p>大公司：后端做权限设计，后面再讲一下后端的权限设计。</p><p><strong>前端实现思路</strong>：前端用token调接口换取当前用户信息，再使用用户的角色信息动态生成有权访问的菜单和路由。核心知识：</p><ul><li>vue-router 中的全局守卫、路由元信息</li><li>router.addRoutes() 动态添加路由匹配规则</li><li>使用 vuex 管理用户信息、路由菜单信息等</li></ul><p><strong>核心逻辑</strong>：</p><ul><li>全局路由守卫，用于拦截用户对系统内部页面的访问</li><li>当权限路由动态生成后，才能进入系统内部渲染 Menu 菜单</li><li>在登录流程中，先用 token 调接口获取用户信息，再根据用户信息生成权限路由，并保存在状态管理工具中去，后面就可以正常访问权限路由了。</li><li>当用户在系统内部刷新页面时，这就是刷新流程。当我们刷新时，Vuex中的用户信息和权限菜单信息会丢失。所以，在刷新流程中，会重新使用 token 换取用户信息，再使用用户角色来生成权限路由。</li></ul><p>路由核心代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">&#39;./router&#39;</span> <span class="token comment">// 导入路由实例</span>\n<span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">&#39;./store&#39;</span> <span class="token comment">// 导入store实例</span>\n\n<span class="token keyword">import</span> <span class="token punctuation">{</span>\n    Message\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;element-ui&#39;</span> <span class="token comment">// 引入消息提示组件</span>\n<span class="token keyword">import</span> NProgress <span class="token keyword">from</span> <span class="token string">&#39;nprogress&#39;</span> <span class="token comment">// 进度条</span>\n<span class="token keyword">import</span> <span class="token string">&#39;nprogress/nprogress.css&#39;</span> <span class="token comment">// 进度条样式文件</span>\nNProgress<span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">showSpinner</span><span class="token operator">:</span> <span class="token boolean">false</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 进度条配置（参见官方仓库）</span>\n\n<span class="token keyword">import</span> <span class="token punctuation">{</span>\n    getToken\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/utils/auth&#39;</span> <span class="token comment">// 工具方法，用于从cookie中取出token</span>\n<span class="token keyword">import</span> getPageTitle <span class="token keyword">from</span> <span class="token string">&#39;@/utils/get-page-title&#39;</span> <span class="token comment">// 根据页面动态改变document.title</span>\n\n<span class="token keyword">const</span> whiteList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;/auth-redirect&#39;</span><span class="token punctuation">]</span> <span class="token comment">// 无须登录就可以访问的页面列表</span>\n\n<span class="token comment">// 添加全局导航守卫的钩子 router.beforeEach(function(to,from,next))</span>\n<span class="token comment">// 这里的async是什么意思？在这个函数中，要使用await把Promise变成同步代码</span>\n<span class="token comment">// 知识点：async/await 是Promise同步语法的语法糖</span>\n<span class="token comment">// 这个路由钩子，每次访问路由或切换路由时，都会执行，相当于一个“保安”</span>\nrouter<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    NProgress<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 打开进度条</span>\n    document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token function">getPageTitle</span><span class="token punctuation">(</span>to<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>title<span class="token punctuation">)</span> <span class="token comment">// 使用元信息中title字段设置标题</span>\n    <span class="token comment">// 判断当前用户是否登录了，Y-有token，N-没有token</span>\n    <span class="token keyword">const</span> hasToken <span class="token operator">=</span> <span class="token function">getToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token comment">// Y-有token的时候</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>hasToken<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 访问登录页</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>to<span class="token punctuation">.</span>path <span class="token operator">===</span> <span class="token string">&#39;/login&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">// 如果用户已登录，如果你访问/login，直接重定向到系统内部的首页</span>\n            <span class="token comment">// 也就是说，如果已登录，是不能再访问 /login页面了</span>\n            <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n            NProgress<span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// 访问非登录页面</span>\n            <span class="token comment">// 判断当前用户是否有“角色”信息（这个角色信息是后端返回的）</span>\n            <span class="token comment">// 用户信息（包括角色信息）放在Vuex中的</span>\n            <span class="token keyword">const</span> hasRoles <span class="token operator">=</span> store<span class="token punctuation">.</span>getters<span class="token punctuation">.</span>roles <span class="token operator">&amp;&amp;</span> store<span class="token punctuation">.</span>getters<span class="token punctuation">.</span>roles<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span>\n            <span class="token comment">// 当Vuex中有用户角色信息时</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>hasRoles<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// Vuex中有用户信息，不拦截</span>\n            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// Vuex中没有用户角色信息时</span>\n                <span class="token keyword">try</span> <span class="token punctuation">{</span>\n                    <span class="token comment">// 如果Vuex中没有用户角色信息，触发user/getInfo调接口获取用户信息</span>\n                    <span class="token comment">// 下面这行代码是同步代码，这个roles是后端接口返回的用户角色字段（数组）</span>\n                    <span class="token comment">// 强调一下数据类型：roles是后端返回的，必须是个数组，比如 [&#39;admin&#39;,...]</span>\n                    <span class="token keyword">const</span> <span class="token punctuation">{</span>\n                        roles\n                    <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">&#39;user/getInfo&#39;</span><span class="token punctuation">)</span>\n\n                    <span class="token comment">// 根据roles这个后端返回的角色信息，动态生成当前用户有权访问的路由规则</span>\n                    <span class="token comment">// 下面这行代码也是同步代码，返回的是当前用户可以访问的路由规则</span>\n                    <span class="token keyword">const</span> accessRoutes <span class="token operator">=</span> <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">&#39;permission/generateRoutes&#39;</span><span class="token punctuation">,</span> roles<span class="token punctuation">)</span>\n\n                    <span class="token comment">// 手动向路由实例的 routes选项 中添加路由规则</span>\n                    router<span class="token punctuation">.</span><span class="token function">addRoutes</span><span class="token punctuation">(</span>accessRoutes<span class="token punctuation">)</span>\n                    <span class="token comment">// accessRoutes.forEach(route=&gt;router.addRoute(route))</span>\n                    <span class="token comment">// 一个重要问题：那些有权限的路由规则是如何添加到routes中呢？</span>\n                    <span class="token comment">// 到这里，我们就已经有了答案。</span>\n\n                    <span class="token comment">// 权限路由规则已经加入到了 routes选项中，你通过了，去访问吧</span>\n                    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                        <span class="token operator">...</span>to<span class="token punctuation">,</span>\n                        <span class="token literal-property property">replace</span><span class="token operator">:</span> <span class="token boolean">true</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token comment">// 向后端获取用户信息，要使用token换取。token有可能是假的、或者是过期的？</span>\n                    <span class="token comment">// 如果获取用户信息、生成路由规则报错，就重置token，让用户重新登录</span>\n                    <span class="token keyword">await</span> store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">&#39;user/resetToken&#39;</span><span class="token punctuation">)</span>\n                    Message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error <span class="token operator">||</span> <span class="token string">&#39;Has Error&#39;</span><span class="token punctuation">)</span>\n                    <span class="token function">next</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/login?redirect=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>to<span class="token punctuation">.</span>path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n                    NProgress<span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        <span class="token comment">// N-没有token时</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>whiteList<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>to<span class="token punctuation">.</span>path<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">// 没有登录，并且访问的是白名单中的页面，不拦截</span>\n            <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            <span class="token comment">// 没有登录？访问非白名单，拦截，去登录吧</span>\n            <span class="token function">next</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/login?redirect=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>to<span class="token punctuation">.</span>path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n            NProgress<span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">// router.beforeResolve((to,from,next))</span>\nrouter<span class="token punctuation">.</span><span class="token function">afterEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    NProgress<span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 关闭加载页面的进度条</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Vuex中的user模块中核心逻辑：</p><ul><li>主要是登录逻辑、获取用户信息、退出登录的逻辑，把token、用户信息都放在状态管理中存储。</li><li>token不仅在保存在Vuex中，还要保存在了 cookie 中。</li></ul><p>Vuex 核心代码</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 引入调接口的方法</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>\n    login<span class="token punctuation">,</span>\n    logout<span class="token punctuation">,</span>\n    getInfo\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/api/user&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>\n    getToken<span class="token punctuation">,</span>\n    setToken<span class="token punctuation">,</span>\n    removeToken\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/utils/auth&#39;</span>\n<span class="token keyword">import</span> router<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    resetRouter\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/router&#39;</span>\n\n<span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">token</span><span class="token operator">:</span> <span class="token function">getToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">avatar</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">introduction</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">roles</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">messageList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">userinfo</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> mutations <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token function-variable function">SET_TOKEN</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> token</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        state<span class="token punctuation">.</span>token <span class="token operator">=</span> token\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">SET_INTRODUCTION</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> introduction</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        state<span class="token punctuation">.</span>introduction <span class="token operator">=</span> introduction\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">SET_NAME</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> name</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        state<span class="token punctuation">.</span>name <span class="token operator">=</span> name\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">SET_AVATAR</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> avatar</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        state<span class="token punctuation">.</span>avatar <span class="token operator">=</span> avatar\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">SET_ROLES</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> roles</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        state<span class="token punctuation">.</span>roles <span class="token operator">=</span> roles\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">SET_MESSAGE</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> list</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        state<span class="token punctuation">.</span>messageList <span class="token operator">=</span> list\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">SET_USERINFO</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> userinfo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        state<span class="token punctuation">.</span>userinfo <span class="token operator">=</span> userinfo\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> actions <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 登录 await store.dispatch(&#39;user/login&#39;)</span>\n    <span class="token comment">// 调登录接口：接收上游传递过来的表单数据，调login接口</span>\n    <span class="token function">login</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>\n        commit\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> payload</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// const { username, password } = payload</span>\n        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n            <span class="token comment">// 开始真正调接口</span>\n            <span class="token function">login</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                <span class="token keyword">const</span> <span class="token punctuation">{</span>\n                    token\n                <span class="token punctuation">}</span> <span class="token operator">=</span> data\n                <span class="token comment">// 把login登录成功返回的token放进vuex中</span>\n                <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;SET_TOKEN&#39;</span><span class="token punctuation">,</span> token<span class="token punctuation">)</span>\n                <span class="token comment">// 把login登录成功返回的token放进Cookie中</span>\n                <span class="token function">setToken</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span>\n                <span class="token comment">// 给.then()使用</span>\n                <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n    <span class="token comment">// 获取用户信息（roles）</span>\n    <span class="token comment">// 这个接口在什么时候调用？当有token但没有用户信息时调用。</span>\n    <span class="token comment">// 路由守卫：在登录流程中，在刷新流程中。</span>\n    <span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>\n        commit<span class="token punctuation">,</span>\n        state\n    <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n            <span class="token comment">// 真正调接口获取用户信息</span>\n            <span class="token comment">// 注意：这个作者是用query参数的方式向后端传递token的</span>\n            <span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                <span class="token keyword">const</span> <span class="token punctuation">{</span>\n                    userinfo<span class="token punctuation">,</span>\n                    message_list\n                <span class="token punctuation">}</span> <span class="token operator">=</span> data\n                <span class="token comment">// 如果data不存在，这说明token要么是假的，要么过期了。</span>\n                <span class="token comment">// 注意：为了配合这个异常，当拿不到用户信息时，希望data是null/undefined</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>userinfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;Verification failed, please Login again.&#39;</span><span class="token punctuation">)</span>\n                <span class="token punctuation">}</span>\n                <span class="token comment">// 在这里肯定拿到了用户信息</span>\n                <span class="token keyword">const</span> <span class="token punctuation">{</span>\n                    roles<span class="token punctuation">,</span>\n                    name<span class="token punctuation">,</span>\n                    avatar<span class="token punctuation">,</span>\n                    introduction\n                <span class="token punctuation">}</span> <span class="token operator">=</span> userinfo\n                <span class="token comment">// 注意：roles必须是一个“非空数组”，像这样 [&#39;admin&#39;]</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>roles <span class="token operator">||</span> roles<span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;getInfo: roles must be a non-null array!&#39;</span><span class="token punctuation">)</span>\n                <span class="token punctuation">}</span>\n                <span class="token comment">// 把用户信息都放进vuex中（用户不要放进Cookie或localStoraget）</span>\n                <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;SET_ROLES&#39;</span><span class="token punctuation">,</span> roles<span class="token punctuation">)</span>\n                <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;SET_NAME&#39;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span>\n                <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;SET_AVATAR&#39;</span><span class="token punctuation">,</span> avatar<span class="token punctuation">)</span>\n                <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;SET_INTRODUCTION&#39;</span><span class="token punctuation">,</span> introduction<span class="token punctuation">)</span>\n                <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;SET_MESSAGE&#39;</span><span class="token punctuation">,</span> message_list<span class="token punctuation">)</span>\n                <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;SET_USERINFO&#39;</span><span class="token punctuation">,</span> userinfo<span class="token punctuation">)</span>\n                <span class="token comment">// 给.then()使用</span>\n                <span class="token function">resolve</span><span class="token punctuation">(</span>userinfo<span class="token punctuation">)</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n    <span class="token comment">// 退出登录：清除token、清除角色信息、重置路由、清除各种缓存</span>\n    <span class="token function">logout</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>\n        commit<span class="token punctuation">,</span>\n        state<span class="token punctuation">,</span>\n        dispatch\n    <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n\n            <span class="token comment">// 把vuex中的token和角色信息清除</span>\n            <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;SET_TOKEN&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>\n            <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;SET_ROLES&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n            <span class="token comment">// 把Cookie中的token清除</span>\n            <span class="token function">removeToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n            <span class="token comment">// 重置路由（*）</span>\n            <span class="token function">resetRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n            <span class="token comment">// reset visited views and cached views</span>\n            <span class="token comment">// 把vuex中tagViews、缓存的视图都清除。</span>\n            <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">&#39;tagsView/delAllViews&#39;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n                <span class="token literal-property property">root</span><span class="token operator">:</span> <span class="token boolean">true</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">namespaced</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    state<span class="token punctuation">,</span>\n    mutations<span class="token punctuation">,</span>\n    actions\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Vuex中的pemission模块中核心逻辑：</p><ul><li>根据用户信息生成当前用户有权访问的路由，权限路由数据也保存在Vuex中，用于Layout布局中 Menu 菜单的渲染。</li><li>动态生成路由菜单的大体逻辑是：用后端返回的用户角色信息，与路由规则中的 meta 元信息进行比照，符合权限配置的就是有权访问的路由。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>\n    asyncRoutes<span class="token punctuation">,</span>\n    constantRoutes\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/router&#39;</span>\n\n<span class="token comment">// 使用roles:Array&lt;string&gt; 和 route:{path,component,meta:{roles:[]}}</span>\n<span class="token comment">// 判断当前用户能不能访问当前路由规则，返回布尔值。</span>\n<span class="token keyword">function</span> <span class="token function">hasPermission</span><span class="token punctuation">(</span><span class="token parameter">roles<span class="token punctuation">,</span> route</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>route<span class="token punctuation">.</span>meta <span class="token operator">&amp;&amp;</span> route<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>roles<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 如果路由规则上有meta，并且meta上有roles这个自定义字段，说明这条路由是有权限的，要进行过滤权限。</span>\n        <span class="token keyword">return</span> roles<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token parameter">role</span> <span class="token operator">=&gt;</span> route<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>roles<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>role<span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 如果路由规则上没有meta这个属性，或者meta上没有roles这个自定义字段，任何用户都可以访问。</span>\n        <span class="token keyword">return</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 使用roles:Array&lt;string&gt;, 和 routes:Array&lt;route&gt; </span>\n<span class="token comment">// 生成当前用户可访问的路由规则。</span>\n<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">filterAsyncRoutes</span><span class="token punctuation">(</span><span class="token parameter">routes<span class="token punctuation">,</span> roles</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n    routes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">route</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 深复制（深拷贝）仅对那些比较简单对象进行深拷贝</span>\n        <span class="token keyword">const</span> tmp <span class="token operator">=</span> <span class="token punctuation">{</span>\n            <span class="token operator">...</span>route\n        <span class="token punctuation">}</span>\n        <span class="token comment">// hasPermission([&#39;admin&#39;, &#39;editor&#39;], {path,component,meta:{roles:[&#39;editor&#39;]}}): boolean</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasPermission</span><span class="token punctuation">(</span>roles<span class="token punctuation">,</span> tmp<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">// 有没有嵌套视图，如果进行递归</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>tmp<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                tmp<span class="token punctuation">.</span>children <span class="token operator">=</span> <span class="token function">filterAsyncRoutes</span><span class="token punctuation">(</span>tmp<span class="token punctuation">.</span>children<span class="token punctuation">,</span> roles<span class="token punctuation">)</span>\n            <span class="token punctuation">}</span>\n            res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">return</span> res\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">routes</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 静态路由规则 + 当前用户可访问的动态路由规则</span>\n    <span class="token literal-property property">addRoutes</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// 只是当前用户可访问的动态路由规则</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> mutations <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token function-variable function">SET_ROUTES</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> routes</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        state<span class="token punctuation">.</span>addRoutes <span class="token operator">=</span> routes\n        state<span class="token punctuation">.</span>routes <span class="token operator">=</span> constantRoutes<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>routes<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> actions <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 用于生成当前用户可访问的路由规则</span>\n    <span class="token comment">// roles = [&#39;admin&#39;, &#39;editor&#39;]</span>\n    <span class="token function">generateRoutes</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>\n        commit\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> roles</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n            <span class="token keyword">let</span> accessedRoutes\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>roles<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;admin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token comment">// admin用户</span>\n                <span class="token comment">// 工作经验：工作中的管理系统，admin一般只用看到功能性页面，不需要看那些业务性页面。</span>\n                <span class="token comment">// accessedRoutes = asyncRoutes || []</span>\n                accessedRoutes <span class="token operator">=</span> <span class="token function">filterAsyncRoutes</span><span class="token punctuation">(</span>asyncRoutes<span class="token punctuation">,</span> roles<span class="token punctuation">)</span>\n            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n                <span class="token comment">// 非admin用户</span>\n                accessedRoutes <span class="token operator">=</span> <span class="token function">filterAsyncRoutes</span><span class="token punctuation">(</span>asyncRoutes<span class="token punctuation">,</span> roles<span class="token punctuation">)</span>\n            <span class="token punctuation">}</span>\n            <span class="token comment">// 把当前用户可访问的路由规则放在vuex中</span>\n            <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;SET_ROUTES&#39;</span><span class="token punctuation">,</span> accessedRoutes<span class="token punctuation">)</span>\n            <span class="token comment">// 把当前用户可访问的路由规则给到.then()</span>\n            <span class="token function">resolve</span><span class="token punctuation">(</span>accessedRoutes<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">namespaced</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    state<span class="token punctuation">,</span>\n    mutations<span class="token punctuation">,</span>\n    actions\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>路由规则的数据结构</p><ul><li>路由配置比较常规，重点是 asyncRoutes 中的 meta 元信息，你配置怎样的 roles ，就会得到怎样的动态路由菜单。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> Router <span class="token keyword">from</span> <span class="token string">&#39;vue-router&#39;</span>\nVue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Router<span class="token punctuation">)</span>\n\n<span class="token keyword">import</span> Layout <span class="token keyword">from</span> <span class="token string">&#39;@/layout&#39;</span> <span class="token comment">/* 引入布局组件 */</span>\n<span class="token comment">/* 静态路由规则，所有用户都能访问的页面（没有权限的页面） */</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> constantRoutes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/redirect&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">component</span><span class="token operator">:</span> Layout<span class="token punctuation">,</span>\n        <span class="token literal-property property">hidden</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n            <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/redirect/:path(.*)&#39;</span><span class="token punctuation">,</span>\n            <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/redirect/index&#39;</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/login/index&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">hidden</span><span class="token operator">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/auth-redirect&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/login/auth-redirect&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">hidden</span><span class="token operator">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">component</span><span class="token operator">:</span> Layout<span class="token punctuation">,</span>\n        <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token string">&#39;/dashboard&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n            <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;dashboard&#39;</span><span class="token punctuation">,</span>\n            <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/dashboard/index&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Dashboard&#39;</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;首页大屏&#39;</span><span class="token punctuation">,</span>\n                <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;dashboard&#39;</span><span class="token punctuation">,</span>\n                <span class="token literal-property property">affix</span><span class="token operator">:</span> <span class="token boolean">true</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n\n<span class="token comment">/* 动态路由规则，要根据当前登录的用户角色进行配置（有权限的页面）*/</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> asyncRoutes <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token comment">// 商品管理模块</span>\n    <span class="token punctuation">{</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/good&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">component</span><span class="token operator">:</span> Layout<span class="token punctuation">,</span>\n        <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;商品管理&#39;</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;el-icon-goods&#39;</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">roles</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;admin&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;editor&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;shop&#39;</span><span class="token punctuation">]</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n                <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;list&#39;</span><span class="token punctuation">,</span>\n                <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/good/good-list&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;GoodList&#39;</span><span class="token punctuation">,</span>\n                <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;商品列表&#39;</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;el-icon-sugar&#39;</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">noCache</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">roles</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;admin&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;editor&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;shop&#39;</span><span class="token punctuation">]</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span>\n                <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;add&#39;</span><span class="token punctuation">,</span>\n                <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/good/good-form&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token literal-property property">hidden</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;GoodAdd&#39;</span><span class="token punctuation">,</span>\n                <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                    <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;el-icon-sugar&#39;</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">noCache</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">roles</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;editor&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;shop&#39;</span><span class="token punctuation">]</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span>\n                <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;edit/:id&#39;</span><span class="token punctuation">,</span>\n                <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/good/good-form&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token literal-property property">hidden</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;GoodEdit&#39;</span><span class="token punctuation">,</span>\n                <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;商品编辑&#39;</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;el-icon-sugar&#39;</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">noCache</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">roles</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;editor&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;shop&#39;</span><span class="token punctuation">]</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// 系统管理模块</span>\n    <span class="token punctuation">{</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/system&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">component</span><span class="token operator">:</span> Layout<span class="token punctuation">,</span>\n        <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;系统管理&#39;</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;el-icon-goods&#39;</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">roles</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;admin&#39;</span><span class="token punctuation">]</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n                <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;user&#39;</span><span class="token punctuation">,</span>\n                <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/system/user-manage&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;UserManage&#39;</span><span class="token punctuation">,</span>\n                <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;用户管理&#39;</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;el-icon-sugar&#39;</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">noCache</span><span class="token operator">:</span> <span class="token boolean">false</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span>\n                <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;user2&#39;</span><span class="token punctuation">,</span>\n                <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/system/user-manage&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;GoodAdd&#39;</span><span class="token punctuation">,</span>\n                <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;占位页面&#39;</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;el-icon-sugar&#39;</span><span class="token punctuation">,</span>\n                    <span class="token literal-property property">noCache</span><span class="token operator">:</span> <span class="token boolean">false</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// 重定向规则</span>\n    <span class="token punctuation">{</span>\n        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;*&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token string">&#39;/404&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">hidden</span><span class="token operator">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n\n<span class="token comment">// 封装“创建router”的方法</span>\n<span class="token keyword">function</span> <span class="token function">createRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Router</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&#39;hash&#39;</span><span class="token punctuation">,</span>\n        <span class="token comment">// 路由规则，在这里只考虑了静态路由规则</span>\n        <span class="token comment">// 思考：那么那些动态路由规则是如何起作用的？（路由守卫）</span>\n        <span class="token literal-property property">routes</span><span class="token operator">:</span> constantRoutes<span class="token punctuation">,</span>\n        <span class="token function-variable function">scrollBehavior</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n            <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">createRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token comment">// Detail see: https://github.com/vuejs/vue-router/issues/1234#issuecomment-357941465</span>\n<span class="token comment">// 在什么情况下需要重置所有的路由规则？当用户角色发生变化时。</span>\n<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">resetRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 创建一个新的router，进行路由规则重置</span>\n    <span class="token keyword">const</span> newRouter <span class="token operator">=</span> <span class="token function">createRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    router<span class="token punctuation">.</span>matcher <span class="token operator">=</span> newRouter<span class="token punctuation">.</span>matcher\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 为什么路由守卫的代码没有写在这里？</span>\n<span class="token comment">// 因为它太重要，所以封装到src根目录里 permission.js。</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> router\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>面试题：你做的管理系统，你是如何处理权限的问题的？</strong></p><p>答：我们之前的公司中小公司，做的项目，大概有30个左右的模块，所以权限这一块，就前端去处理的。我们处理的流程大致是这样的：前端登录换取token，在导航守卫中，实现权限设计，首先判断有没有token，没有token，直接跳到登录页面。有token会进一步判断vuex中有没有用户信息。如果没有用户信息，拿着token，调用接口获取用户信息，用户信息中保存了最重要的字段，就是角色，有了角色后，通过算法生成当前用户可访问的动态路由规则（算法大至是使用后端返回的角色和路由元信息中的角色进行对比，得到可以访问的动态路由规则），有了动态访问的路由规则，再通过addRoutes方法，把得到的动态访问的路由规则添加到路由系统。</p><p><strong>面试题：前端做权限这一块，你感觉有什么不足？</strong></p><p>答：如果要修改权限，必须要去修改前端代码，重新打包，重新上线。前端处理权限，只适合中小项目（模块少，角色少），一般中小公司权限处理都是前端实现。</p><p><strong>面试题：管理系统左侧的菜单是什么时候生成的？</strong></p><p>答：在登录流程中，登录成功后，得到的token，根据token获取用户信息，用户信息中包含角色，根据角色生成可访问的动态路由规则（accessRoutes），把路由规则，也保存到了Vuex中，跳到系统内部页面，渲染Layout组件，在渲染Layout组件时，会渲染菜单。在刷新流程中，使用token换取用户信息，生成可访问的动态路由规则，保存到Vuex中，再次渲染Layout时，生成左侧菜单。</p><h3 id="_9-端权限设计总结" tabindex="-1"><a class="header-anchor" href="#_9-端权限设计总结" aria-hidden="true">#</a> 9, 端权限设计总结</h3><p>后端处理权限，一般在管理系统中，都有两个模块，用户管理，角色管理。</p><p><strong>后端实现思路</strong>：前端用token换取用户信息，用户信息中就已经包含了与路由渲染相关的菜单字段。后端可以在数据库中手动配置菜单数据，还可以开发专门的权限管理模块来动态管理菜单数据。如果要动态地通过增删改查来管理菜单数据，常常得有角色管理、用户管理和菜单管理等功能。</p><h3 id="_10-联调登录接口" tabindex="-1"><a class="header-anchor" href="#_10-联调登录接口" aria-hidden="true">#</a> 10, 联调登录接口</h3><p>本项目，默认使用的是模拟的接口，如下：</p><div class="language-apl line-numbers-mode" data-ext="apl"><pre class="language-apl"><code>http<span class="token dfn builtin">:</span><span class="token monadic-operator operator">/</span><span class="token monadic-operator operator">/</span><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token dfn builtin">:</span><span class="token number">5000</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>我们需要联调我们自己服务器的接口，你需要关闭mock接口，如下：</p><p>在 vite.config.js</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token comment">// ! 关闭了mock模拟接口</span>\n    <span class="token comment">// 启动服务前执行的预加载函数</span>\n    <span class="token comment">// before: require(&quot;./mock/mock-server.js&quot;),</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看接口的测试, 运行开启本地的后端接口</p><p>说明127.0.0.1:5000这个服务器上没有此接口。在公司中，你调用别的写的接口时，可能产生跨域问题。解决问题：</p><ul><li>后端解决</li><li>前端配置代理解决跨域</li></ul><p>出现跨域问题（当前本项目中，后端都解决好了），如下：</p><p><img src="' + _imports_6 + '" alt="image-20231203214644525"></p><p>在 vite.config.js 中配置解决跨域问题</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 端口号</span>\n    <span class="token literal-property property">port</span><span class="token operator">:</span> port<span class="token punctuation">,</span>\n    <span class="token comment">// 是否自动打开浏览器</span>\n    <span class="token literal-property property">open</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token comment">// 错误和警告的覆盖</span>\n    <span class="token literal-property property">overlay</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">warnings</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">errors</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n    <span class="token comment">//  !配置解决跨域</span>\n    <span class="token literal-property property">Proxy</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token string-property property">&quot;/api&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">&quot;http://127.0.0.1:5000&quot;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">changeOrigin</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n    <span class="token comment">// ! 关闭了mock模拟接口</span>\n    <span class="token comment">// before: require(&quot;./mock/mock-server.js&quot;),  // 启动服务前执行的预加载函数</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置 axios 请求</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> service <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">baseURL</span><span class="token operator">:</span> baseURL<span class="token punctuation">,</span>\n  <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">5000</span><span class="token punctuation">,</span>\n  <span class="token comment">// ! 配置响应格式和请求头类型</span>\n  <span class="token literal-property property">responseType</span><span class="token operator">:</span> <span class="token string">&quot;json&quot;</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token string-property property">&quot;content-type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;application/x-www-form-urlencoded&quot;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_11-总结" tabindex="-1"><a class="header-anchor" href="#_11-总结" aria-hidden="true">#</a> 11, 总结</h3><p>复习vue-element-admin的权限设计：</p><ul><li>是基于前端的权限设计，处理流程大致是这样的：前端登录成功，得到token，把token存储到了cookie中，登录成功，就会跳转，跳转的话，就会走到前置守卫中，在前置守卫中，实现权限设计，首先判断有没有token，没有token，判断你访问的路由是否大白名单中，如果在的话，可以访问，如果不在的话，直接跳到登录页面。有token的话，会进一步判断vuex中有没有用户信息（角色），如果没有用户信息（角色），就带着token，调用接口获取用户信息，用户信息中最重要的字段就是角色，就把用户信息存储到vuex中。有了角色，通过算法生成当前角色可以访问的路由规则们，把这些计算后的路由规则添加到路由系统中。 后面你又去访问别的路由，此时vuex中就有用户信息（角色），有这个角色你就可以访问了。</li></ul><p>前端做权限设计，有什么不足？</p><ul><li>如果要修改权限，必须要去修改前端代码，重新打包，重新上线。前端处理权限，只适合中小项目（模块少，角色少），一般中小公司权限处理都是前端实现。</li></ul><p>管理系统的左侧的菜单是什么时候生成的？</p><ul><li>在登录流程中，登录成功后，得到的token，根据token获取用户信息，用户信息中包含角色，根据角色生成可访问的动态路由规则（accessRoutes），把路由规则，也保存到了Vuex中，跳到系统内部页面，渲染Layout组件，在渲染Layout组件时，会渲染菜单。在刷新流程中，使用token换取用户信息，生成可访问的动态路由规则，保存到Vuex中，再次渲染Layout时，生成左侧菜单。</li></ul><p>本项目的技术点：</p><ul><li>使用前端router.addRoutes实现动态路由权限处理。用到守卫，路由的元信息，Vuex...。</li><li>封装了v-permission实现元素级别的权限管理。</li><li>封装了</li><li>使用vue-i18n实现国际化，使用fullscreen实现全屏切换，使用elementui+vuex设置全局主题色，组件size切换。</li><li>使用echarts封装图表组件，如：折线图.....</li><li>使用clipboard封装剪切板功能，使用driver.js实现引导页，提升用户体验，使用dropzone实现元素的拖拽，使用Export2Excel实现excel导出...</li><li>封装ThemePicker拾色器，UploadImg图片上传组件，UploadExcel上传组件</li><li>对于ElementUI中的Table，Upload，Pagination等组件进行二次封装</li><li>实现中后台系统的换肤效果</li><li>.....</li></ul><p>关于项目的一些常见面试：</p><ul><li>介绍一下，你做的项目？</li><li>你写的系统，权限是如何设计？</li><li>你说一下，你项目的难点，亮点？ 业务的难点。 亮点就是使用了什么的技术解决了什么样的问题？</li><li>你这个项目的国际化是怎么做？</li><li>你封装过哪些组件？除了使用ElementUI中提供的组件，你自己封装过哪些组件？</li><li>你使用哪些图表？echarts。不使用echarts，有没有自己绘制过一些图表？ canvas/svg</li><li>你的项目中有没有使用过websocket。双向通信。</li><li>....</li></ul>', 117);
const _hoisted_118 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache) {
  return openBlock(), createElementBlock("div", null, _hoisted_118);
}
const VueAdminhoutaiguanli_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "Vue-adminhoutaiguanli.html.vue"]]);
export {
  VueAdminhoutaiguanli_html as default
};
