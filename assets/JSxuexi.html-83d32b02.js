import{_ as a,o as n,c as s,a as e}from"./app-b06c9cc1.js";const i="/bowenBlog/assets/image-20230831091901893-f1b16ed7.png",t="/bowenBlog/assets/image-20230831155711089-82991b61.png",l="/bowenBlog/assets/image-20230831160720805-40fdab6a.png",p="/bowenBlog/assets/image-20230831162948474-5e3579f8.png",o={},r=e('<hr><h1 id="一-计算机组件" tabindex="-1"><a class="header-anchor" href="#一-计算机组件" aria-hidden="true">#</a> 一，计算机组件</h1><h2 id="_1-基本概念" tabindex="-1"><a class="header-anchor" href="#_1-基本概念" aria-hidden="true">#</a> 1，基本概念</h2><p><strong>计算机组成</strong></p><p><img src="'+i+'" alt="image-20230831091901893"></p><p><strong>操作系统</strong></p><p>mac windows linux</p><p><strong>应用软件</strong></p><p><strong>编程语言</strong></p><p>Java JavaScript Go php C C# Python C++</p><p><strong>编译器和解释器</strong></p><p>js----解释器</p><p>go---编译器</p><p>低级语言和高级语言：</p><ul><li>低级编程语言 -- 计算机可以直接识别的语言</li><li>汇编语言</li></ul><h1 id="二-javascript介绍" tabindex="-1"><a class="header-anchor" href="#二-javascript介绍" aria-hidden="true">#</a> 二，JavaScript介绍</h1><hr><h2 id="_1-js介绍" tabindex="-1"><a class="header-anchor" href="#_1-js介绍" aria-hidden="true">#</a> 1，JS介绍</h2><p>脚本语言</p><p><strong>JS作用：</strong></p><ul><li>web开发</li><li>服务端开发 nodeJS</li><li>桌面程序</li><li>App</li><li>控制硬件</li><li>游戏</li></ul><p>JS组成：</p><ul><li>ECMAScript</li><li>DOM</li><li>BOM</li></ul><p>ECMAScript版本：</p><p>2015-es6</p><h2 id="_2-书写js的三种方式" tabindex="-1"><a class="header-anchor" href="#_2-书写js的三种方式" aria-hidden="true">#</a> 2，书写JS的三种方式</h2><ol><li>行内写法，目前不推荐</li><li>内部写法</li><li>外联写法</li></ol><p>总结<strong>行内写法</strong>的特点：</p><ul><li>可以将单行或少量 JS 代码写在HTML标签的事件属性中（以 on 开头的属性），如：onclick</li><li>可读性差， 在html中编写JS大量代码时，不方便阅读；</li><li>特殊情况下使用</li></ul><p>总结<strong>内部写法</strong>的特点：</p><ul><li>可以把多行JS代码写在script标签中</li><li>学习时，为了方便，直接把JS代码写在scirpt标签</li><li>推荐将JavaScript代码和编写位置放在body子元素的最后一行；</li></ul><p>最后一种写法，是外部写法，需要单独创建一个JS文件，通过script标签引入这个文件，如下：</p><p>总结<strong>外部写法</strong>的特点：</p><ul><li>需要通过script元素的src属性来引入JavaScript文件</li><li>在写项目时，通常都会使用外部写法，把JS代码放在一个单独的文件中，在页面中引入。</li><li>使用外部写法，script标签中就不能写其它代码了，写了也白了</li><li>script标签不能写成单标签</li><li>推荐将JavaScript代码和编写位置放在body子元素的最后一行</li></ul><h2 id="_3-js的输出与输入" tabindex="-1"><a class="header-anchor" href="#_3-js的输出与输入" aria-hidden="true">#</a> 3，JS的输出与输入</h2><p><img src="'+t+`" alt="image-20230831155711089"></p><h1 id="三-数据类型" tabindex="-1"><a class="header-anchor" href="#三-数据类型" aria-hidden="true">#</a> 三，数据类型</h1><hr><p>软件运行流程：</p><ol><li>打开某个程序时，先从硬盘中把程序的代码加载到内存中</li><li>CPU执行内存中的代码</li></ol><p>注意：alert() 主要用来显示消息给用户，console.log() 用来给程序员自己看运行时的消息。</p><h2 id="_1-number-数字" tabindex="-1"><a class="header-anchor" href="#_1-number-数字" aria-hidden="true">#</a> 1，number 数字</h2><p>是Number，包含整数和小数，例如：年龄、存款、尺寸、手机号等。数据类型是支持 加/减/乘/除/取余/指数 等操作。直接上代码：</p><h2 id="_2-string-字符串" tabindex="-1"><a class="header-anchor" href="#_2-string-字符串" aria-hidden="true">#</a> 2，string 字符串</h2><p>字符串，其实就是我们生活中的文本信息。例如：姓名、地址、自我介绍等。 字符串有一个特点，他必须由引号引</p><p>可以使用单引号，也可以使用双引号</p><h2 id="_3-bool-布尔" tabindex="-1"><a class="header-anchor" href="#_3-bool-布尔" aria-hidden="true">#</a> 3，bool 布尔</h2><p>布尔类型就两个值：true和false。 布尔类型对应的值只有两个，一个是ture，一个是false，</p><p><strong>配置代码片段，可以快捷生成代码</strong></p><h2 id="_4-数据类型转换" tabindex="-1"><a class="header-anchor" href="#_4-数据类型转换" aria-hidden="true">#</a> 4，数据类型转换</h2><p>把一种数据类型转化成另一个数据类型</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span><span class="token string">&#39;123&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// 转换为数字类型</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// 转换为字符串</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>type of</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Boolean</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Boolean</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Boolean</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="四-变量" tabindex="-1"><a class="header-anchor" href="#四-变量" aria-hidden="true">#</a> 四，变量</h1><h2 id="_1-什么是变量" tabindex="-1"><a class="header-anchor" href="#_1-什么是变量" aria-hidden="true">#</a> 1，什么是变量</h2><p>学习一门编程语言，编程语言主要是用于开发软件的，在一个软件中有很多数据都是动态变化的，如：</p><ol><li>比如购物车商品的数量、价格的计算等等；</li><li>比如一首歌曲播放的时间、进度条、歌词的展示等等；</li><li>比如微信聊天中消息条数、时间、语音的长度、头像、名称等等；</li><li>比如游戏中技能的冷却时间、血量、蓝量、buff时间、金币的数量等等；</li></ol><p>可以使用变量来表示一个可以变化的数据，变量，其实就是我们生活中起别名和外号，让变量名指向某个值。变量的声明和变量的赋值，如下：</p><h2 id="_2-变量的命名规范" tabindex="-1"><a class="header-anchor" href="#_2-变量的命名规范" aria-hidden="true">#</a> 2，变量的命名规范</h2><ol><li>字母 、下划线、$、数字不能在首位</li></ol><p><img src="`+l+`" alt="image-20230831160720805"></p><p>变量建议：</p><ol><li>多个单词使用驼峰命名</li><li>赋值= 两边加上一个空格</li><li>一条语句结束后加上分号；也可以不加</li><li>变量应该做到见名知意</li></ol><ul><li>https://developer.mozilla.org/zh-CN/docs/web/javascript/reference/lexical_grammar</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> father_Name <span class="token operator">=</span> <span class="token string">&#39;admin&#39;</span> <span class="token comment">// 小驼峰命名</span>

<span class="token keyword">let</span> fatherName <span class="token operator">=</span> <span class="token string">&#39;zhangsan&#39;</span> 

<span class="token comment">// 大驼峰命名</span>
<span class="token keyword">let</span> FatherName <span class="token operator">=</span> <span class="token string">&#39;li si&#39;</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-变量与内存指向关系" tabindex="-1"><a class="header-anchor" href="#_3-变量与内存指向关系" aria-hidden="true">#</a> 3，变量与内存指向关系</h2><p><img src="`+p+'" alt="image-20230831162948474"></p><p>在计算机的内存中创建一块区域保存字符串”malu&quot;，name变量名则指向这块区域。然后又再内存中创建了一块域保存字符串”wangcai&quot;，name变量名则指向”wangcai“所对应的空间，不再指向&quot;malu&quot;所对应的空间。&quot;malu&quot;所对应的内存空间，无人指向的数据会被标记为垃圾，由解释器自动化回收。</p><ul><li>无人指向的数据会被自动标记为垃圾，会被解释器标记为垃圾自动清除。</li></ul><p>在计算机的内存中创建一块区域保存字符串”malu&quot;，name变量名则指向这块区域。new_name变量名指向name变量，因为被指向的是变量名，所以自动会转指向到name变量代表的内存区域。</p><h1 id="五-深入数据类型" tabindex="-1"><a class="header-anchor" href="#五-深入数据类型" aria-hidden="true">#</a> 五，深入数据类型</h1><h2 id="_1-数据类型介绍" tabindex="-1"><a class="header-anchor" href="#_1-数据类型介绍" aria-hidden="true">#</a> 1，数据类型介绍</h2><h2 id="_2-number数据类型" tabindex="-1"><a class="header-anchor" href="#_2-number数据类型" aria-hidden="true">#</a> 2，Number数据类型</h2>',74),c=[r];function d(u,h){return n(),s("div",null,c)}const g=a(o,[["render",d],["__file","JSxuexi.html.vue"]]);export{g as default};
