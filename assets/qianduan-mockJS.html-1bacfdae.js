import { _ as _export_sfc, r as resolveComponent, o as openBlock, c as createElementBlock, a as createBaseVNode, b as createTextVNode, e as createVNode, d as createStaticVNode } from "./app-0bcd8dca.js";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<hr><h2 id="一-快速上手" tabindex="-1"><a class="header-anchor" href="#一-快速上手" aria-hidden="true">#</a> 一, 快速上手</h2><h3 id="什么是mockjs" tabindex="-1"><a class="header-anchor" href="#什么是mockjs" aria-hidden="true">#</a> 什么是mockJS?</h3><p>mock.js:是一款<strong>模拟数据生成器</strong>，可以[生成随机数](据，拦截 Ajax 请求</p><h3 id="mockjs特性" tabindex="-1"><a class="header-anchor" href="#mockjs特性" aria-hidden="true">#</a> mockJS特性</h3><ol><li>使用mockjs模拟后端接口，可随机生成所需数据，模拟对数据的增删改查</li><li>数据类型丰富，支持生成随机的文本、数字、布尔值、日期、邮箱、链接、图片、颜色等。</li><li>拦截Ajax请求不需要修改既有代码就可以拦截，返回模拟的响应数据。</li></ol><h3 id="_1-安装-mockjs" tabindex="-1"><a class="header-anchor" href="#_1-安装-mockjs" aria-hidden="true">#</a> 1, 安装 mockJS</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i mockjs\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-项目中使用" tabindex="-1"><a class="header-anchor" href="#_2-项目中使用" aria-hidden="true">#</a> 2, 项目中使用</h3><p>引入mockjs</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token string">&#39;./assets/main.css&#39;</span>\n\n<span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&#39;./App.vue&#39;</span>\n<span class="token keyword">import</span> <span class="token string">&#39;@/mockjs/index&#39;</span> <span class="token comment">// 引入mockjs</span>\n\n<span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用方法" tabindex="-1"><a class="header-anchor" href="#使用方法" aria-hidden="true">#</a> 使用方法</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Mock.mock( url, type, template)\n第一个参数 url 为请求路径，\n第二个参数 type 为请求类型 如：get、popst、delete、put 等\n第三个参数是生成的数据，作为响应数据返回。可以为对象，也可以为函数，函数需要return\n\n！！！下方是Mock.js的index文件 ！！！\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建mock文件夹, 创建index.js 文件</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 引用 Mock</span>\n<span class="token keyword">const</span> Mock <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mockjs&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> userData <span class="token operator">=</span> Mock<span class="token punctuation">.</span><span class="token function">mock</span><span class="token punctuation">(</span><span class="token string">&#39;/data/list&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 属性 list 的值是一个数组，随机生成 1 到 10 个元素</span>\n  <span class="token string-property property">&#39;list|1-10&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token comment">// 随机生成1-10个★</span>\n      <span class="token string-property property">&#39;string|1-10&#39;</span><span class="token operator">:</span> <span class="token string">&#39;★&#39;</span><span class="token punctuation">,</span>\n      <span class="token comment">// 随机生成1-100之间的任意整数</span>\n      <span class="token string-property property">&#39;number|1-100&#39;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n      <span class="token comment">// 生成一个浮点数，整数部分大于等于 1、小于等于 100，小数部分保留 1 到 10 位。</span>\n      <span class="token string-property property">&#39;floatNumber|1-100.1-10&#39;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n      <span class="token comment">// 随机生成一个布尔值，值为 true 的概率是 1/2，值为 false 的概率同样是 1/2。</span>\n      <span class="token string-property property">&#39;boolean|1&#39;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token comment">// 随机生成一个布尔值，值为 false 的概率是 2 / (2 + 5)，值为 true 的概率是 5 / (2 + 5)。</span>\n      <span class="token string-property property">&#39;bool|2-5&#39;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      <span class="token comment">// 从属性值 object 中随机选取 2-4 个属性</span>\n      <span class="token string-property property">&#39;object|2-4&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token number">310000</span><span class="token operator">:</span> <span class="token string">&#39;上海市&#39;</span><span class="token punctuation">,</span>\n        <span class="token number">320000</span><span class="token operator">:</span> <span class="token string">&#39;江苏省&#39;</span><span class="token punctuation">,</span>\n        <span class="token number">330000</span><span class="token operator">:</span> <span class="token string">&#39;浙江省&#39;</span><span class="token punctuation">,</span>\n        <span class="token number">340000</span><span class="token operator">:</span> <span class="token string">&#39;安徽省&#39;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// 通过重复属性值 array 生成一个新数组，重复次数为 2</span>\n      <span class="token string-property property">&#39;array|2&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;AMD&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;CMD&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;UMD&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token comment">// 执行函数 function，取其返回值作为最终的属性值，函数的上下文为属性 &#39;name&#39; 所在的对象。</span>\n      <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token string">&#39;哇哈哈哈哈&#39;</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">name</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>foo\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// 根据正则表达式 regexp 反向生成可以匹配它的字符串。用于生成自定义格式的字符串。</span>\n      <span class="token literal-property property">regexp</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\d{5,10}</span><span class="token regex-delimiter">/</span></span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;ok&#39;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-发送请求" tabindex="-1"><a class="header-anchor" href="#_3-发送请求" aria-hidden="true">#</a> 3, 发送请求</h3><p>在 app.vue 中测试</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      axios\n        <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/data/list&#39;</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看浏览器打印结果</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>\n    <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token property">&quot;list&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">{</span>\n                <span class="token property">&quot;string&quot;</span><span class="token operator">:</span> <span class="token string">&quot;★★★&quot;</span><span class="token punctuation">,</span>\n                <span class="token property">&quot;number&quot;</span><span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span>\n                <span class="token property">&quot;floatNumber&quot;</span><span class="token operator">:</span> <span class="token number">33.9059387669</span><span class="token punctuation">,</span>\n                <span class="token property">&quot;boolean&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                <span class="token property">&quot;bool&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n                <span class="token property">&quot;object&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                    <span class="token property">&quot;320000&quot;</span><span class="token operator">:</span> <span class="token string">&quot;江苏省&quot;</span><span class="token punctuation">,</span>\n                    <span class="token property">&quot;330000&quot;</span><span class="token operator">:</span> <span class="token string">&quot;浙江省&quot;</span><span class="token punctuation">,</span>\n                    <span class="token property">&quot;340000&quot;</span><span class="token operator">:</span> <span class="token string">&quot;安徽省&quot;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token property">&quot;array&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n                    <span class="token string">&quot;AMD&quot;</span><span class="token punctuation">,</span>\n                    <span class="token string">&quot;CMD&quot;</span><span class="token punctuation">,</span>\n                    <span class="token string">&quot;UMD&quot;</span><span class="token punctuation">,</span>\n                    <span class="token string">&quot;AMD&quot;</span><span class="token punctuation">,</span>\n                    <span class="token string">&quot;CMD&quot;</span><span class="token punctuation">,</span>\n                    <span class="token string">&quot;UMD&quot;</span>\n                <span class="token punctuation">]</span><span class="token punctuation">,</span>\n                <span class="token property">&quot;foo&quot;</span><span class="token operator">:</span> <span class="token string">&quot;哇哈哈哈哈&quot;</span><span class="token punctuation">,</span>\n                <span class="token property">&quot;regexp&quot;</span><span class="token operator">:</span> <span class="token string">&quot;062487&quot;</span><span class="token punctuation">,</span>\n                <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;哇哈哈哈哈&quot;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span>\n                <span class="token property">&quot;string&quot;</span><span class="token operator">:</span> <span class="token string">&quot;★★★★★★★★★★&quot;</span><span class="token punctuation">,</span>\n                <span class="token property">&quot;number&quot;</span><span class="token operator">:</span> <span class="token number">87</span><span class="token punctuation">,</span>\n                <span class="token property">&quot;floatNumber&quot;</span><span class="token operator">:</span> <span class="token number">22.18785</span><span class="token punctuation">,</span>\n                <span class="token property">&quot;boolean&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                <span class="token property">&quot;bool&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n                <span class="token property">&quot;object&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                    <span class="token property">&quot;320000&quot;</span><span class="token operator">:</span> <span class="token string">&quot;江苏省&quot;</span><span class="token punctuation">,</span>\n                    <span class="token property">&quot;330000&quot;</span><span class="token operator">:</span> <span class="token string">&quot;浙江省&quot;</span><span class="token punctuation">,</span>\n                    <span class="token property">&quot;340000&quot;</span><span class="token operator">:</span> <span class="token string">&quot;安徽省&quot;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token property">&quot;array&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n                    <span class="token string">&quot;AMD&quot;</span><span class="token punctuation">,</span>\n                    <span class="token string">&quot;CMD&quot;</span><span class="token punctuation">,</span>\n                    <span class="token string">&quot;UMD&quot;</span><span class="token punctuation">,</span>\n                    <span class="token string">&quot;AMD&quot;</span><span class="token punctuation">,</span>\n                    <span class="token string">&quot;CMD&quot;</span><span class="token punctuation">,</span>\n                    <span class="token string">&quot;UMD&quot;</span>\n                <span class="token punctuation">]</span><span class="token punctuation">,</span>\n                <span class="token property">&quot;foo&quot;</span><span class="token operator">:</span> <span class="token string">&quot;哇哈哈哈哈&quot;</span><span class="token punctuation">,</span>\n                <span class="token property">&quot;regexp&quot;</span><span class="token operator">:</span> <span class="token string">&quot;6962347018&quot;</span><span class="token punctuation">,</span>\n                <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;哇哈哈哈哈&quot;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span>\n                <span class="token property">&quot;string&quot;</span><span class="token operator">:</span> <span class="token string">&quot;★★★&quot;</span><span class="token punctuation">,</span>\n                <span class="token property">&quot;number&quot;</span><span class="token operator">:</span> <span class="token number">34</span><span class="token punctuation">,</span>\n                <span class="token property">&quot;floatNumber&quot;</span><span class="token operator">:</span> <span class="token number">29.4547181</span><span class="token punctuation">,</span>\n                <span class="token property">&quot;boolean&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n                <span class="token property">&quot;bool&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                <span class="token property">&quot;object&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                    <span class="token property">&quot;320000&quot;</span><span class="token operator">:</span> <span class="token string">&quot;江苏省&quot;</span><span class="token punctuation">,</span>\n                    <span class="token property">&quot;330000&quot;</span><span class="token operator">:</span> <span class="token string">&quot;浙江省&quot;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token property">&quot;array&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n                    <span class="token string">&quot;AMD&quot;</span><span class="token punctuation">,</span>\n                    <span class="token string">&quot;CMD&quot;</span><span class="token punctuation">,</span>\n                    <span class="token string">&quot;UMD&quot;</span><span class="token punctuation">,</span>\n                    <span class="token string">&quot;AMD&quot;</span><span class="token punctuation">,</span>\n                    <span class="token string">&quot;CMD&quot;</span><span class="token punctuation">,</span>\n                    <span class="token string">&quot;UMD&quot;</span>\n                <span class="token punctuation">]</span><span class="token punctuation">,</span>\n                <span class="token property">&quot;foo&quot;</span><span class="token operator">:</span> <span class="token string">&quot;哇哈哈哈哈&quot;</span><span class="token punctuation">,</span>\n                <span class="token property">&quot;regexp&quot;</span><span class="token operator">:</span> <span class="token string">&quot;24253781&quot;</span><span class="token punctuation">,</span>\n                <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;哇哈哈哈哈&quot;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n       .................... 省略\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-mock-random-的使用" tabindex="-1"><a class="header-anchor" href="#_4-mock-random-的使用" aria-hidden="true">#</a> 4, Mock.Random 的使用</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Mock.Random 是一个工具类，用于生成各种随机数据。\nMock.Random 的方法在数据模板中称为『占位符』，书写格式为 @占位符(参数) 。\n！！！ 下方是使用random生成数据的方法 ！！！\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>\n<span class="token keyword">const</span> Mock <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;mockjs&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> Random <span class="token operator">=</span> Mock<span class="token punctuation">.</span>Random  <span class="token comment">// 随机数据类</span>\n \n<span class="token keyword">export</span> <span class="token keyword">const</span> userData <span class="token operator">=</span> Mock<span class="token punctuation">.</span><span class="token function">mock</span><span class="token punctuation">(</span><span class="token string">&quot;/data/list&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;post&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 属性 list 的值是一个数组，随机生成 1 到 10 个元素</span>\n  <span class="token string-property property">&quot;list|1-10&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token comment">// 生成随机字符串 长度为 5</span>\n      <span class="token string-property property">&quot;string&quot;</span><span class="token operator">:</span> Random<span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// &quot;jPXEu&quot;</span>\n      <span class="token string-property property">&quot;string2&quot;</span><span class="token operator">:</span> <span class="token string">&#39;@string(5)&#39;</span><span class="token punctuation">,</span> <span class="token comment">// &quot;jPXEu&quot;</span>\n      <span class="token comment">// 生成随机邮箱地址 可以指定域名，例如 163.com</span>\n      <span class="token string-property property">&quot;email&quot;</span><span class="token operator">:</span> Random<span class="token punctuation">.</span><span class="token function">email</span><span class="token punctuation">(</span><span class="token string">&#39;163.com&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// &quot;l.fvilfpz@163.com&quot;</span>\n<span class="token operator">...</span><span class="token operator">...</span><span class="token operator">...</span><span class="token operator">...</span><span class="token operator">...</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>', 23);
const _hoisted_24 = {
  href: "http://mockjs.com/",
  target: "_blank",
  rel: "noopener noreferrer"
};
function _sfc_render(_ctx, _cache) {
  const _component_ExternalLinkIcon = resolveComponent("ExternalLinkIcon");
  return openBlock(), createElementBlock("div", null, [
    _hoisted_1,
    createBaseVNode("p", null, [
      createTextVNode("最后附上Mock.js的官方网址 "),
      createBaseVNode("a", _hoisted_24, [
        createTextVNode("Mock.js"),
        createVNode(_component_ExternalLinkIcon)
      ]),
      createTextVNode("**")
    ])
  ]);
}
const qianduanMockJS_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "qianduan-mockJS.html.vue"]]);
export {
  qianduanMockJS_html as default
};
