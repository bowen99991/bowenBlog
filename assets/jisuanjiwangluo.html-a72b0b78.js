import { _ as _export_sfc, o as openBlock, c as createElementBlock, a as createStaticVNode } from "./app-e6367645.js";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<p><strong>什么是计算机网络?</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>计算机网络是指由多台计算机和其他相关设备（如路由器、交换机和光纤等）通过通信链路（如有线或无线传输媒体）连接在一起，以实现数据和资源的共享、通信和协作的系统。计算机网络在现代社会中起到了连接人与人、人与物、物与物的重要作用，它是信息社会和互联网的基础。\n\n以下是计算机网络的概述和相关知识点，包括一些可能在面试中被问到的问题：\n\n1. 网络体系结构和分层模型：\n   - 网络体系结构包括两种主要模型：客户端-服务器模型和对等模型（P2P）。\n   - 分层模型如TCP/IP模型和OSI模型将通信协议分成不同的层次，以便实现功能模块化和互操作性。\n2. 网络拓扑：\n   - 网络拓扑指的是计算机网络中节点（计算机）之间的物理或逻辑连接方式，如总线、星型、环形、树型、网状等。\n3. IP地址与子网掩码：\n   - IP地址是唯一标识计算机或设备在网络中的位置，它分为IPv4和IPv6两种版本。\n   - 子网掩码用于将IP地址分割为网络地址和主机地址，以便进行路由和网络划分。\n4. 网络协议：\n   - 协议是计算机网络中规定了通信规范和格式的约定，如TCP、UDP、HTTP、FTP、SMTP等。\n   - 了解不同协议的功能、特点和使用场景，以及常见端口号等。\n5. 路由与交换：\n   - 路由是指在网络中选择最佳路径将数据分组从源节点传输到目标节点的过程。\n   - 交换是指在局域网内直接传递数据帧，常见的交换方式有电路交换、报文交换和分组交换。\n6. 网络安全与隐私保护：\n   - 网络安全包括身份认证、加密通信、防火墙、入侵检测等措施，用于保护网络和数据的安全。\n   - 隐私保护涉及到对个人身份、隐私数据的保护，在网络通信中要注意隐私泄露的风险和防范手段。\n\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>计算机网络中常见的网络协议名称:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>1.	TCP/IP (Transmission Control Protocol/Internet Protocol)：TCP/IP是互联网最基本的协议套件，它定义了数据在网络上如何传输和交换的标准。它包括TCP协议和IP协议，用于在网络中可靠地传输数据以及将数据分组进行路由。\n\n2.	HTTP (Hypertext Transfer Protocol)：HTTP是用于在Web浏览器和Web服务器之间传输超文本数据的协议。它采用请求-响应模型，客户端发送HTTP请求到服务器，服务器返回响应。\n\n3.	FTP (File Transfer Protocol)：FTP是一种用于在客户端和服务器之间传输文件的协议。它可以让用户从一个主机向另一个主机上传、下载和浏览文件。\n\n4.	SMTP (Simple Mail Transfer Protocol)：SMTP是用于在电子邮件传输中发送和接收电子邮件的协议。它定义了电子邮件的传输规则，包括邮件的格式、地址和路由。\n\n5.	DNS (Domain Name System)：DNS是一种将域名映射到IP地址的分布式系统。它允许用户通过易于记忆的域名访问网站，而无需记住复杂的IP地址。\n\n6.	DHCP (Dynamic Host Configuration Protocol)：DHCP是一种用于自动分配IP地址和其他网络配置参数的协议。它使得设备可以在加入网络时自动获取IP地址，而无需手动配置。\n\n7.	UDP (User Datagram Protocol)：UDP是一种面向无连接的传输协议，在数据传输时不提供可靠性和连接状态。它被用于需要高速传输和实时性的应用程序，如音频、视频和流媒体\n\n8.	HTTPS (Hypertext Transfer Protocol Secure)：HTTPS是在HTTP上添加了安全层的协议，通过使用SSL或TLS协议对通信进行加密和身份验证，确保数据在传输过程中的安全性。\n\n9.	WebSocket：WebSocket是一种在单个TCP连接上提供全双工通信的协议，它允许在客户端和服务器之间建立持久连接，以便进行实时的双向数据传输。\n\n10.	REST (Representational State Transfer)：REST是一种设计原则和架构风格，用于在Web服务中进行资源的标识、请求和操作。它通常使用HTTP协议来实现，通过GET、POST、PUT和DELETE等HTTP方法进行资源的访问和修改。\n\n11.	WebRTC (Web Real-Time Communication)：WebRTC是一种支持浏览器之间实时音频、视频和数据传输的开放标准。它提供了一组API，使得在Web应用程序中可以直接进行点对点通信，而无需使用插件或其他外部工具。\n\n12.	OAuth (Open Authorization)：OAuth是一种授权框架，用于使用户能够无需直接提供其密码，即可授权第三方应用程序访问其受保护的资源。在前端开发中，OAuth通常用于实现用户使用社交媒体账号登录或授权访问第三方API。\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>', 4);
const _hoisted_5 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache) {
  return openBlock(), createElementBlock("div", null, _hoisted_5);
}
const jisuanjiwangluo_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "jisuanjiwangluo.html.vue"]]);
export {
  jisuanjiwangluo_html as default
};
