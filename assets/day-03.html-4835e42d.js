import{_ as e,r as i,o as t,c as p,b as a,d as s,e as o,a as n}from"./app-531ffa45.js";const c="/bowenBlog/assets/1692757719950.24782057-04f6a345.png",r={},d=n('<hr><h1 id="day03" tabindex="-1"><a class="header-anchor" href="#day03" aria-hidden="true">#</a> day03</h1><h1 id="一、初识css" tabindex="-1"><a class="header-anchor" href="#一、初识css" aria-hidden="true">#</a> 一、初识CSS</h1><hr><h2 id="_1-认识css" tabindex="-1"><a class="header-anchor" href="#_1-认识css" aria-hidden="true">#</a> 1,认识css</h2><p>层叠样式表，美化网页</p><p>CSS表示层叠样式表（Cascading Style Sheet，简称：CSS，又称为又称串样式列表、级联样式表、串接样式表、阶层式样式表）是为网页添加样式的代码。CSS并不是一门编程语言，是样式语言。作用就是进行网页布局和美化网页。</p><p><strong>版本</strong></p><ul><li>CSS2 CSS3 先学习CSS2 后面学习CSS3</li><li>HTML1~5 前面也是先学习4 后面学习5</li></ul><p>先快速体验一把CSS，css写在style标签中的，style标签是放在head标签里面，title标签下面，如下：</p><p><img src="'+c+`" alt="1692757719950"></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
    <span class="token selector">*</span> <span class="token punctuation">{</span>
      <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
      <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token selector">body</span> <span class="token punctuation">{</span>
      <span class="token property">background-color</span><span class="token punctuation">:</span> #ccc<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token selector">p</span> <span class="token punctuation">{</span>
      <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
      <span class="token property">font-size</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>
      <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>
      <span class="token property">width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>
      <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>hello world<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_2-三种写法" tabindex="-1"><a class="header-anchor" href="#_2-三种写法" aria-hidden="true">#</a> 2.三种写法</h2><p>写CSS，有三种写法：</p><ul><li>内部式：CSS 写在style标签中, 提示：style标签虽然可以写在页面任意位置，但是通常约定写在 head 标签中</li><li>外部式：CSS 写在一个单独的.css文件中, 提示：需要通过link标签在网页中引入</li><li>行内式：CSS 写在标签的style属性中, 提示：之后会配合js使用</li></ul><p><strong>行内样式（inline style）</strong>:</p><ol><li>行内样式（inline style），也有人翻译成行内联式</li><li>行内样式表存在于HTML元素的style属性之中</li><li>CSS样式之间用分号;隔开，建议每条CSS样式后面都加上分号</li><li>在原生的HTML编写过程中确实这种写法是不推荐的，之后会配合JS使用</li></ol><h1 id="二-css选择器" tabindex="-1"><a class="header-anchor" href="#二-css选择器" aria-hidden="true">#</a> 二,CSS选择器</h1><hr><p><strong>选择器的作用</strong>：</p><ol><li>选择页面中对应的标签（找她），方便后续设置样式（改她）</li></ol><p><strong>选择器的种类繁多，大概可以这么归类</strong>：</p><ol><li>通用选择器（universal selector）</li><li>元素选择器（type selectors）</li><li>类选择器（class selectors）</li><li>id选择器（id selectors）</li><li>属性选择器（attribute selectors）</li><li>组合（combinators）</li><li>伪类（pseudo-classes）</li><li>伪元素（pseudo-elements）</li></ol><hr>`,25),u={id:"_1-css基础选择器",tabindex:"-1"},h=a("a",{class:"header-anchor",href:"#_1-css基础选择器","aria-hidden":"true"},"#",-1),k={href:"https://yujingbo1023.github.io/javablog/public/blogs/base/02.html#_1-css%E5%9F%BA%E7%A1%80%E9%80%89%E6%8B%A9%E5%99%A8",target:"_blank",rel:"noopener noreferrer"},v=n('<p><strong>通用选择器</strong>：</p><ol><li>结构：* { css属性名：属性值； }</li><li>通用选择器（universal selector）</li><li>所有的元素都会被选中;</li><li>一般用来给所有元素作一些通用性的设置，比如内边距、外边距，比如重置一些内容</li><li>效率比较低，尽量不要使用;</li></ol><hr><h2 id="_2-css高级选择器" tabindex="-1"><a class="header-anchor" href="#_2-css高级选择器" aria-hidden="true">#</a> 2，css高级选择器</h2><ol><li>属性选择器（attribute selectors）</li><li>组合（combinators）</li><li>伪类（pseudo-classes）</li><li>伪元素（pseudo-elements）</li></ol><p><strong>属性选择器(attribute selectors)</strong>：</p><ol><li>拥有某一个属性 [att]</li><li>属性等于某个值 [att=val]</li><li>[attr*=val]: 属性值包含某一个值val （了解）</li><li>[attr^=val]: 属性值以val开头 （了解）</li><li>[attr$=val]: 属性值以val结尾 （了解）</li><li>[attr|=val]: 属性值等于val或者以val开头后面紧跟连接符 （了解）</li><li>[attr~=val]: 属性值包含val, 如果有其他值必须以空格和val分割 （了解）</li></ol><hr><h2 id="_3-后代选择器" tabindex="-1"><a class="header-anchor" href="#_3-后代选择器" aria-hidden="true">#</a> 3，后代选择器</h2><ol><li>后代选择器一: 所有的后代(直接/间接的后代)，选择器之间以空格分割</li><li>后代选择器二: 直接子代选择器(必须是直接子代)</li></ol><hr><h2 id="_4-兄弟选择器" tabindex="-1"><a class="header-anchor" href="#_4-兄弟选择器" aria-hidden="true">#</a> 4，兄弟选择器</h2><p>+表示紧挨着的兄弟</p><p>.item~li 表示所有的的选择器</p><ol><li>兄弟选择器一:相邻兄弟选择器， 使用符号 + 连接</li><li>兄弟选择器二: 普遍兄弟选择器， 使用符号 ~ 连接</li></ol><hr><h2 id="_5-交集选择器" tabindex="-1"><a class="header-anchor" href="#_5-交集选择器" aria-hidden="true">#</a> 5，交集选择器</h2><p>li.box 选择了li下面的class名为box的标签</p><ol><li>交集选择器: 需要同时符合两个选择器条件(两个选择器紧密连接)</li><li>在开发中通常为了精准的选择某一个元素</li></ol><hr><h2 id="_6-并集选择器" tabindex="-1"><a class="header-anchor" href="#_6-并集选择器" aria-hidden="true">#</a> 6，并集选择器</h2><ol><li>并集选择器: 符合一个选择器条件即可(两个选择器以,号分割)</li><li>在开发中通常为了给多个元素设置相同的样式;</li></ol><hr><h2 id="_7-伪类选择器" tabindex="-1"><a class="header-anchor" href="#_7-伪类选择器" aria-hidden="true">#</a> 7，伪类选择器</h2><p>:hover 鼠标经过</p><p>可以添加新特性</p><p><strong>动态伪类（dynamic pseudo-classes)</strong>：</p><ol><li>a:hover 鼠标挪动到链接上(重要)</li><li>除了a元素，:hover也能用在其他元素上</li><li>选中鼠标悬停在元素上的状态，设置样式</li><li>伪类选择器选中的元素的某种状态</li></ol><hr><p>常用的选择器：</p><ul><li>标签</li><li>类选择器</li><li>id</li><li>后代</li><li>并集</li><li>交集</li><li>hover</li></ul><h1 id="三-字体和文本相关的属性" tabindex="-1"><a class="header-anchor" href="#三-字体和文本相关的属性" aria-hidden="true">#</a> 三，字体和文本相关的属性</h1><hr><h2 id="_1-css颜色表示法" tabindex="-1"><a class="header-anchor" href="#_1-css颜色表示法" aria-hidden="true">#</a> 1，css颜色表示法</h2><ul><li>单词表示 white green blue ， 无法表示所有颜色、</li><li>RGB颜色</li></ul><p>使用RGB，也有两种形式表示</p><p>​ a是透明度</p><ul><li>RGB函数 或者 RGBA 函数 rgba（255,255,0，0.5）</li><li>16进制表示</li></ul><h2 id="_2-开发者调试工具" tabindex="-1"><a class="header-anchor" href="#_2-开发者调试工具" aria-hidden="true">#</a> 2，开发者调试工具</h2><p>选择某个元素 快捷键 ctrl + shift + c</p><p>移动端设备切换</p><p>elements 元素</p><p>console 控制台</p><p>network 网络</p><p>.........</p><p>选中一个盒子后，分三类</p><ol><li>当前元素的样式</li><li>默认样式</li><li>继承别人的样式</li></ol><p>调试: 增删改查</p><p>总结：</p><h1 id="四-work" tabindex="-1"><a class="header-anchor" href="#四-work" aria-hidden="true">#</a> 四, work</h1><hr>',51);function b(g,_){const l=i("ExternalLinkIcon");return t(),p("div",null,[d,a("h2",u,[h,s(),a("a",k,[s("#"),o(l)]),s("1，CSS基础选择器")]),v])}const S=e(r,[["render",b],["__file","day-03.html.vue"]]);export{S as default};
