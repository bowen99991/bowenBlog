import { _ as _export_sfc, o as openBlock, c as createElementBlock, d as createStaticVNode } from "./app-0bcd8dca.js";
const _imports_0 = "/bowenBlog/assets/image-20231229090539037-f0909ca5.png";
const _imports_1 = "/bowenBlog/assets/image-20231228164051024-1e2ba481.png";
const _imports_2 = "/bowenBlog/assets/image-20231228174854744-2171cbd2.png";
const _imports_3 = "/bowenBlog/assets/image-20231228175525259-1a266696.png";
const _imports_4 = "/bowenBlog/assets/image-20231228175634080-42820c5c.png";
const _imports_5 = "/bowenBlog/assets/image-20231228175735235-9880a5ce.png";
const _imports_6 = "/bowenBlog/assets/image-20231228180106606-b558bf86.png";
const _imports_7 = "/bowenBlog/assets/image-20231228180123064-94891492.png";
const _imports_8 = "/bowenBlog/assets/image-20231228180140086-71807bab.png";
const _imports_9 = "/bowenBlog/assets/image-20231228180154587-ab701775.png";
const _imports_10 = "/bowenBlog/assets/image-20231228175945910-e6a80d78.png";
const _imports_11 = "/bowenBlog/assets/image-20231229103221501-19020181.png";
const _imports_12 = "/bowenBlog/assets/image-20231229103141132-73a70110.png";
const _imports_13 = "/bowenBlog/assets/image-20231229104456735-30cb6207.png";
const _imports_14 = "/bowenBlog/assets/image-20231229104507443-1bdc3f1e.png";
const _imports_15 = "/bowenBlog/assets/image-20231229105046602-17f4c709.png";
const _imports_16 = "/bowenBlog/assets/image-20231229110349079-b4b0d77e.png";
const _imports_17 = "/bowenBlog/assets/image-20231229145818023-157595fa.png";
const _imports_18 = "/bowenBlog/assets/image-20231229160114257-a2f08a8f.png";
const _imports_19 = "/bowenBlog/assets/image-20231229161400589-599d68f3.png";
const _imports_20 = "/bowenBlog/assets/image-20231229161456870-f4595074.png";
const _imports_21 = "/bowenBlog/assets/image-20240102123753035-4739901b.png";
const _imports_22 = "/bowenBlog/assets/image-20240102145952395-7dab7458.png";
const _imports_23 = "/bowenBlog/assets/image-20240102203439520-9d82f34e.png";
const _imports_24 = "/bowenBlog/assets/image-20240102203502290-fc83ec6f.png";
const _imports_25 = "/bowenBlog/assets/image-20240102203636986-ab40893c.png";
const _imports_26 = "/bowenBlog/assets/image-20240102203647540-69b61658.png";
const _imports_27 = "/bowenBlog/assets/image-20240102162015339-8e4fa6d3.png";
const _imports_28 = "/bowenBlog/assets/image-20240102204041474-4b5a79b1.png";
const _imports_29 = "/bowenBlog/assets/image-20240102162736079-25a2426b.png";
const _imports_30 = "/bowenBlog/assets/image-20240102204118267-ecdf46e8.png";
const _imports_31 = "/bowenBlog/assets/image-20240102204209923-cce8c973.png";
const _imports_32 = "/bowenBlog/assets/image-20240102204246730-b9fb9ae5.png";
const _imports_33 = "/bowenBlog/assets/image-20240102204301546-abbfccc2.png";
const _imports_34 = "/bowenBlog/assets/image-20240102204907645-e9b2a61b.png";
const _imports_35 = "/bowenBlog/assets/image-20240102204934787-656dc5d3.png";
const _imports_36 = "/bowenBlog/assets/image-20240102205018575-5cca1aa2.png";
const _imports_37 = "/bowenBlog/assets/image-20240102205044343-a945f7d4.png";
const _imports_38 = "/bowenBlog/assets/image-20240102205234890-04962918.png";
const _imports_39 = "/bowenBlog/assets/image-20240102205249304-bd0799db.png";
const _imports_40 = "/bowenBlog/assets/image-20240102205309197-f43488a0.png";
const _imports_41 = "/bowenBlog/assets/image-20240102160425314-d9fb319c.png";
const _imports_42 = "/bowenBlog/assets/image-20240102205413368-56d36522.png";
const _imports_43 = "/bowenBlog/assets/image-20240102205353141-ea340e12.png";
const _imports_44 = "/bowenBlog/assets/image-20240102205513535-d57d4c30.png";
const _imports_45 = "/bowenBlog/assets/image-20240102205532586-493ce448.png";
const _imports_46 = "/bowenBlog/assets/image-20240102205544709-8990b56c.png";
const _imports_47 = "/bowenBlog/assets/image-20240102205602318-dc08719f.png";
const _imports_48 = "/bowenBlog/assets/image-20240102205735355-747daf69.png";
const _imports_49 = "/bowenBlog/assets/image-20240102205754053-c0d90e24.png";
const _imports_50 = "/bowenBlog/assets/image-20240103143114243-e08c4db1.png";
const _imports_51 = "/bowenBlog/assets/image-20240102214314409-14bb945c.png";
const _imports_52 = "/bowenBlog/assets/image-20240114121231667-915b88df.png";
const _imports_53 = "/bowenBlog/assets/image-20231229165527119-934bf32e.png";
const _imports_54 = "/bowenBlog/assets/image-20231229165645598-d49ec540.png";
const _imports_55 = "/bowenBlog/assets/image-20240103173958295-58cab241.png";
const _imports_56 = "/bowenBlog/assets/image-20240103192710730-4591d480.png";
const _imports_57 = "/bowenBlog/assets/image-20240103200209622-36d9f5d9.png";
const _imports_58 = "/bowenBlog/assets/image-20240103200225443-448b8ca8.png";
const _imports_59 = "/bowenBlog/assets/image-20240103200549907-a6982eb7.png";
const _imports_60 = "/bowenBlog/assets/image-20240103200602429-187b12d4.png";
const _imports_61 = "/bowenBlog/assets/image-20240103200713352-b6dd2db0.png";
const _imports_62 = "/bowenBlog/assets/image-20240103204738491-fde19d59.png";
const _imports_63 = "/bowenBlog/assets/image-20240103211307016-546bcbb9.png";
const _imports_64 = "/bowenBlog/assets/image-20240103211416722-3ac24e46.png";
const _imports_65 = "/bowenBlog/assets/image-20240103211652754-ee48fc0f.png";
const _imports_66 = "/bowenBlog/assets/image-20240103211913956-a1fb9804.png";
const _imports_67 = "/bowenBlog/assets/image-20240103211936812-145d685d.png";
const _imports_68 = "/bowenBlog/assets/image-20240103212033724-7e6a3220.png";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<hr><h1 id="mysql" tabindex="-1"><a class="header-anchor" href="#mysql" aria-hidden="true">#</a> MySQL</h1><h2 id="一-mysql" tabindex="-1"><a class="header-anchor" href="#一-mysql" aria-hidden="true">#</a> 一, MySQL</h2><h3 id="_1-安装集成环境工具" tabindex="-1"><a class="header-anchor" href="#_1-安装集成环境工具" aria-hidden="true">#</a> 1, 安装集成环境工具</h3><blockquote><p>安装集成了 MySQL 的工具. 小皮 <strong>phpstudyPro</strong> ,</p><p>直接搜索, 傻瓜式安装</p></blockquote><p><img src="' + _imports_0 + '" alt="image-20231229090539037"></p><h3 id="_2-安装-sql-可视化工具" tabindex="-1"><a class="header-anchor" href="#_2-安装-sql-可视化工具" aria-hidden="true">#</a> 2, 安装 SQL 可视化工具</h3><p>Navicat Premium 15</p><p>下载地址, 点击即可下载</p><p>https://download.navicat.com.cn/download/navicat160_premium_cs_x64.exe</p><blockquote><p>官网只有最新的16版本, 想要下载其他的版本, 只需要把16改成15,14,13,12即可,分别对应着相应的版本</p></blockquote><p>当前我安装的是 15 的版本, 安装方式是傻瓜式安装直接下一步</p><p><strong>下载激活工具</strong></p><p>https://pan.baidu.com/s/1OfMoxozXh5-EdD2Zvp5DNQ?pwd=xljy 网盘提取码：xljy</p><p><strong>在安装完以上两个工具之后, 下面开始激活步骤</strong></p><p><strong>windows</strong> 使用方法：</p><ul><li>Navicat Premium 12 为退出状态</li><li>进入命令终端界面</li><li>使用命令进入激活文件夹：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 命令行的方式打开激活工具</span>\n\n<span class="token comment"># 执行命令</span>\n.<span class="token punctuation">\\</span>navicat-patcher.exe <span class="token string">&quot;C:\\Program\\Navicat Premium 12(这个是可视化软件的安装目录, 确定好您的软件安装地址)&quot;</span>\n\n<span class="token comment"># 当前的安装地址</span>\n.<span class="token punctuation">\\</span>navicat-patcher.exe <span class="token string">&quot;C:\\Program Files\\PremiumSoft\\Navicat Premium 15&quot;</span>\n\n\n<span class="token comment"># 等 ........，最后可看到：MESSAGE: Patch has been done successfully.</span>\n<span class="token comment"># 可在文件夹中看到生成的一个文件：RegPrivateKey.pem</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="' + _imports_1 + '" alt="image-20231228164051024"></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>执行命令：\n .<span class="token punctuation">\\</span>navicat-keygen.exe <span class="token parameter variable">-text</span> .<span class="token punctuation">\\</span>RegPrivateKey.pem\n \n <span class="token comment"># 以上很可能会出现操作失败的情况等其他问题... 也可以使用以下这种方式</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>另一种破解方式-- 注册机</strong></p><blockquote><p>使用注册机破解</p><p>https://pan.baidu.com/s/1_srPALXHshR2roTu3b3Bjg?pwd=gx3t</p><p>提取码: gx3t</p></blockquote><p>打开注册机, 选择版本</p><p><img src="' + _imports_2 + '" alt="image-20231228174854744"></p><p><strong>点击 Patch</strong></p><p><img src="' + _imports_3 + '" alt="image-20231228175525259"></p><p>出现以下提示说明Patch成功了 , 破解成功现在需要激活。</p><p><img src="' + _imports_4 + '" alt="image-20231228175634080"></p><p><strong>2.License. Product and Language、3.Resale License保持默认选择即可</strong></p><p>区块中点击Generate按钮就会生成一个许可证秘钥，将许可证秘钥复制后就打开Navicat Premium 15</p><p><img src="' + _imports_5 + '" alt="image-20231228175735235"></p><p>打开软件后会弹出一个提示框，我们点击注册</p><p><img src="' + _imports_6 + '" alt="image-20231228180106606"></p><p>粘贴许可证秘钥,点击激活</p><p><img src="' + _imports_7 + '" alt="image-20231228180123064"></p><p>选择手动激活。</p><p><img src="' + _imports_8 + '" alt="image-20231228180140086"></p><p>点击手动激活后会有一个请求码，</p><p>复制请求码到注册机中的Request Code里面，再生成一个jihuo码</p><p><img src="' + _imports_9 + '" alt="image-20231228180154587"></p><p>将jihuo码复制到框里，即可。</p><p>完成激活</p><p><img src="' + _imports_10 + '" alt="image-20231228175945910"></p><h3 id="_3-启动数据库" tabindex="-1"><a class="header-anchor" href="#_3-启动数据库" aria-hidden="true">#</a> 3, 启动数据库</h3><blockquote><p>在工具中新建链接, 填写任意名称, 默认密码 root ,设置MySQL的安装位置 选择字符集 UTF-8</p><p><img src="' + _imports_11 + '" alt="image-20231229103221501"></p></blockquote><blockquote><p><img src="' + _imports_12 + '" alt="image-20231229103141132"></p></blockquote><h3 id="_4-mysql的数据模型" tabindex="-1"><a class="header-anchor" href="#_4-mysql的数据模型" aria-hidden="true">#</a> 4, MySQL的数据模型</h3><p>关系型数据库：</p><ul><li>关系型数据库是建立在关系模型基础上的数据库，简单说，<strong>关系型数据库是由多张能互相连接的 二维表 组成的数据库</strong></li><li>关系型数据库都可以通过SQL进行操作，所以使用方便。</li><li>数据存储在磁盘中，安全。</li></ul><p><code>订单信息表</code> 和 <code>客户信息表</code> 都是有行有列二维表我们将这样的称为关系型数据库。如下：</p><p><img src="' + _imports_13 + '" alt="image-20231229104456735"></p><p>数据模型：</p><p><img src="' + _imports_14 + '" alt="image-20231229104507443"></p><p>通过客户端可以通过数据库管理系统<strong>创建数据库</strong>，<strong>在数据库中创建表</strong>，<strong>在表中添加数据</strong>。创建的每一个数据库对应到磁盘上都是一个文件夹。</p><p>一个数据库下可以创建多张表，我们到MySQL中自带的mysql数据库的文件夹目录下：</p><p><code>db.frm</code> 是表文件， <code>db.MYD</code> 是数据文件，通过这两个文件就可以查询到数据展示成二维表的效果。</p><blockquote><p><strong>小结：</strong></p><ul><li>MySQL中可以创建多个数据库，每个数据库对应到磁盘上的一个文件夹</li><li>在每个数据库中可以创建多个表，每张都对应到磁盘上一个 frm 文件</li><li>每张表可以存储多条数据，数据会被存储到磁盘中 MYD 文件中</li></ul></blockquote><h3 id="_5-导出sql文件" tabindex="-1"><a class="header-anchor" href="#_5-导出sql文件" aria-hidden="true">#</a> 5, 导出sql文件</h3><p>步骤:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>1. 找到MySQL安装目录下的bin\n2. 选中输入cmd，回车\n3. 使用命令导出为sql文件\n4. 结果展示\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>mysqldump -u root -p数据库密码 数据库名称 &gt; 路径:\\自定义名称.sql\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>现在我要导出数据库 db_brand 这个数据库的文件, 如何操作</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysqldump <span class="token parameter variable">-u</span> root <span class="token parameter variable">-proot</span> db_brand <span class="token operator">&gt;</span> D:<span class="token punctuation">\\</span>db_brand.sql\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>C:\\Users\\bowen&gt;mysqldump <span class="token operator">-</span>u root <span class="token operator">-</span>proot db_brand &gt; D:\\db_brand<span class="token punctuation">.</span>sql\nmysqldump: <span class="token namespace">[Warning]</span> <span class="token keyword">Using</span> a password on the command line interface can be insecure<span class="token punctuation">.</span>\n\nC:\\Users\\bowen&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看该目录下就会生成此文件, 这你提示的密码输入不安全不用在意</p><h2 id="二-sql-概述" tabindex="-1"><a class="header-anchor" href="#二-sql-概述" aria-hidden="true">#</a> 二, SQL 概述</h2><p>通过SQL语句对数据库、表、数据进行增删改查操作。</p><h3 id="_1-sql-的通用语法" tabindex="-1"><a class="header-anchor" href="#_1-sql-的通用语法" aria-hidden="true">#</a> 1, SQL 的通用语法</h3><p>SQL 语句可以单行或多行书写，以分号结尾。以分号结尾才是一个完整的sql语句（show databases; ）。如下：</p><p>MySQL 数据库的 SQL 语句不区分大小写，关键字建议使用大写。同样的一条sql语句写成如下的样子（Show Databases; ），一样可以运行处结果。</p><p>单行注释: -- 注释内容 或 #注释内容(MySQL 特有)。使用-- 添加单行注释时，--后面一定要加空格，而#没有要求。多行注释: /* 注释 */</p><h3 id="_2-sql分类" tabindex="-1"><a class="header-anchor" href="#_2-sql分类" aria-hidden="true">#</a> 2, SQL分类</h3><blockquote><p><strong>DDL</strong>（Data Definition Language）就是用来操作数据库，表等。</p><p><strong>DML</strong>（Data Manipulation Language）就是对表中数据进行增删改的。DQL（Data Query Language）就是对数据进行查询操作。从数据库表中查询到我们想要的数据。<strong>DML</strong>就是对数据库进行权限控制。比如我让某一个数据库表只能让某一个用户进行操作等。</p></blockquote><p>总结：</p><ul><li>以后我们最常操作的是 <code>DML</code> 和 <code>DQL</code> ，因为我们开发中最常操作的就是数据。</li></ul><h2 id="三-ddl操作数据库" tabindex="-1"><a class="header-anchor" href="#三-ddl操作数据库" aria-hidden="true">#</a> 三, DDL操作数据库</h2><p><strong>DDL主要就是对数据库的增删查操作。</strong></p><h3 id="_1-数据库基本操作" tabindex="-1"><a class="header-anchor" href="#_1-数据库基本操作" aria-hidden="true">#</a> 1, 数据库基本操作</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 查询所有的数据库</span>\n<span class="token keyword">SHOW</span> <span class="token keyword">DATABASES</span><span class="token punctuation">;</span>\n\n\n<span class="token comment"># 创建数据库</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> 数据库名称<span class="token punctuation">;</span>\n\n\n<span class="token comment"># 创建数据库避免已存在</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> 数据库名称<span class="token punctuation">;</span>\n\n\n<span class="token comment"># 删除数据库</span>\n<span class="token keyword">DROP</span> <span class="token keyword">DATABASE</span> 数据库名称<span class="token punctuation">;</span>\n\n\n<span class="token comment"># 删除数据库</span>\n<span class="token keyword">DROP</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> 数据库名称<span class="token punctuation">;</span>\n\n\n<span class="token comment"># 使用数据库名称;</span>\n<span class="token keyword">USE</span> 数据库名称<span class="token punctuation">;</span>\n\n\n<span class="token comment"># 查看当前使用的数据库</span>\n<span class="token keyword">SELECT</span> <span class="token keyword">DATABASE</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-操作表" tabindex="-1"><a class="header-anchor" href="#_2-操作表" aria-hidden="true">#</a> 2, 操作表</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 查询当前数据库下所有表名称</span>\n<span class="token keyword">SHOW</span> <span class="token keyword">TABLES</span><span class="token punctuation">;</span>\n\n\n<span class="token comment"># 查询表结构</span>\n<span class="token keyword">DESC</span> 表名称<span class="token punctuation">;</span>\n\n\n<span class="token comment"># 创建表</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> 表名 <span class="token punctuation">(</span>\n	字段名<span class="token number">1</span>  数据类型<span class="token number">1</span><span class="token punctuation">,</span>\n	字段名<span class="token number">2</span>  数据类型<span class="token number">2</span><span class="token punctuation">,</span>\n	…\n	字段名n  数据类型n  <span class="token comment">-- 注意：最后一行末尾，不能加逗号</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="' + _imports_15 + '" alt="image-20231229105046602"></p><p>创建以上表的结构</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> tb_user <span class="token punctuation">(</span>\n		id <span class="token keyword">int</span><span class="token punctuation">,</span>\n    username <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    password <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">show</span> <span class="token keyword">tables</span><span class="token punctuation">;</span>\n\n<span class="token keyword">desc</span> tb_user<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-数据类型" tabindex="-1"><a class="header-anchor" href="#_3-数据类型" aria-hidden="true">#</a> 3, 数据类型</h3><blockquote><p>MySQL 支持多种类型，可以分为三类：</p><ul><li>数值</li><li>日期</li><li>字符串</li></ul></blockquote><p><strong>数值</strong>：</p><ul><li>tinyint : <strong>小整数型</strong>，占一个字节</li><li>int： <strong>大整数类型</strong>，占四个字节。eg： age int</li><li>double ： <strong>浮点类型</strong>，使用格式： 字<strong>段名 double(总长度, 小数点后保留的位数)</strong>。eg： score double(5, 2)</li></ul><p><strong>日期</strong>：</p><ul><li>date：日期值。只包含年月日。eg：birthday date ：</li><li>datetime ： 混合日期和时间值**。包含年月日时分秒**</li></ul><p><strong>字符串</strong>：</p><ul><li>char： 定长字符串。优点：存储性能高。缺点：浪费空间。eg： name char(10) <strong>如果存储的数据字符个数不足10个，也会占10个的空间</strong></li><li>varchar： 变长字符串。优点：节约空间。缺点：存储性能底。eg： name varchar(10) 如果存储的数据字符个数不足10个，那就数据字符个数是几就占几个的空间</li></ul><p><strong>常见的数据类型如图所示</strong></p><p><img src="' + _imports_16 + '" alt="image-20231229110349079"></p><p><strong>定长和可变长度的概念</strong></p><p>定长和可变长度是用来描述字符串类型的属性。</p><blockquote><ol><li><strong>定长（Fixed-Length）字符串</strong>： <ul><li>定长字符串具有固定的长度，无论字符串实际存储的内容长度是多少，它都会占用固定的存储空间。例如，如果定义一个长度为20的定长字符串，无论实际存储的字符串是&quot;Hello&quot;还是&quot;Hello, World!&quot;，它都会占用20个字符的存储空间。定长字符串的优点是存取速度较快，因为每个字符串都占用固定的存储空间，可以直接通过偏移量进行访问。</li></ul></li><li><strong>可变长度（Variable-Length）字符串</strong>： <ul><li>可变长度字符串的长度是根据实际存储的内容来确定的，它不会占用固定的存储空间。例如，如果定义一个可变长度字符串存储&quot;Hello&quot;，它只会占用5个字符的存储空间，而不会浪费额外的空间。可变长度字符串的优点是节省存储空间，但在存取时需要一些额外的开销，因为需要记录字符串的长度信息。</li></ul></li></ol></blockquote><p><strong>总结常用的数据类型:</strong></p><ol><li>整数类型（Integer Types）： <ul><li>TINYINT：1字节，范围为-128到127（有符号）或0到255（无符号）。</li><li>SMALLINT：2字节，范围为-32,768到32,767（有符号）或0到65,535（无符号）。</li><li>MEDIUMINT：3字节，范围为-8,388,608到8,388,607（有符号）或0到16,777,215（无符号）。</li><li>INT或INTEGER：4字节，范围为-2,147,483,648到2,147,483,647（有符号）或0到4,294,967,295（无符号）。</li><li>BIGINT：8字节，范围为-9,223,372,036,854,775,808到9,223,372,036,854,775,807（有符号）或0到18,446,744,073,709,551,615（无符号）。</li></ul></li><li>浮点数类型（Floating-Point Types）： <ul><li>FLOAT：4字节，单精度浮点数。</li><li>DOUBLE：8字节，双精度浮点数。</li></ul></li><li>定点数类型（Fixed-Point Types）： <ul><li>DECIMAL或NUMERIC：变长，用于存储精确的小数，需要指定精度和小数位数。</li></ul></li><li>字符串类型（String Types）： <ul><li>CHAR：定长字符串，最多255个字符。</li><li>VARCHAR：变长字符串，最多65535个字符。</li><li>TEXT：可变长度的文本字符串，最多65535个字符。</li></ul></li><li>日期和时间类型（Date and Time Types）： <ul><li>DATE：日期，格式为&#39;YYYY-MM-DD&#39;。</li><li>TIME：时间，格式为&#39;HH:MM:SS&#39;。</li><li>DATETIME：日期和时间，格式为&#39;YYYY-MM-DD HH:MM:SS&#39;。</li><li>TIMESTAMP：日期和时间，范围从&#39;1970-01-01 00:00:01&#39;到&#39;2038-01-19 03:14:07&#39;。</li></ul></li><li>布尔类型（Boolean Types）： <ul><li>BOOL或BOOLEAN：存储真或假。</li></ul></li><li>枚举类型（Enumeration Types）： <ul><li>ENUM：定义一个允许的值列表。</li></ul></li><li>集合类型（Set Types）： <ul><li>SET：定义一个允许的值列表，可以选择多个值。</li></ul></li></ol><h3 id="小案例" tabindex="-1"><a class="header-anchor" href="#小案例" aria-hidden="true">#</a> 小案例</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>需求：设计一张学生表，请注重数据类型、长度的合理性\n	1. 编号\n	2. 姓名，姓名最长不超过10个汉字\n	3. 性别，因为取值只有两种可能，因此最多一个汉字\n	4. 生日，取值为年月日\n	5. 入学成绩，小数点后保留两位\n	6. 邮件地址，最大长度不超过 64\n	7. 家庭联系电话，不一定是手机号码，可能会出现 - 等字符\n	8. 学生状态（用数字表示，正常、休学、毕业...）\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>语句设计：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> student <span class="token punctuation">(</span>\n		id <span class="token keyword">int</span><span class="token punctuation">,</span>\n    name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    gender <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    birthday <span class="token keyword">date</span><span class="token punctuation">,</span>\n    score <span class="token keyword">double</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    email <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    tel <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">status</span> <span class="token keyword">tinyint</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-删除和修改" tabindex="-1"><a class="header-anchor" href="#_4-删除和修改" aria-hidden="true">#</a> 4, 删除和修改</h3><p><strong>删除</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 删除表</span>\n<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> 表名<span class="token punctuation">;</span>\n\n\n<span class="token comment"># 删除表时判断是否存在</span>\n<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> 表名<span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>修改</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 修改表名</span>\n<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">RENAME</span> <span class="token keyword">TO</span> 新的表名<span class="token punctuation">;</span>\n<span class="token comment">-- 将表名student修改为stu</span>\n<span class="token keyword">alter</span> <span class="token keyword">table</span> student <span class="token keyword">rename</span> <span class="token keyword">to</span> stu<span class="token punctuation">;</span>\n\n\n\n<span class="token comment"># 添加一列</span>\n<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">ADD</span> 列名 数据类型<span class="token punctuation">;</span>\n<span class="token comment">-- 给stu表添加一列address，该字段类型是varchar(50)</span>\n<span class="token keyword">alter</span> <span class="token keyword">table</span> stu <span class="token keyword">add</span> address <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\n\n<span class="token comment"># 修改数据类型</span>\n<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">MODIFY</span> 列名 新数据类型<span class="token punctuation">;</span>\n<span class="token comment">-- 将stu表中的address字段的类型改为 char(50)</span>\n<span class="token keyword">alter</span> <span class="token keyword">table</span> stu <span class="token keyword">modify</span> address <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\n\n<span class="token comment"># 修改列名和数据类型</span>\n<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 CHANGE 列名 新列名 新数据类型<span class="token punctuation">;</span>\n<span class="token comment">-- 将stu表中的address字段名改为 addr，类型改为varchar(50)</span>\n<span class="token keyword">alter</span> <span class="token keyword">table</span> stu change address addr <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\n\n<span class="token comment"># 删除列</span>\n<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">DROP</span> 列名<span class="token punctuation">;</span>\n<span class="token comment">-- 将stu表中的addr字段 删除</span>\n<span class="token keyword">alter</span> <span class="token keyword">table</span> stu <span class="token keyword">drop</span> addr<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四-dml-数据操作" tabindex="-1"><a class="header-anchor" href="#四-dml-数据操作" aria-hidden="true">#</a> 四, DML 数据操作</h2><blockquote><p>DML主要是对数据进行增（insert）删（delete）改（update）操作。</p><p>MySQL数据库中的DML操作（Data Manipulation Language，数据操作语言）用于对数据库表中的数据进行增加、修改和删除操作。</p></blockquote><h3 id="_1-添加数据" tabindex="-1"><a class="header-anchor" href="#_1-添加数据" aria-hidden="true">#</a> 1, 添加数据</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> 表名 <span class="token punctuation">(</span>列<span class="token number">1</span><span class="token punctuation">,</span> 列<span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span>值<span class="token number">1</span><span class="token punctuation">,</span> 值<span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span>\n<span class="token identifier"><span class="token punctuation">`</span><span class="token punctuation">`</span></span><span class="token punctuation">`</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-修改数据" tabindex="-1"><a class="header-anchor" href="#_2-修改数据" aria-hidden="true">#</a> 2, 修改数据</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> 表名 <span class="token keyword">SET</span> 列<span class="token number">1</span> <span class="token operator">=</span> 值<span class="token number">1</span><span class="token punctuation">,</span> 列<span class="token number">2</span> <span class="token operator">=</span> 值<span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">WHERE</span> 条件\n<span class="token identifier"><span class="token punctuation">`</span><span class="token punctuation">`</span></span><span class="token punctuation">`</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-删除数据" tabindex="-1"><a class="header-anchor" href="#_3-删除数据" aria-hidden="true">#</a> 3, 删除数据</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> 表名 <span class="token keyword">WHERE</span> 条件\n<span class="token identifier"><span class="token punctuation">`</span><span class="token punctuation">`</span></span><span class="token punctuation">`</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="五-dql-数据查询" tabindex="-1"><a class="header-anchor" href="#五-dql-数据查询" aria-hidden="true">#</a> 五, ==<strong>DQL</strong> 数据查询==</h2><blockquote><p>DQL（Data Query Language，数据查询语言）是用于从数据库中检索数据的语言。在MySQL中，常用的DQL操作是使用SELECT语句进行查询。</p></blockquote><h3 id="_1-基础查询" tabindex="-1"><a class="header-anchor" href="#_1-基础查询" aria-hidden="true">#</a> 1, 基础查询</h3><p>查询完整语法</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> \n    字段列表\n    \n<span class="token keyword">FROM</span> \n    表名列表 \n    \n<span class="token keyword">WHERE</span> \n    条件列表\n    \n<span class="token keyword">GROUP</span> <span class="token keyword">BY</span>\n    分组字段\n    \n<span class="token keyword">HAVING</span>\n    分组后条件\n    \n<span class="token keyword">ORDER</span> <span class="token keyword">BY</span>\n    排序字段\n    \n<span class="token keyword">LIMIT</span>\n    分页限定\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为了给大家演示查询的语句，我们需要先准备表及一些数据：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 删除stu表</span>\n<span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> stu<span class="token punctuation">;</span>\n\n<span class="token comment">-- 创建stu表</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> stu <span class="token punctuation">(</span>\n id <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token comment">-- 编号</span>\n name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">-- 姓名</span>\n age <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token comment">-- 年龄</span>\n sex <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">-- 性别</span>\n address <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">-- 地址</span>\n math <span class="token keyword">double</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">-- 数学成绩</span>\n english <span class="token keyword">double</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">-- 英语成绩</span>\n hire_date <span class="token keyword">date</span> <span class="token comment">-- 入学时间</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">-- 添加数据</span>\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> stu<span class="token punctuation">(</span>id<span class="token punctuation">,</span>NAME<span class="token punctuation">,</span>age<span class="token punctuation">,</span>sex<span class="token punctuation">,</span>address<span class="token punctuation">,</span>math<span class="token punctuation">,</span>english<span class="token punctuation">,</span>hire_date<span class="token punctuation">)</span> \n<span class="token keyword">VALUES</span> \n<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;马运&#39;</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">,</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;杭州&#39;</span><span class="token punctuation">,</span><span class="token number">66</span><span class="token punctuation">,</span><span class="token number">78</span><span class="token punctuation">,</span><span class="token string">&#39;1995-09-01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&#39;马花疼&#39;</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">,</span><span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;深圳&#39;</span><span class="token punctuation">,</span><span class="token number">98</span><span class="token punctuation">,</span><span class="token number">87</span><span class="token punctuation">,</span><span class="token string">&#39;1998-09-01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&#39;马斯克&#39;</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">,</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;香港&#39;</span><span class="token punctuation">,</span><span class="token number">56</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">,</span><span class="token string">&#39;1999-09-02&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">&#39;柳白&#39;</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;湖南&#39;</span><span class="token punctuation">,</span><span class="token number">76</span><span class="token punctuation">,</span><span class="token number">65</span><span class="token punctuation">,</span><span class="token string">&#39;1997-09-05&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">&#39;柳青&#39;</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;湖南&#39;</span><span class="token punctuation">,</span><span class="token number">86</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token string">&#39;1998-09-01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token string">&#39;刘德花&#39;</span><span class="token punctuation">,</span><span class="token number">57</span><span class="token punctuation">,</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;香港&#39;</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token string">&#39;1998-09-01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token string">&#39;张学右&#39;</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;香港&#39;</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token string">&#39;1998-09-01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">&#39;德玛西亚&#39;</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;南京&#39;</span><span class="token punctuation">,</span><span class="token number">56</span><span class="token punctuation">,</span><span class="token number">65</span><span class="token punctuation">,</span><span class="token string">&#39;1994-09-02&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>如图所示</strong></p><p><img src="' + _imports_17 + '" alt="image-20231229145818023"></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 查询多个字段语法格式</span>\n<span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表名<span class="token punctuation">;</span>\n<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> 表名<span class="token punctuation">;</span> <span class="token comment">-- 查询所有数据</span>\n\n<span class="token comment"># 去除重复记录语法格式</span>\n<span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span> 字段列表 <span class="token keyword">FROM</span> 表名<span class="token punctuation">;</span>\n\n<span class="token comment"># 起别名语法格式</span>\n<span class="token keyword">AS</span>: <span class="token keyword">AS</span> 也可以省略\n\n<span class="token comment"># 查询name、age两列</span>\n<span class="token keyword">select</span> name<span class="token punctuation">,</span>age <span class="token keyword">from</span> stu<span class="token punctuation">;</span>\n\n<span class="token comment"># 查询所有列的数据，列名的列表可以使用*替代</span>\n<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu<span class="token punctuation">;</span>\n\n\n<span class="token comment">-- 上面语句中的*不建议大家使用，因为在这写\\*不方便我们阅读sql语句。我们写字段列表的话，可以添加注释对每一个字段进行说明。而在上课期间为了简约课程的时间，老师很多地方都会写*。</span>\n\n\n<span class="token comment"># 选择字段查询</span>\n<span class="token keyword">select</span> \n	name<span class="token punctuation">,</span> <span class="token comment">-- 姓名</span>\n	age  <span class="token comment">-- 年龄</span>\n<span class="token keyword">from</span> \n	stu<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询地址信息：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> address <span class="token keyword">from</span> stu<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>从上面的结果我们可以看到有重复的数据，我们也可以使用 <code>distinct</code> 关键字去重重复数据。去除重复记录：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token keyword">distinct</span> address <span class="token keyword">from</span> stu<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查询姓名、数学成绩、英语成绩。并通过as给math和english起别名（as关键字可以省略）：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> name<span class="token punctuation">,</span>math <span class="token keyword">as</span> 数学成绩<span class="token punctuation">,</span>english <span class="token keyword">as</span> 英文成绩 <span class="token keyword">from</span> stu<span class="token punctuation">;</span>\n<span class="token keyword">select</span> name<span class="token punctuation">,</span>math 数学成绩<span class="token punctuation">,</span>english 英文成绩 <span class="token keyword">from</span> stu<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-条件查询" tabindex="-1"><a class="header-anchor" href="#_2-条件查询" aria-hidden="true">#</a> 2, 条件查询</h3><p>条件查询语法：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表名 <span class="token keyword">WHERE</span> 条件列表<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><strong>常用的条件查询符号</strong></p><ol><li><strong>相等比较</strong>： <ul><li><code>=</code>：等于。</li><li><code>&lt;=&gt;</code>：安全等于，可以用于比较NULL。</li><li><code>&lt;&gt;</code> 或 <code>!=</code>：不等于。</li></ul></li><li><strong>比较运算符</strong>： <ul><li><code>&lt;</code>：小于。</li><li><code>&gt;</code>：大于。</li><li><code>&lt;=</code>：小于等于。</li><li><code>&gt;=</code>：大于等于。</li></ul></li><li><strong>模糊匹配</strong>： <ul><li><code>LIKE</code>：用于模糊匹配，可以使用通配符 <code>%</code> 表示任意字符序列，<code>_</code> 表示任意单个字符。</li></ul></li><li><strong>范围查询</strong>： <ul><li><code>BETWEEN</code>：在某个范围内。</li><li><code>NOT BETWEEN</code>：不在某个范围内。</li><li><code>IN</code>：在给定的值列表中。</li><li><code>NOT IN</code>：不在给定的值列表中。</li></ul></li><li><strong>空值判断</strong>： <ul><li><code>IS NULL</code>：为空值。</li><li><code>IS NOT NULL</code>：不为空值。</li></ul></li><li><strong>逻辑运算符</strong>： <ul><li><code>AND</code>：逻辑与。</li><li><code>OR</code>：逻辑或。</li><li><code>NOT</code>：逻辑非。</li></ul></li><li><strong>正则表达式匹配</strong>： <ul><li><code>REGEXP</code> 或 <code>RLIKE</code>：使用正则表达式进行匹配。</li></ul></li><li><strong>字符串比较</strong>： <ul><li><code>STRCMP()</code>：用于比较两个字符串的大小。</li></ul></li></ol><p><strong><img src="' + _imports_18 + '" alt="image-20231229160114257"></strong></p></blockquote><p>根据我们创建的 stu 数据表, 进行以下查询语句</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 查询年龄大于20岁的学员信息：</span>\n<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu <span class="token keyword">where</span> age <span class="token operator">&gt;</span> <span class="token number">20</span><span class="token punctuation">;</span>\n\n<span class="token comment"># 查询年龄大于等于20岁的学员信息</span>\n<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu <span class="token keyword">where</span> age <span class="token operator">&gt;=</span> <span class="token number">20</span><span class="token punctuation">;</span>\n\n<span class="token comment"># 查询年龄大于等于20岁 并且 年龄 小于等于 30岁 的学员信息</span>\n<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu <span class="token keyword">where</span> age <span class="token operator">&gt;=</span> <span class="token number">20</span> <span class="token operator">&amp;&amp;</span>  age <span class="token operator">&lt;=</span> <span class="token number">30</span><span class="token punctuation">;</span>\n<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu <span class="token keyword">where</span> age <span class="token operator">&gt;=</span> <span class="token number">20</span> <span class="token operator">and</span>  age <span class="token operator">&lt;=</span> <span class="token number">30</span><span class="token punctuation">;</span>\n<span class="token comment">-- 上面语句中 &amp;&amp;  和  and  都表示并且的意思。建议使用 and 。</span>\n<span class="token comment">-- 也可以使用  between ... and 来实现上面需求</span>\n<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu <span class="token keyword">where</span> age <span class="token operator">BETWEEN</span> <span class="token number">20</span> <span class="token operator">and</span> <span class="token number">30</span><span class="token punctuation">;</span>\n\n\n<span class="token comment"># 查询入学日期在&#39;1998-09-01&#39; 到 &#39;1999-09-01&#39; 之间的学员信息：</span>\n<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu <span class="token keyword">where</span> hire_date <span class="token operator">BETWEEN</span> <span class="token string">&#39;1998-09-01&#39;</span> <span class="token operator">and</span> <span class="token string">&#39;1999-09-01&#39;</span><span class="token punctuation">;</span>\n\n\n<span class="token comment"># 查询年龄等于18岁的学员信息：</span>\nelect <span class="token operator">*</span> <span class="token keyword">from</span> stu <span class="token keyword">where</span> age <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">;</span>\n\n<span class="token comment"># 查询年龄不等于18岁的学员信息：</span>\n<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu <span class="token keyword">where</span> age <span class="token operator">!=</span> <span class="token number">18</span><span class="token punctuation">;</span>\n<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu <span class="token keyword">where</span> age <span class="token operator">&lt;&gt;</span> <span class="token number">18</span><span class="token punctuation">;</span>\n\n<span class="token comment"># 查询年龄等于18岁 或者 年龄等于20岁 或者 年龄等于22岁的学员信息</span>\n<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu <span class="token keyword">where</span> age <span class="token operator">=</span> <span class="token number">18</span> <span class="token operator">or</span> age <span class="token operator">=</span> <span class="token number">20</span> <span class="token operator">or</span> age <span class="token operator">=</span> <span class="token number">22</span><span class="token punctuation">;</span>\n<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu <span class="token keyword">where</span> age <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">20</span> <span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\n<span class="token comment"># 查询英语成绩为 null的学员信息</span>\n<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu <span class="token keyword">where</span> english <span class="token operator">=</span> <span class="token boolean">null</span><span class="token punctuation">;</span> <span class="token comment">-- 这个语句是不行的</span>\n<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu <span class="token keyword">where</span> english <span class="token operator">is</span> <span class="token boolean">null</span><span class="token punctuation">;</span>\n<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu <span class="token keyword">where</span> english <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">;</span>\n\n<span class="token comment">-- null值的比较不能使用 =  或者 != 。需要使用 is  或者 is not</span>\n\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>模糊查询使用like关键字，可以使用通配符进行占位:</p><ul><li>_ : 代表单个任意字符</li><li>% : 代表任意个数字符</li></ul><p><strong>stu 的数据表信息</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu<span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">----+----------+-----+-----+---------+-------+---------+------------+</span>\n<span class="token operator">|</span> id <span class="token operator">|</span> name     <span class="token operator">|</span> age <span class="token operator">|</span> sex <span class="token operator">|</span> address <span class="token operator">|</span> math  <span class="token operator">|</span> english <span class="token operator">|</span> hire_date  <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----+----------+-----+-----+---------+-------+---------+------------+</span>\n<span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> 马运     <span class="token operator">|</span>  <span class="token number">55</span> <span class="token operator">|</span> 男  <span class="token operator">|</span> 杭州    <span class="token operator">|</span> <span class="token number">66.00</span> <span class="token operator">|</span>   <span class="token number">78.00</span> <span class="token operator">|</span> <span class="token number">1995</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> 马花疼   <span class="token operator">|</span>  <span class="token number">45</span> <span class="token operator">|</span> 女  <span class="token operator">|</span> 深圳    <span class="token operator">|</span> <span class="token number">98.00</span> <span class="token operator">|</span>   <span class="token number">87.00</span> <span class="token operator">|</span> <span class="token number">1998</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">3</span> <span class="token operator">|</span> 马斯克   <span class="token operator">|</span>  <span class="token number">55</span> <span class="token operator">|</span> 男  <span class="token operator">|</span> 香港    <span class="token operator">|</span> <span class="token number">56.00</span> <span class="token operator">|</span>   <span class="token number">77.00</span> <span class="token operator">|</span> <span class="token number">1999</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">02</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">4</span> <span class="token operator">|</span> 柳白     <span class="token operator">|</span>  <span class="token number">20</span> <span class="token operator">|</span> 女  <span class="token operator">|</span> 湖南    <span class="token operator">|</span> <span class="token number">76.00</span> <span class="token operator">|</span>   <span class="token number">65.00</span> <span class="token operator">|</span> <span class="token number">1997</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">05</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">5</span> <span class="token operator">|</span> 柳青     <span class="token operator">|</span>  <span class="token number">20</span> <span class="token operator">|</span> 男  <span class="token operator">|</span> 湖南    <span class="token operator">|</span> <span class="token number">86.00</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token number">1998</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">6</span> <span class="token operator">|</span> 刘德花   <span class="token operator">|</span>  <span class="token number">57</span> <span class="token operator">|</span> 男  <span class="token operator">|</span> 香港    <span class="token operator">|</span> <span class="token number">99.00</span> <span class="token operator">|</span>   <span class="token number">99.00</span> <span class="token operator">|</span> <span class="token number">1998</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">7</span> <span class="token operator">|</span> 张学右   <span class="token operator">|</span>  <span class="token number">22</span> <span class="token operator">|</span> 女  <span class="token operator">|</span> 香港    <span class="token operator">|</span> <span class="token number">99.00</span> <span class="token operator">|</span>   <span class="token number">99.00</span> <span class="token operator">|</span> <span class="token number">1998</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">8</span> <span class="token operator">|</span> 德玛西亚 <span class="token operator">|</span>  <span class="token number">18</span> <span class="token operator">|</span> 男  <span class="token operator">|</span> 南京    <span class="token operator">|</span> <span class="token number">56.00</span> <span class="token operator">|</span>   <span class="token number">65.00</span> <span class="token operator">|</span> <span class="token number">1994</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">02</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">9</span> <span class="token operator">|</span> ikun     <span class="token operator">|</span>  <span class="token number">25</span> <span class="token operator">|</span> 坤  <span class="token operator">|</span> 上海    <span class="token operator">|</span> <span class="token number">97.00</span> <span class="token operator">|</span>   <span class="token number">98.00</span> <span class="token operator">|</span> <span class="token number">1994</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----+----------+-----+-----+---------+-------+---------+------------+</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询姓&#39;马&#39;的学员信息：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu <span class="token keyword">where</span> name <span class="token operator">like</span> <span class="token string">&#39;马%&#39;</span><span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">----+--------+-----+-----+---------+-------+---------+------------+</span>\n<span class="token operator">|</span> id <span class="token operator">|</span> name   <span class="token operator">|</span> age <span class="token operator">|</span> sex <span class="token operator">|</span> address <span class="token operator">|</span> math  <span class="token operator">|</span> english <span class="token operator">|</span> hire_date  <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----+--------+-----+-----+---------+-------+---------+------------+</span>\n<span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> 马运   <span class="token operator">|</span>  <span class="token number">55</span> <span class="token operator">|</span> 男  <span class="token operator">|</span> 杭州    <span class="token operator">|</span> <span class="token number">66.00</span> <span class="token operator">|</span>   <span class="token number">78.00</span> <span class="token operator">|</span> <span class="token number">1995</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> 马花疼 <span class="token operator">|</span>  <span class="token number">45</span> <span class="token operator">|</span> 女  <span class="token operator">|</span> 深圳    <span class="token operator">|</span> <span class="token number">98.00</span> <span class="token operator">|</span>   <span class="token number">87.00</span> <span class="token operator">|</span> <span class="token number">1998</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">3</span> <span class="token operator">|</span> 马斯克 <span class="token operator">|</span>  <span class="token number">55</span> <span class="token operator">|</span> 男  <span class="token operator">|</span> 香港    <span class="token operator">|</span> <span class="token number">56.00</span> <span class="token operator">|</span>   <span class="token number">77.00</span> <span class="token operator">|</span> <span class="token number">1999</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">02</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----+--------+-----+-----+---------+-------+---------+------------+</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询第二个字是&#39;花&#39;的学员信息：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu <span class="token keyword">where</span> name <span class="token operator">like</span> <span class="token string">&#39;_花%&#39;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查询名字中包含 &#39;德&#39; 的学员信息：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu <span class="token keyword">where</span> name <span class="token operator">like</span> <span class="token string">&#39;%德%&#39;</span><span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">----+----------+-----+-----+---------+-------+---------+------------+</span>\n<span class="token operator">|</span> id <span class="token operator">|</span> name     <span class="token operator">|</span> age <span class="token operator">|</span> sex <span class="token operator">|</span> address <span class="token operator">|</span> math  <span class="token operator">|</span> english <span class="token operator">|</span> hire_date  <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----+----------+-----+-----+---------+-------+---------+------------+</span>\n<span class="token operator">|</span>  <span class="token number">6</span> <span class="token operator">|</span> 刘德花   <span class="token operator">|</span>  <span class="token number">57</span> <span class="token operator">|</span> 男  <span class="token operator">|</span> 香港    <span class="token operator">|</span> <span class="token number">99.00</span> <span class="token operator">|</span>   <span class="token number">99.00</span> <span class="token operator">|</span> <span class="token number">1998</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">8</span> <span class="token operator">|</span> 德玛西亚 <span class="token operator">|</span>  <span class="token number">18</span> <span class="token operator">|</span> 男  <span class="token operator">|</span> 南京    <span class="token operator">|</span> <span class="token number">56.00</span> <span class="token operator">|</span>   <span class="token number">65.00</span> <span class="token operator">|</span> <span class="token number">1994</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">02</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----+----------+-----+-----+---------+-------+---------+------------+</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询所有包含&#39;花&#39; 的数据</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu <span class="token keyword">where</span> name <span class="token operator">like</span> <span class="token string">&#39;%花%&#39;</span><span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">----+--------+-----+-----+---------+-------+---------+------------+</span>\n<span class="token operator">|</span> id <span class="token operator">|</span> name   <span class="token operator">|</span> age <span class="token operator">|</span> sex <span class="token operator">|</span> address <span class="token operator">|</span> math  <span class="token operator">|</span> english <span class="token operator">|</span> hire_date  <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----+--------+-----+-----+---------+-------+---------+------------+</span>\n<span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> 马花疼 <span class="token operator">|</span>  <span class="token number">45</span> <span class="token operator">|</span> 女  <span class="token operator">|</span> 深圳    <span class="token operator">|</span> <span class="token number">98.00</span> <span class="token operator">|</span>   <span class="token number">87.00</span> <span class="token operator">|</span> <span class="token number">1998</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">6</span> <span class="token operator">|</span> 刘德花 <span class="token operator">|</span>  <span class="token number">57</span> <span class="token operator">|</span> 男  <span class="token operator">|</span> 香港    <span class="token operator">|</span> <span class="token number">99.00</span> <span class="token operator">|</span>   <span class="token number">99.00</span> <span class="token operator">|</span> <span class="token number">1998</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----+--------+-----+-----+---------+-------+---------+------------+</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>条件去重查询</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> <span class="token keyword">distinct</span> address <span class="token keyword">from</span> stu<span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">---------+</span>\n<span class="token operator">|</span> address <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">---------+</span>\n<span class="token operator">|</span> 杭州    <span class="token operator">|</span>\n<span class="token operator">|</span> 深圳    <span class="token operator">|</span>\n<span class="token operator">|</span> 香港    <span class="token operator">|</span>\n<span class="token operator">|</span> 湖南    <span class="token operator">|</span>\n<span class="token operator">|</span> 南京    <span class="token operator">|</span>\n<span class="token operator">|</span> 上海    <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">---------+</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-排序查询" tabindex="-1"><a class="header-anchor" href="#_3-排序查询" aria-hidden="true">#</a> 3, 排序查询</h3><p>语法：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表名 <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> 排序字段名<span class="token number">1</span> <span class="token punctuation">[</span>排序方式<span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>排序字段名<span class="token number">2</span> <span class="token punctuation">[</span>排序方式<span class="token number">2</span><span class="token punctuation">]</span> …<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上述语句中的排序方式有两种，分别是：</p><ul><li>ASC ： 升序排列 （默认值）</li><li>DESC ： 降序排列</li><li>如果有多个排序条件，当前边的条件值一样时，才会根据第二条件进行排序</li></ul><p>查询学生信息，<strong>按照年龄升序排列</strong> ：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu <span class="token keyword">order</span> <span class="token keyword">by</span> age <span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">----+----------+-----+-----+---------+-------+---------+------------+</span>\n<span class="token operator">|</span> id <span class="token operator">|</span> name     <span class="token operator">|</span> age <span class="token operator">|</span> sex <span class="token operator">|</span> address <span class="token operator">|</span> math  <span class="token operator">|</span> english <span class="token operator">|</span> hire_date  <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----+----------+-----+-----+---------+-------+---------+------------+</span>\n<span class="token operator">|</span>  <span class="token number">8</span> <span class="token operator">|</span> 德玛西亚 <span class="token operator">|</span>  <span class="token number">18</span> <span class="token operator">|</span> 男  <span class="token operator">|</span> 南京    <span class="token operator">|</span> <span class="token number">56.00</span> <span class="token operator">|</span>   <span class="token number">65.00</span> <span class="token operator">|</span> <span class="token number">1994</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">02</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">4</span> <span class="token operator">|</span> 柳白     <span class="token operator">|</span>  <span class="token number">20</span> <span class="token operator">|</span> 女  <span class="token operator">|</span> 湖南    <span class="token operator">|</span> <span class="token number">76.00</span> <span class="token operator">|</span>   <span class="token number">65.00</span> <span class="token operator">|</span> <span class="token number">1997</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">05</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">5</span> <span class="token operator">|</span> 柳青     <span class="token operator">|</span>  <span class="token number">20</span> <span class="token operator">|</span> 男  <span class="token operator">|</span> 湖南    <span class="token operator">|</span> <span class="token number">86.00</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token number">1998</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">7</span> <span class="token operator">|</span> 张学右   <span class="token operator">|</span>  <span class="token number">22</span> <span class="token operator">|</span> 女  <span class="token operator">|</span> 香港    <span class="token operator">|</span> <span class="token number">99.00</span> <span class="token operator">|</span>   <span class="token number">99.00</span> <span class="token operator">|</span> <span class="token number">1998</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">9</span> <span class="token operator">|</span> ikun     <span class="token operator">|</span>  <span class="token number">25</span> <span class="token operator">|</span> 坤  <span class="token operator">|</span> 上海    <span class="token operator">|</span> <span class="token number">97.00</span> <span class="token operator">|</span>   <span class="token number">98.00</span> <span class="token operator">|</span> <span class="token number">1994</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> 马花疼   <span class="token operator">|</span>  <span class="token number">45</span> <span class="token operator">|</span> 女  <span class="token operator">|</span> 深圳    <span class="token operator">|</span> <span class="token number">98.00</span> <span class="token operator">|</span>   <span class="token number">87.00</span> <span class="token operator">|</span> <span class="token number">1998</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> 马运     <span class="token operator">|</span>  <span class="token number">55</span> <span class="token operator">|</span> 男  <span class="token operator">|</span> 杭州    <span class="token operator">|</span> <span class="token number">66.00</span> <span class="token operator">|</span>   <span class="token number">78.00</span> <span class="token operator">|</span> <span class="token number">1995</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">3</span> <span class="token operator">|</span> 马斯克   <span class="token operator">|</span>  <span class="token number">55</span> <span class="token operator">|</span> 男  <span class="token operator">|</span> 香港    <span class="token operator">|</span> <span class="token number">56.00</span> <span class="token operator">|</span>   <span class="token number">77.00</span> <span class="token operator">|</span> <span class="token number">1999</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">02</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">6</span> <span class="token operator">|</span> 刘德花   <span class="token operator">|</span>  <span class="token number">57</span> <span class="token operator">|</span> 男  <span class="token operator">|</span> 香港    <span class="token operator">|</span> <span class="token number">99.00</span> <span class="token operator">|</span>   <span class="token number">99.00</span> <span class="token operator">|</span> <span class="token number">1998</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----+----------+-----+-----+---------+-------+---------+------------+</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询学生信息，<strong>按照数学成绩降序排列</strong>：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu <span class="token keyword">order</span> <span class="token keyword">by</span> math <span class="token keyword">desc</span> <span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">----+----------+-----+-----+---------+-------+---------+------------+</span>\n<span class="token operator">|</span> id <span class="token operator">|</span> name     <span class="token operator">|</span> age <span class="token operator">|</span> sex <span class="token operator">|</span> address <span class="token operator">|</span> math  <span class="token operator">|</span> english <span class="token operator">|</span> hire_date  <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----+----------+-----+-----+---------+-------+---------+------------+</span>\n<span class="token operator">|</span>  <span class="token number">6</span> <span class="token operator">|</span> 刘德花   <span class="token operator">|</span>  <span class="token number">57</span> <span class="token operator">|</span> 男  <span class="token operator">|</span> 香港    <span class="token operator">|</span> <span class="token number">99.00</span> <span class="token operator">|</span>   <span class="token number">99.00</span> <span class="token operator">|</span> <span class="token number">1998</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">7</span> <span class="token operator">|</span> 张学右   <span class="token operator">|</span>  <span class="token number">22</span> <span class="token operator">|</span> 女  <span class="token operator">|</span> 香港    <span class="token operator">|</span> <span class="token number">99.00</span> <span class="token operator">|</span>   <span class="token number">99.00</span> <span class="token operator">|</span> <span class="token number">1998</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> 马花疼   <span class="token operator">|</span>  <span class="token number">45</span> <span class="token operator">|</span> 女  <span class="token operator">|</span> 深圳    <span class="token operator">|</span> <span class="token number">98.00</span> <span class="token operator">|</span>   <span class="token number">87.00</span> <span class="token operator">|</span> <span class="token number">1998</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">9</span> <span class="token operator">|</span> ikun     <span class="token operator">|</span>  <span class="token number">25</span> <span class="token operator">|</span> 坤  <span class="token operator">|</span> 上海    <span class="token operator">|</span> <span class="token number">97.00</span> <span class="token operator">|</span>   <span class="token number">98.00</span> <span class="token operator">|</span> <span class="token number">1994</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">5</span> <span class="token operator">|</span> 柳青     <span class="token operator">|</span>  <span class="token number">20</span> <span class="token operator">|</span> 男  <span class="token operator">|</span> 湖南    <span class="token operator">|</span> <span class="token number">86.00</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token number">1998</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">4</span> <span class="token operator">|</span> 柳白     <span class="token operator">|</span>  <span class="token number">20</span> <span class="token operator">|</span> 女  <span class="token operator">|</span> 湖南    <span class="token operator">|</span> <span class="token number">76.00</span> <span class="token operator">|</span>   <span class="token number">65.00</span> <span class="token operator">|</span> <span class="token number">1997</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">05</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> 马运     <span class="token operator">|</span>  <span class="token number">55</span> <span class="token operator">|</span> 男  <span class="token operator">|</span> 杭州    <span class="token operator">|</span> <span class="token number">66.00</span> <span class="token operator">|</span>   <span class="token number">78.00</span> <span class="token operator">|</span> <span class="token number">1995</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">3</span> <span class="token operator">|</span> 马斯克   <span class="token operator">|</span>  <span class="token number">55</span> <span class="token operator">|</span> 男  <span class="token operator">|</span> 香港    <span class="token operator">|</span> <span class="token number">56.00</span> <span class="token operator">|</span>   <span class="token number">77.00</span> <span class="token operator">|</span> <span class="token number">1999</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">02</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">8</span> <span class="token operator">|</span> 德玛西亚 <span class="token operator">|</span>  <span class="token number">18</span> <span class="token operator">|</span> 男  <span class="token operator">|</span> 南京    <span class="token operator">|</span> <span class="token number">56.00</span> <span class="token operator">|</span>   <span class="token number">65.00</span> <span class="token operator">|</span> <span class="token number">1994</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">02</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----+----------+-----+-----+---------+-------+---------+------------+</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询学生信息，<strong>按照数学成绩降序排列</strong>，<strong>如果数学成绩一样</strong>，再<strong>按照英语成绩升序排列</strong>：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu <span class="token keyword">order</span> <span class="token keyword">by</span> math <span class="token keyword">desc</span> <span class="token punctuation">,</span> english <span class="token keyword">asc</span> <span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">----+----------+-----+-----+---------+-------+---------+------------+</span>\n<span class="token operator">|</span> id <span class="token operator">|</span> name     <span class="token operator">|</span> age <span class="token operator">|</span> sex <span class="token operator">|</span> address <span class="token operator">|</span> math  <span class="token operator">|</span> english <span class="token operator">|</span> hire_date  <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----+----------+-----+-----+---------+-------+---------+------------+</span>\n<span class="token operator">|</span>  <span class="token number">6</span> <span class="token operator">|</span> 刘德花   <span class="token operator">|</span>  <span class="token number">57</span> <span class="token operator">|</span> 男  <span class="token operator">|</span> 香港    <span class="token operator">|</span> <span class="token number">99.00</span> <span class="token operator">|</span>   <span class="token number">99.00</span> <span class="token operator">|</span> <span class="token number">1998</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">7</span> <span class="token operator">|</span> 张学右   <span class="token operator">|</span>  <span class="token number">22</span> <span class="token operator">|</span> 女  <span class="token operator">|</span> 香港    <span class="token operator">|</span> <span class="token number">99.00</span> <span class="token operator">|</span>   <span class="token number">99.00</span> <span class="token operator">|</span> <span class="token number">1998</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> 马花疼   <span class="token operator">|</span>  <span class="token number">45</span> <span class="token operator">|</span> 女  <span class="token operator">|</span> 深圳    <span class="token operator">|</span> <span class="token number">98.00</span> <span class="token operator">|</span>   <span class="token number">87.00</span> <span class="token operator">|</span> <span class="token number">1998</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">9</span> <span class="token operator">|</span> ikun     <span class="token operator">|</span>  <span class="token number">25</span> <span class="token operator">|</span> 坤  <span class="token operator">|</span> 上海    <span class="token operator">|</span> <span class="token number">97.00</span> <span class="token operator">|</span>   <span class="token number">98.00</span> <span class="token operator">|</span> <span class="token number">1994</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">5</span> <span class="token operator">|</span> 柳青     <span class="token operator">|</span>  <span class="token number">20</span> <span class="token operator">|</span> 男  <span class="token operator">|</span> 湖南    <span class="token operator">|</span> <span class="token number">86.00</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token number">1998</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">4</span> <span class="token operator">|</span> 柳白     <span class="token operator">|</span>  <span class="token number">20</span> <span class="token operator">|</span> 女  <span class="token operator">|</span> 湖南    <span class="token operator">|</span> <span class="token number">76.00</span> <span class="token operator">|</span>   <span class="token number">65.00</span> <span class="token operator">|</span> <span class="token number">1997</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">05</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> 马运     <span class="token operator">|</span>  <span class="token number">55</span> <span class="token operator">|</span> 男  <span class="token operator">|</span> 杭州    <span class="token operator">|</span> <span class="token number">66.00</span> <span class="token operator">|</span>   <span class="token number">78.00</span> <span class="token operator">|</span> <span class="token number">1995</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">8</span> <span class="token operator">|</span> 德玛西亚 <span class="token operator">|</span>  <span class="token number">18</span> <span class="token operator">|</span> 男  <span class="token operator">|</span> 南京    <span class="token operator">|</span> <span class="token number">56.00</span> <span class="token operator">|</span>   <span class="token number">65.00</span> <span class="token operator">|</span> <span class="token number">1994</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">02</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">3</span> <span class="token operator">|</span> 马斯克   <span class="token operator">|</span>  <span class="token number">55</span> <span class="token operator">|</span> 男  <span class="token operator">|</span> 香港    <span class="token operator">|</span> <span class="token number">56.00</span> <span class="token operator">|</span>   <span class="token number">77.00</span> <span class="token operator">|</span> <span class="token number">1999</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">02</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----+----------+-----+-----+---------+-------+---------+------------+</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-聚合函数-sum-min-max-avg" tabindex="-1"><a class="header-anchor" href="#_4-聚合函数-sum-min-max-avg" aria-hidden="true">#</a> 4, 聚合函数(sum,min max avg)</h3><p>将一列数据作为一个整体，进行<strong>纵向计算</strong>。</p><p>可以理解为excel表中的所有学生的分数求和, 平均分.....等操作</p><p><strong>字段和数据类型</strong></p><p><img src="' + _imports_19 + '" alt="image-20231229161400589"></p><p><strong>数据表</strong></p><p><img src="' + _imports_20 + '" alt="image-20231229161456870"></p><p>现有一需求让我们求表中所有数据的数学成绩的总和。这就是对math字段进行纵向求和。聚合函数分类：</p><table><thead><tr><th>函数名</th><th>功能</th></tr></thead><tbody><tr><td>count(列名)</td><td>统计数量（一般选用不为null的列）</td></tr><tr><td>max(列名)</td><td>最大值</td></tr><tr><td>min(列名)</td><td>最小值</td></tr><tr><td>sum(列名)</td><td>求和</td></tr><tr><td>avg(列名)</td><td>平均值</td></tr></tbody></table><p>语法：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 聚合函数名<span class="token punctuation">(</span>列名<span class="token punctuation">)</span> <span class="token keyword">FROM</span> 表<span class="token punctuation">;</span> <span class="token comment">-- null 值不参与所有聚合函数运算</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>统计班级一共有多少个学生：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token keyword">from</span> stu<span class="token punctuation">;</span>\n<span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span>english<span class="token punctuation">)</span> <span class="token keyword">from</span> stu<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>上面语句根据某个字段进行统计，<strong>如果该字段某一行的值为null的话，将不会被统计</strong>。所以可以在count(<em>) 来实现。</em> 表示所有字段数据，一行中也不可能所有的数据都为null，所以建议使用 count(*)：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> stu<span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">----------+</span>\n<span class="token operator">|</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----------+</span>\n<span class="token operator">|</span>        <span class="token number">9</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----------+</span>\n\n<span class="token comment"># 查询数学成绩的最高分：</span>\n<span class="token keyword">select</span> <span class="token function">max</span><span class="token punctuation">(</span>math<span class="token punctuation">)</span> <span class="token keyword">from</span> stu<span class="token punctuation">;</span>\n\n<span class="token comment"># 查询数学成绩的最低分：</span>\n<span class="token keyword">select</span> <span class="token function">min</span><span class="token punctuation">(</span>math<span class="token punctuation">)</span> <span class="token keyword">from</span> stu<span class="token punctuation">;</span>\n\n<span class="token comment"># 查询数学成绩的总分：</span>\n<span class="token keyword">select</span> <span class="token function">sum</span><span class="token punctuation">(</span>math<span class="token punctuation">)</span> <span class="token keyword">from</span> stu<span class="token punctuation">;</span>\n\n<span class="token comment"># 查询数学成绩的平均分：</span>\n<span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>math<span class="token punctuation">)</span> <span class="token keyword">from</span> stu<span class="token punctuation">;</span>\n\n<span class="token comment"># 查询英语成绩的最低分：</span>\n<span class="token keyword">select</span> <span class="token function">min</span><span class="token punctuation">(</span>english<span class="token punctuation">)</span> <span class="token keyword">from</span> stu<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-分组查询" tabindex="-1"><a class="header-anchor" href="#_5-分组查询" aria-hidden="true">#</a> 5, 分组查询</h3><p>语法：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表名 <span class="token punctuation">[</span><span class="token keyword">WHERE</span> 分组前条件限定<span class="token punctuation">]</span> <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> 分组字段名 <span class="token punctuation">[</span><span class="token keyword">HAVING</span> 分组后条件过滤<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token comment">--  分组之后，查询的字段为聚合函数和分组字段，查询其他字段无任何意义</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>分组之后的条件指定查询, 不能使用 where , 而是要使用 having</p></blockquote><p>查询男同学和女同学各自的数学平均分：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> sex<span class="token punctuation">,</span> <span class="token function">avg</span><span class="token punctuation">(</span>math<span class="token punctuation">)</span> <span class="token keyword">from</span> stu <span class="token keyword">group</span> <span class="token keyword">by</span> sex<span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">-----+-----------+</span>\n<span class="token operator">|</span> sex <span class="token operator">|</span> <span class="token function">avg</span><span class="token punctuation">(</span>math<span class="token punctuation">)</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----+-----------+</span>\n<span class="token operator">|</span> 坤  <span class="token operator">|</span> <span class="token number">97.000000</span> <span class="token operator">|</span>\n<span class="token operator">|</span> 女  <span class="token operator">|</span> <span class="token number">91.000000</span> <span class="token operator">|</span>\n<span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">72.600000</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----+-----------+</span>\n<span class="token number">3</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.03</span> sec<span class="token punctuation">)</span>\n\n<span class="token comment">-- 分组之后，查询的字段为聚合函数和分组字段，查询其他字段无任何意义</span>\n<span class="token keyword">select</span> name<span class="token punctuation">,</span> sex<span class="token punctuation">,</span> <span class="token function">avg</span><span class="token punctuation">(</span>math<span class="token punctuation">)</span> <span class="token keyword">from</span> stu <span class="token keyword">group</span> <span class="token keyword">by</span> sex<span class="token punctuation">;</span>  <span class="token comment">-- 这里查询name字段就没有任何意义</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询男同学和女同学各自的数学平均分，以及各自人数：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> sex<span class="token punctuation">,</span> <span class="token function">avg</span><span class="token punctuation">(</span>math<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> stu <span class="token keyword">group</span> <span class="token keyword">by</span> sex<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查询男同学和女同学各自的数学平均分，以及各自人数，要求：分数低于70分的不参与分组：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> sex<span class="token punctuation">,</span> <span class="token function">avg</span><span class="token punctuation">(</span>math<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> stu <span class="token keyword">where</span> math <span class="token operator">&gt;</span> <span class="token number">70</span> <span class="token keyword">group</span> <span class="token keyword">by</span> sex<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查询男同学和女同学各自的数学平均分，以及各自人数，要求：分数低于70分的不参与分组，分组之后人数大于2个的：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> sex<span class="token punctuation">,</span> <span class="token function">avg</span><span class="token punctuation">(</span>math<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> stu <span class="token keyword">where</span> math <span class="token operator">&gt;</span> <span class="token number">70</span> <span class="token keyword">group</span> <span class="token keyword">by</span> sex <span class="token keyword">having</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span>  <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>where 和 having 区别：</strong></p><ul><li>执行时机不一样：where 是分组之前进行限定，不满足where条件，则不参与分组，而having是分组之后对结果进行过滤。</li><li>可判断的条件不一样：<strong>where 不能对聚合函数进行判断</strong>，having 可以。</li></ul><h3 id="_6-分页查询" tabindex="-1"><a class="header-anchor" href="#_6-分页查询" aria-hidden="true">#</a> 6, 分页查询</h3><p>语法：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表名 <span class="token keyword">LIMIT</span>  起始索引 <span class="token punctuation">,</span> 查询条目数<span class="token punctuation">;</span>\n\n<span class="token comment">-- 上述语句中的起始索引是从0开始</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从0开始查询，查询3条数据：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu <span class="token keyword">limit</span> <span class="token number">0</span> <span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">----+--------+-----+-----+---------+-------+---------+------------+</span>\n<span class="token operator">|</span> id <span class="token operator">|</span> name   <span class="token operator">|</span> age <span class="token operator">|</span> sex <span class="token operator">|</span> address <span class="token operator">|</span> math  <span class="token operator">|</span> english <span class="token operator">|</span> hire_date  <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----+--------+-----+-----+---------+-------+---------+------------+</span>\n<span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> 马运   <span class="token operator">|</span>  <span class="token number">55</span> <span class="token operator">|</span> 男  <span class="token operator">|</span> 杭州    <span class="token operator">|</span> <span class="token number">66.00</span> <span class="token operator">|</span>   <span class="token number">78.00</span> <span class="token operator">|</span> <span class="token number">1995</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> 马花疼 <span class="token operator">|</span>  <span class="token number">45</span> <span class="token operator">|</span> 女  <span class="token operator">|</span> 深圳    <span class="token operator">|</span> <span class="token number">98.00</span> <span class="token operator">|</span>   <span class="token number">87.00</span> <span class="token operator">|</span> <span class="token number">1998</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">3</span> <span class="token operator">|</span> 马斯克 <span class="token operator">|</span>  <span class="token number">55</span> <span class="token operator">|</span> 男  <span class="token operator">|</span> 香港    <span class="token operator">|</span> <span class="token number">56.00</span> <span class="token operator">|</span>   <span class="token number">77.00</span> <span class="token operator">|</span> <span class="token number">1999</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">02</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----+--------+-----+-----+---------+-------+---------+------------+</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>每页显示3条数据，查询第1页数据：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu <span class="token keyword">limit</span> <span class="token number">0</span> <span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>每页显示3条数据，查询第2页数据：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu <span class="token keyword">limit</span> <span class="token number">3</span> <span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">----+--------+-----+-----+---------+-------+---------+------------+</span>\n<span class="token operator">|</span> id <span class="token operator">|</span> name   <span class="token operator">|</span> age <span class="token operator">|</span> sex <span class="token operator">|</span> address <span class="token operator">|</span> math  <span class="token operator">|</span> english <span class="token operator">|</span> hire_date  <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----+--------+-----+-----+---------+-------+---------+------------+</span>\n<span class="token operator">|</span>  <span class="token number">4</span> <span class="token operator">|</span> 柳白   <span class="token operator">|</span>  <span class="token number">20</span> <span class="token operator">|</span> 女  <span class="token operator">|</span> 湖南    <span class="token operator">|</span> <span class="token number">76.00</span> <span class="token operator">|</span>   <span class="token number">65.00</span> <span class="token operator">|</span> <span class="token number">1997</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">05</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">5</span> <span class="token operator">|</span> 柳青   <span class="token operator">|</span>  <span class="token number">20</span> <span class="token operator">|</span> 男  <span class="token operator">|</span> 湖南    <span class="token operator">|</span> <span class="token number">86.00</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token number">1998</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">6</span> <span class="token operator">|</span> 刘德花 <span class="token operator">|</span>  <span class="token number">57</span> <span class="token operator">|</span> 男  <span class="token operator">|</span> 香港    <span class="token operator">|</span> <span class="token number">99.00</span> <span class="token operator">|</span>   <span class="token number">99.00</span> <span class="token operator">|</span> <span class="token number">1998</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----+--------+-----+-----+---------+-------+---------+------------+</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>每页显示3条数据，查询第3页数据：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu <span class="token keyword">limit</span> <span class="token number">6</span> <span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>从上面的练习推导出起始索引计算公式：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>起始索引 = (当前页码 - 1) * 每页显示的条数\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="六-约束" tabindex="-1"><a class="header-anchor" href="#六-约束" aria-hidden="true">#</a> 六, 约束</h2><h3 id="_1-什么是约束" tabindex="-1"><a class="header-anchor" href="#_1-什么是约束" aria-hidden="true">#</a> 1, 什么是约束</h3><p>看如下表：</p><p><img src="' + _imports_21 + '" alt="image-20240102123753035"></p><p>上面表存在的一些问题：</p><ul><li>id 列一般是用标示数据的唯一性的，而上述表中的 id 为1的有三条数据，并且 <code>马花疼</code> 没有id进行标示</li><li><code>柳白</code> 这条数据的age列的数据是3000，而人也不可能活到3000岁</li><li><code>马运</code> 这条数据的math数学成绩是-5，而数学学得再不好也不可能出现负分</li><li><code>柳青</code> 这条数据的english列（英文成绩）值为null，而成绩即使没考也得是0分</li></ul><p>针对以上的问题, <strong>从数据库层面在添加数据的时候进行限制</strong>，这个就是约束。<strong>约束是作用于表中列上的规则</strong>，用于限制加入表的数据。例如：我们可以给 id 列加约束，让其值不能重复，不能为null值。</p><p>约束的存在保证了数据库中数据的正确性、有效性和完整性。添加约束可以在添加数据的时候就限制不正确的数据，年龄是3000，数学成绩是-5分这样无效的数据，继而保障数据的完整性。</p><p>当前我的 stu 表的解构</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">desc</span> stu<span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">-----------+--------------+------+-----+---------+-------+</span>\n<span class="token operator">|</span> Field     <span class="token operator">|</span> <span class="token keyword">Type</span>         <span class="token operator">|</span> <span class="token boolean">Null</span> <span class="token operator">|</span> <span class="token keyword">Key</span> <span class="token operator">|</span> <span class="token keyword">Default</span> <span class="token operator">|</span> Extra <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----------+--------------+------+-----+---------+-------+</span>\n<span class="token operator">|</span> id        <span class="token operator">|</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>      <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span>       <span class="token operator">|</span>\n<span class="token operator">|</span> name      <span class="token operator">|</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>  <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span>       <span class="token operator">|</span>\n<span class="token operator">|</span> age       <span class="token operator">|</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>      <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span>       <span class="token operator">|</span>\n<span class="token operator">|</span> sex       <span class="token operator">|</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>   <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span>       <span class="token operator">|</span>\n<span class="token operator">|</span> address   <span class="token operator">|</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span>       <span class="token operator">|</span>\n<span class="token operator">|</span> math      <span class="token operator">|</span> <span class="token keyword">double</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>  <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span>       <span class="token operator">|</span>\n<span class="token operator">|</span> english   <span class="token operator">|</span> <span class="token keyword">double</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>  <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span>       <span class="token operator">|</span>\n<span class="token operator">|</span> hire_date <span class="token operator">|</span> <span class="token keyword">date</span>         <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span>       <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----------+--------------+------+-----+---------+-------+</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-约束分类" tabindex="-1"><a class="header-anchor" href="#_2-约束分类" aria-hidden="true">#</a> 2, 约束分类</h3><p>非空约束： 关键字是 <strong>NOT NULL</strong></p><ul><li>保证列中所有的数据不能有null值。</li><li>例如：id列在添加 <code>马花疼</code> 这条数据时就不能添加成功。</li></ul><p>唯一约束：关键字是 <strong>UNIQUE</strong></p><ul><li>保证列中所有数据各不相同。</li><li>例如：id列中三条数据的值都是1，这样的数据在添加时是绝对不允许的。</li></ul><p>主键约束： 关键字是 <strong>PRIMARY KEY</strong></p><ul><li>主键是一行数据的唯一标识，要求非空且唯一。一般我们都会给没张表添加一个主键列用来唯一标识数据。</li><li>例如：上图表中id就可以作为主键，来标识每条数据。那么这样就要求数据中id的值不能重复，不能为null值。</li></ul><p>检查约束： 关键字是 <strong>CHECK</strong></p><ul><li>保证列中的值满足某一条件。</li><li>例如：我们可以给age列添加一个范围，最低年龄可以设置为1，最大年龄就可以设置为300，这样的数据才更合理些。</li><li>MySQL不支持检查约束。从数据库层面不能保证，以后可以在java代码中进行限制，一样也可以实现要求。</li></ul><p>默认约束： 关键字是 <strong>DEFAULT</strong></p><ul><li>保存数据时，未指定值则采用默认值。</li><li>例如：我们在给english列添加该约束，指定默认值是0，这样在添加数据时没有指定具体值时就会采用默认给定的0。</li></ul><p>外键约束： 关键字是 <strong>FOREIGN KEY</strong></p><ul><li>外键用来让两个表的数据之间建立链接，保证数据的一致性和完整性。</li><li>外键约束现在可能还不太好理解，后面我们会重点进行讲解。</li></ul><h3 id="_3-非空约束" tabindex="-1"><a class="header-anchor" href="#_3-非空约束" aria-hidden="true">#</a> 3, 非空约束</h3><p>非空约束用于保证列中所有数据不能有NULL值。添加约束：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 创建表时添加非空约束</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> 表名<span class="token punctuation">(</span>\n   列名 数据类型 <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n   …\n<span class="token punctuation">)</span><span class="token punctuation">;</span> \n\n<span class="token comment">-- 建完表后添加非空约束</span>\n<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">MODIFY</span> 字段名 数据类型 <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>删除约束：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">MODIFY</span> 字段名 数据类型<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_4-唯一约束" tabindex="-1"><a class="header-anchor" href="#_4-唯一约束" aria-hidden="true">#</a> 4, 唯一约束</h3><p>唯一约束用于保证列中所有数据各不相同。添加约束语法：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 创建表时添加唯一约束</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> 表名<span class="token punctuation">(</span>\n   列名 数据类型 <span class="token keyword">UNIQUE</span> <span class="token punctuation">[</span><span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n   <span class="token comment">-- AUTO_INCREMENT: 当不指定值时自动增长</span>\n   …\n<span class="token punctuation">)</span><span class="token punctuation">;</span> \n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> 表名<span class="token punctuation">(</span>\n   列名 数据类型<span class="token punctuation">,</span>\n   …\n   <span class="token punctuation">[</span><span class="token keyword">CONSTRAINT</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>约束名称<span class="token punctuation">]</span> <span class="token keyword">UNIQUE</span><span class="token punctuation">(</span>列名<span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span> \n\n<span class="token comment">-- 建完表后添加唯一约束</span>\n<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">MODIFY</span> 字段名 数据类型 <span class="token keyword">UNIQUE</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>删除约束：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> 字段名<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-主键约束" tabindex="-1"><a class="header-anchor" href="#_5-主键约束" aria-hidden="true">#</a> 5, 主键约束</h3><p>键是一行数据的唯一标识，<strong>要求非空且唯一</strong>。<strong>一张表只能有一个主键</strong>。添加约束语法：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 创建表时添加主键约束</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> 表名<span class="token punctuation">(</span>\n   列名 数据类型 <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">[</span><span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n   …\n<span class="token punctuation">)</span><span class="token punctuation">;</span> \n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> 表名<span class="token punctuation">(</span>\n   列名 数据类型<span class="token punctuation">,</span>\n   <span class="token punctuation">[</span><span class="token keyword">CONSTRAINT</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>约束名称<span class="token punctuation">]</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>列名<span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span> \n\n<span class="token comment">-- 建完表后添加主键约束</span>\n<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">ADD</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>字段名<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>删除约束：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">DROP</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_6-默认约束" tabindex="-1"><a class="header-anchor" href="#_6-默认约束" aria-hidden="true">#</a> 6, 默认约束</h3><p>保存数据时，未指定值则采用默认值，添加约束语法：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 创建表时添加默认约束</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> 表名<span class="token punctuation">(</span>\n   列名 数据类型 <span class="token keyword">DEFAULT</span> 默认值<span class="token punctuation">,</span>\n   …\n<span class="token punctuation">)</span><span class="token punctuation">;</span> \n\n<span class="token comment">-- 建完表后添加默认约束</span>\n<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">ALTER</span> 列名 <span class="token keyword">SET</span> <span class="token keyword">DEFAULT</span> 默认值<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>删除约束：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">ALTER</span> 列名 <span class="token keyword">DROP</span> <span class="token keyword">DEFAULT</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_7-练习" tabindex="-1"><a class="header-anchor" href="#_7-练习" aria-hidden="true">#</a> 7, 练习</h3><p>需求：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 员工表</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> emp <span class="token punctuation">(</span>\n	id <span class="token keyword">INT</span><span class="token punctuation">,</span>  <span class="token comment">-- 员工id，主键且自增长</span>\n    ename <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">-- 员工姓名，非空且唯一</span>\n    joindate <span class="token keyword">DATE</span><span class="token punctuation">,</span>  <span class="token comment">-- 入职日期，非空</span>\n    salary <span class="token keyword">DOUBLE</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">-- 工资，非空</span>\n    bonus <span class="token keyword">DOUBLE</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>  <span class="token comment">-- 奖金，如果没有将近默认为0</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面一定给出了具体的要求，我们可以根据要求创建这张表，并为每一列添加对应的约束。建表语句如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> emp<span class="token punctuation">;</span>\n\n<span class="token comment">-- 员工表</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> emp <span class="token punctuation">(</span>\n  id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span> <span class="token comment">-- 员工id，主键且自增长</span>\n  ename <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">UNIQUE</span><span class="token punctuation">,</span> <span class="token comment">-- 员工姓名，非空并且唯一</span>\n  joindate <span class="token keyword">DATE</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token punctuation">,</span> <span class="token comment">-- 入职日期，非空</span>\n  salary <span class="token keyword">DOUBLE</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token punctuation">,</span> <span class="token comment">-- 工资，非空</span>\n  bonus <span class="token keyword">DOUBLE</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span> <span class="token comment">-- 奖金，如果没有奖金默认为0</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\n<span class="token comment">-- 当前表的设计结构</span>\nmysql<span class="token operator">&gt;</span> <span class="token keyword">desc</span> emp<span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">----------+-------------+------+-----+---------+-------+</span>\n<span class="token operator">|</span> Field    <span class="token operator">|</span> <span class="token keyword">Type</span>        <span class="token operator">|</span> <span class="token boolean">Null</span> <span class="token operator">|</span> <span class="token keyword">Key</span> <span class="token operator">|</span> <span class="token keyword">Default</span> <span class="token operator">|</span> Extra <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----------+-------------+------+-----+---------+-------+</span>\n<span class="token operator">|</span> id       <span class="token operator">|</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>     <span class="token operator">|</span> <span class="token keyword">NO</span>   <span class="token operator">|</span> PRI <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span>       <span class="token operator">|</span>\n<span class="token operator">|</span> ename    <span class="token operator">|</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token keyword">NO</span>   <span class="token operator">|</span> UNI <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span>       <span class="token operator">|</span>\n<span class="token operator">|</span> joindate <span class="token operator">|</span> <span class="token keyword">date</span>        <span class="token operator">|</span> <span class="token keyword">NO</span>   <span class="token operator">|</span>     <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span>       <span class="token operator">|</span>\n<span class="token operator">|</span> salary   <span class="token operator">|</span> <span class="token keyword">double</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token keyword">NO</span>   <span class="token operator">|</span>     <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span>       <span class="token operator">|</span>\n<span class="token operator">|</span> bonus    <span class="token operator">|</span> <span class="token keyword">double</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> <span class="token number">0.00</span>    <span class="token operator">|</span>       <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----------+-------------+------+-----+---------+-------+</span>\n<span class="token number">5</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.03</span> sec<span class="token punctuation">)</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>验证约束</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> emp<span class="token punctuation">(</span>id<span class="token punctuation">,</span>ename<span class="token punctuation">,</span>joindate<span class="token punctuation">,</span>salary<span class="token punctuation">,</span>bonus<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;1999-11-11&#39;</span><span class="token punctuation">,</span><span class="token number">8800</span><span class="token punctuation">,</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp<span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">----+-------+------------+---------+---------+</span>\n<span class="token operator">|</span> id <span class="token operator">|</span> ename <span class="token operator">|</span> joindate   <span class="token operator">|</span> salary  <span class="token operator">|</span> bonus   <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----+-------+------------+---------+---------+</span>\n<span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> 张三  <span class="token operator">|</span> <span class="token number">1999</span><span class="token operator">-</span><span class="token number">11</span><span class="token operator">-</span><span class="token number">11</span> <span class="token operator">|</span> <span class="token number">8800.00</span> <span class="token operator">|</span> <span class="token number">5000.00</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----+-------+------------+---------+---------+</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="a-验证主键约束" tabindex="-1"><a class="header-anchor" href="#a-验证主键约束" aria-hidden="true">#</a> a）验证主键约束</h4><p>验证主键约束，非空且唯一：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">insert</span> <span class="token keyword">into</span> emp<span class="token punctuation">(</span>id<span class="token punctuation">,</span>ename<span class="token punctuation">,</span>joindate<span class="token punctuation">,</span>salary<span class="token punctuation">,</span>bonus<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;1999-11-11&#39;</span><span class="token punctuation">,</span><span class="token number">8800</span><span class="token punctuation">,</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token number">1048</span> <span class="token operator">-</span> <span class="token keyword">Column</span> <span class="token string">&#39;id&#39;</span> cannot be <span class="token boolean">null</span>  <span class="token comment">-- 提示不能为null</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>上面添加的数据失败了, 所以主键的约束是非null</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 再次添加一段正确的数据</span>\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> emp<span class="token punctuation">(</span>id<span class="token punctuation">,</span>ename<span class="token punctuation">,</span>joindate<span class="token punctuation">,</span>salary<span class="token punctuation">,</span>bonus<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&#39;李四&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;1999-11-11&#39;</span><span class="token punctuation">,</span><span class="token number">8800</span><span class="token punctuation">,</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp<span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">----+-------+------------+---------+---------+</span>\n<span class="token operator">|</span> id <span class="token operator">|</span> ename <span class="token operator">|</span> joindate   <span class="token operator">|</span> salary  <span class="token operator">|</span> bonus   <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----+-------+------------+---------+---------+</span>\n<span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> 张三  <span class="token operator">|</span> <span class="token number">1999</span><span class="token operator">-</span><span class="token number">11</span><span class="token operator">-</span><span class="token number">11</span> <span class="token operator">|</span> <span class="token number">8800.00</span> <span class="token operator">|</span> <span class="token number">5000.00</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> 李四  <span class="token operator">|</span> <span class="token number">1999</span><span class="token operator">-</span><span class="token number">11</span><span class="token operator">-</span><span class="token number">11</span> <span class="token operator">|</span> <span class="token number">8800.00</span> <span class="token operator">|</span> <span class="token number">5000.00</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----+-------+------------+---------+---------+</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="b-验证非空约束" tabindex="-1"><a class="header-anchor" href="#b-验证非空约束" aria-hidden="true">#</a> b）验证非空约束</h4><p>验证非空约束：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> emp<span class="token punctuation">(</span>id<span class="token punctuation">,</span>ename<span class="token punctuation">,</span>joindate<span class="token punctuation">,</span>salary<span class="token punctuation">,</span>bonus<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">&#39;1999-11-11&#39;</span><span class="token punctuation">,</span><span class="token number">8800</span><span class="token punctuation">,</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token number">1048</span> <span class="token operator">-</span> <span class="token keyword">Column</span> <span class="token string">&#39;ename&#39;</span> cannot be <span class="token boolean">null</span>   <span class="token comment">-- 提示不能为nnull</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>执行结果：</p><p>从上面结果可以看到， <code>ename</code> 字段的非空约束生效了。</p><h4 id="c-验证唯一约束" tabindex="-1"><a class="header-anchor" href="#c-验证唯一约束" aria-hidden="true">#</a> c）验证唯一约束</h4><p>验证唯一约束：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> emp<span class="token punctuation">(</span>id<span class="token punctuation">,</span>ename<span class="token punctuation">,</span>joindate<span class="token punctuation">,</span>salary<span class="token punctuation">,</span>bonus<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&#39;李四&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;1999-11-11&#39;</span><span class="token punctuation">,</span><span class="token number">8800</span><span class="token punctuation">,</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token number">1062</span> <span class="token operator">-</span> <span class="token keyword">Duplicate</span> entry <span class="token string">&#39;李四&#39;</span> <span class="token keyword">for</span> <span class="token keyword">key</span> <span class="token string">&#39;ename&#39;</span> <span class="token comment">-- 重复条目 &#39;李四&#39;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>从上面结果可以看到， <code>ename</code> 字段的唯一约束生效了。</p><h4 id="d-验证默认约束" tabindex="-1"><a class="header-anchor" href="#d-验证默认约束" aria-hidden="true">#</a> d）验证默认约束</h4><p>验证默认约束：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> emp<span class="token punctuation">(</span>id<span class="token punctuation">,</span>ename<span class="token punctuation">,</span>joindate<span class="token punctuation">,</span>salary<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&#39;王五&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;1999-11-11&#39;</span><span class="token punctuation">,</span><span class="token number">8800</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp<span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">----+-------+------------+---------+---------+</span>\n<span class="token operator">|</span> id <span class="token operator">|</span> ename <span class="token operator">|</span> joindate   <span class="token operator">|</span> salary  <span class="token operator">|</span> bonus   <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----+-------+------------+---------+---------+</span>\n<span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> 张三  <span class="token operator">|</span> <span class="token number">1999</span><span class="token operator">-</span><span class="token number">11</span><span class="token operator">-</span><span class="token number">11</span> <span class="token operator">|</span> <span class="token number">8800.00</span> <span class="token operator">|</span> <span class="token number">5000.00</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> 李四  <span class="token operator">|</span> <span class="token number">1999</span><span class="token operator">-</span><span class="token number">11</span><span class="token operator">-</span><span class="token number">11</span> <span class="token operator">|</span> <span class="token number">8800.00</span> <span class="token operator">|</span> <span class="token number">5000.00</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">3</span> <span class="token operator">|</span> 王五  <span class="token operator">|</span> <span class="token number">1999</span><span class="token operator">-</span><span class="token number">11</span><span class="token operator">-</span><span class="token number">11</span> <span class="token operator">|</span> <span class="token number">8800.00</span> <span class="token operator">|</span>    <span class="token number">0.00</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----+-------+------------+---------+---------+</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行完上面语句后查询表中数据，如下图可以看到<strong>王五这条数据的bonus列就有了默认值0</strong>。</p><blockquote><p>默认约束只有在不给值时才会采用默认值。<strong>如果给了null，那值就是null值</strong>。</p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> emp<span class="token punctuation">(</span>id<span class="token punctuation">,</span>ename<span class="token punctuation">,</span>joindate<span class="token punctuation">,</span>salary<span class="token punctuation">,</span>bonus<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">&#39;赵六&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;1999-11-11&#39;</span><span class="token punctuation">,</span><span class="token number">8800</span><span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nQuery OK<span class="token punctuation">,</span> <span class="token number">1</span> <span class="token keyword">row</span> affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>\n\nmysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp<span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">----+-------+------------+---------+---------+</span>\n<span class="token operator">|</span> id <span class="token operator">|</span> ename <span class="token operator">|</span> joindate   <span class="token operator">|</span> salary  <span class="token operator">|</span> bonus   <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----+-------+------------+---------+---------+</span>\n<span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> 张三  <span class="token operator">|</span> <span class="token number">1999</span><span class="token operator">-</span><span class="token number">11</span><span class="token operator">-</span><span class="token number">11</span> <span class="token operator">|</span> <span class="token number">8800.00</span> <span class="token operator">|</span> <span class="token number">5000.00</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> 李四  <span class="token operator">|</span> <span class="token number">1999</span><span class="token operator">-</span><span class="token number">11</span><span class="token operator">-</span><span class="token number">11</span> <span class="token operator">|</span> <span class="token number">8800.00</span> <span class="token operator">|</span> <span class="token number">5000.00</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">3</span> <span class="token operator">|</span> 王五  <span class="token operator">|</span> <span class="token number">1999</span><span class="token operator">-</span><span class="token number">11</span><span class="token operator">-</span><span class="token number">11</span> <span class="token operator">|</span> <span class="token number">8800.00</span> <span class="token operator">|</span>    <span class="token number">0.00</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">4</span> <span class="token operator">|</span> 赵六  <span class="token operator">|</span> <span class="token number">1999</span><span class="token operator">-</span><span class="token number">11</span><span class="token operator">-</span><span class="token number">11</span> <span class="token operator">|</span> <span class="token number">8800.00</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----+-------+------------+---------+---------+</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="e-验证自动增长约束" tabindex="-1"><a class="header-anchor" href="#e-验证自动增长约束" aria-hidden="true">#</a> e）验证自动增长约束</h4><p>条件： auto_increment 当列是数字类型 并且唯一约束</p><p>重新创建 <code>emp</code> 表，并给id列添加自动增长：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 员工表</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> emp <span class="token punctuation">(</span>\n  id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span> <span class="token comment">-- 员工id，主键且自增长</span>\n  ename <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">UNIQUE</span><span class="token punctuation">,</span> <span class="token comment">-- 员工姓名，非空并且唯一</span>\n  joindate <span class="token keyword">DATE</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token punctuation">,</span> <span class="token comment">-- 入职日期，非空</span>\n  salary <span class="token keyword">DOUBLE</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token punctuation">,</span> <span class="token comment">-- 工资，非空</span>\n  bonus <span class="token keyword">DOUBLE</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span> <span class="token comment">-- 奖金，如果没有奖金默认为0</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 给字段添加自动增长属性</span>\n<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">MODIFY</span> <span class="token keyword">COLUMN</span> id <span class="token keyword">INT</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">;</span>\n\nmysql<span class="token operator">&gt;</span> <span class="token keyword">alter</span> <span class="token keyword">table</span> emp <span class="token keyword">modify</span> <span class="token keyword">column</span> id <span class="token keyword">int</span> <span class="token keyword">auto_increment</span><span class="token punctuation">;</span>\nQuery OK<span class="token punctuation">,</span> <span class="token number">4</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.01</span> sec<span class="token punctuation">)</span>\nRecords: <span class="token number">4</span>  Duplicates: <span class="token number">0</span>  <span class="token keyword">Warnings</span>: <span class="token number">0</span>\n\n<span class="token comment">-- 查看表结构</span>\nmysql<span class="token operator">&gt;</span> <span class="token keyword">desc</span> emp<span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">----------+-------------+------+-----+---------+----------------+</span>\n<span class="token operator">|</span> Field    <span class="token operator">|</span> <span class="token keyword">Type</span>        <span class="token operator">|</span> <span class="token boolean">Null</span> <span class="token operator">|</span> <span class="token keyword">Key</span> <span class="token operator">|</span> <span class="token keyword">Default</span> <span class="token operator">|</span> Extra          <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----------+-------------+------+-----+---------+----------------+</span>\n<span class="token operator">|</span> id       <span class="token operator">|</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>     <span class="token operator">|</span> <span class="token keyword">NO</span>   <span class="token operator">|</span> PRI <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span> <span class="token keyword">auto_increment</span> <span class="token operator">|</span>\n<span class="token operator">|</span> ename    <span class="token operator">|</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token keyword">NO</span>   <span class="token operator">|</span> UNI <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span>                <span class="token operator">|</span>\n<span class="token operator">|</span> joindate <span class="token operator">|</span> <span class="token keyword">date</span>        <span class="token operator">|</span> <span class="token keyword">NO</span>   <span class="token operator">|</span>     <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span>                <span class="token operator">|</span>\n<span class="token operator">|</span> salary   <span class="token operator">|</span> <span class="token keyword">double</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token keyword">NO</span>   <span class="token operator">|</span>     <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span>                <span class="token operator">|</span>\n<span class="token operator">|</span> bonus    <span class="token operator">|</span> <span class="token keyword">double</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> <span class="token number">0.00</span>    <span class="token operator">|</span>                <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----------+-------------+------+-----+---------+----------------+</span>\n<span class="token number">5</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.06</span> sec<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面已经成功添加了该约束, 下面来验证这约束</p><p>接下来给emp添加数据，分别验证不给id列添加值以及给id列添加null值，id列的值会不会自动增长：：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> emp<span class="token punctuation">(</span>ename<span class="token punctuation">,</span>joindate<span class="token punctuation">,</span>salary<span class="token punctuation">,</span>bonus<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">&#39;赵六&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;1999-11-11&#39;</span><span class="token punctuation">,</span><span class="token number">8800</span><span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> emp<span class="token punctuation">(</span>id<span class="token punctuation">,</span>ename<span class="token punctuation">,</span>joindate<span class="token punctuation">,</span>salary<span class="token punctuation">,</span>bonus<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">&#39;赵六2&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;1999-11-11&#39;</span><span class="token punctuation">,</span><span class="token number">8800</span><span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> emp<span class="token punctuation">(</span>id<span class="token punctuation">,</span>ename<span class="token punctuation">,</span>joindate<span class="token punctuation">,</span>salary<span class="token punctuation">,</span>bonus<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">&#39;赵六3&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;1999-11-11&#39;</span><span class="token punctuation">,</span><span class="token number">8800</span><span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\n<span class="token comment">-- 查询数据表 , 赵六元上面已经添加过所以是重复条目</span>\nmysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp<span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">----+-------+------------+---------+---------+</span>\n<span class="token operator">|</span> id <span class="token operator">|</span> ename <span class="token operator">|</span> joindate   <span class="token operator">|</span> salary  <span class="token operator">|</span> bonus   <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----+-------+------------+---------+---------+</span>\n<span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> 张三  <span class="token operator">|</span> <span class="token number">1999</span><span class="token operator">-</span><span class="token number">11</span><span class="token operator">-</span><span class="token number">11</span> <span class="token operator">|</span> <span class="token number">8800.00</span> <span class="token operator">|</span> <span class="token number">5000.00</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> 李四  <span class="token operator">|</span> <span class="token number">1999</span><span class="token operator">-</span><span class="token number">11</span><span class="token operator">-</span><span class="token number">11</span> <span class="token operator">|</span> <span class="token number">8800.00</span> <span class="token operator">|</span> <span class="token number">5000.00</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">3</span> <span class="token operator">|</span> 王五  <span class="token operator">|</span> <span class="token number">1999</span><span class="token operator">-</span><span class="token number">11</span><span class="token operator">-</span><span class="token number">11</span> <span class="token operator">|</span> <span class="token number">8800.00</span> <span class="token operator">|</span>    <span class="token number">0.00</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">4</span> <span class="token operator">|</span> 赵六  <span class="token operator">|</span> <span class="token number">1999</span><span class="token operator">-</span><span class="token number">11</span><span class="token operator">-</span><span class="token number">11</span> <span class="token operator">|</span> <span class="token number">8800.00</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">5</span> <span class="token operator">|</span> 赵六<span class="token number">2</span> <span class="token operator">|</span> <span class="token number">1999</span><span class="token operator">-</span><span class="token number">11</span><span class="token operator">-</span><span class="token number">11</span> <span class="token operator">|</span> <span class="token number">8800.00</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">6</span> <span class="token operator">|</span> 赵六<span class="token number">3</span> <span class="token operator">|</span> <span class="token number">1999</span><span class="token operator">-</span><span class="token number">11</span><span class="token operator">-</span><span class="token number">11</span> <span class="token operator">|</span> <span class="token number">8800.00</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>    <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----+-------+------------+---------+---------+</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-外键约束" tabindex="-1"><a class="header-anchor" href="#_8-外键约束" aria-hidden="true">#</a> 8, 外键约束</h3><p>外键用来让<strong>两个表的数据之间建立链接</strong>，<strong>保证数据的一致性和完整性</strong>。如何理解上面的概念呢？</p><p><img src="' + _imports_22 + '" alt="image-20240102145952395"></p><p>员工表中的dep_id字段是部门表的id字段关联，也就是说1号学生张三属于1号部门研发部的员工。现在我要删除1号部门，就会出现错误的数据（员工表中属于1号部门的数据）。而我们上面说的两张表的关系只是我们认为它们有关系，此时需要<strong>通过外键让这两张表产生数据库层面的关系</strong>，这样你要删除部门表中的1号部门的数据将无法删除。</p><p><strong>添加外键约束语法：</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 创建表时添加外键约束</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> 表名<span class="token punctuation">(</span>\n   列名 数据类型<span class="token punctuation">,</span>\n   …\n   <span class="token punctuation">[</span><span class="token keyword">CONSTRAINT</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>外键名称<span class="token punctuation">]</span> <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>外键列名<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> 主表<span class="token punctuation">(</span>主表列名<span class="token punctuation">)</span> \n<span class="token punctuation">)</span><span class="token punctuation">;</span> \n\n<span class="token comment">-- 建完表后添加外键约束</span>\n<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">ADD</span> <span class="token keyword">CONSTRAINT</span> 外键名称 <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>外键字段名称<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> 主表名称<span class="token punctuation">(</span>主表列名称<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>删除外键约束：</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">DROP</span> <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> 外键名称<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>据上述语法创建员工表和部门表，并<strong>添加上外键约束</strong>：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 删除表</span>\n<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> emp<span class="token punctuation">;</span>\n<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> dept<span class="token punctuation">;</span>\n\n<span class="token comment">-- 部门表</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> dept<span class="token punctuation">(</span>\n	id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>\n	dep_name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n	addr <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">-- 员工表 </span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> emp<span class="token punctuation">(</span>\n	id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>\n	name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n	age <span class="token keyword">int</span><span class="token punctuation">,</span>\n	dep_id <span class="token keyword">int</span><span class="token punctuation">,</span>\n\n	<span class="token comment">-- 添加外键 dep_id,关联 dept 表的id主键</span>\n	<span class="token keyword">CONSTRAINT</span> fk_emp_dept <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>dep_id<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> dept<span class="token punctuation">(</span>id<span class="token punctuation">)</span>	\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>创建部门表结构</strong></p><p><img src="' + _imports_23 + '" alt="image-20240102203439520"></p><p><strong>外键引用了 dept 表中的 id</strong></p><p><img src="' + _imports_24 + '" alt="image-20240102203502290"></p><p><strong>添加数据：</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 添加 2 个部门</span>\n<span class="token keyword">insert</span> <span class="token keyword">into</span> dept<span class="token punctuation">(</span>dep_name<span class="token punctuation">,</span>addr<span class="token punctuation">)</span> <span class="token keyword">values</span>\n<span class="token punctuation">(</span><span class="token string">&#39;研发部&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;广州&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&#39;销售部&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;深圳&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">-- 添加员工,dep_id 表示员工所在的部门</span>\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> emp <span class="token punctuation">(</span>NAME<span class="token punctuation">,</span> age<span class="token punctuation">,</span> dep_id<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> \n<span class="token punctuation">(</span><span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token string">&#39;李四&#39;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token string">&#39;王五&#39;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token string">&#39;赵六&#39;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token string">&#39;孙七&#39;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token string">&#39;周八&#39;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="' + _imports_25 + '" alt="image-20240102203636986"></p><p><img src="' + _imports_26 + '" alt="image-20240102203647540"></p><p>此时删除 <code>研发部</code> 这条数据，会发现无法删除。</p><p>删除外键：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">alter</span> <span class="token keyword">table</span> emp <span class="token keyword">drop</span> <span class="token keyword">FOREIGN</span> <span class="token keyword">key</span> fk_emp_dept<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>重新添加外键：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">alter</span> <span class="token keyword">table</span> emp <span class="token keyword">add</span> <span class="token keyword">CONSTRAINT</span> fk_emp_dept <span class="token keyword">FOREIGN</span> <span class="token keyword">key</span><span class="token punctuation">(</span>dep_id<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> dept<span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="七-数据库设计" tabindex="-1"><a class="header-anchor" href="#七-数据库设计" aria-hidden="true">#</a> 七, 数据库设计</h2><h3 id="_1-概念" tabindex="-1"><a class="header-anchor" href="#_1-概念" aria-hidden="true">#</a> 1, 概念</h3><blockquote><p>所谓的数据库设计，就是设计一个项目中都有哪些表，以及表与表之间的关系。表关系分为：</p><ul><li>一对一</li><li>一对多</li><li>多对多</li></ul></blockquote><p><strong>一对一：</strong></p><ul><li>如用户与身份证就是一对一。如用户和用户详情就是一对一。</li><li>一对一关系多用于表拆分，将一个实体中经常使用的字段放一张表，不经常使用的字段放另一张表，用于提升查询性能</li></ul><p><strong>一对多：</strong></p><ul><li>如部门和员工就是一对多。一个部门对应多个员工，一个员工对应一个部门。</li></ul><p><strong>多对多：</strong></p><ul><li>如商品和订单就是多对多。一个商品对应多个订单，一个订单包含多个商品。</li></ul><h3 id="_2-一对多" tabindex="-1"><a class="header-anchor" href="#_2-一对多" aria-hidden="true">#</a> 2, 一对多</h3><p>实现方式：</p><ul><li><strong>在多的一方建立外键，指向一的一方的主键</strong></li></ul><p>以 <code>员工表</code> 和 <code>部门表</code> 举例。员工表属于多的一方，而部门表属于一的一方，此时我们会在员工表中添加一列（dep_id），指向于部门表的主键（id）：</p><p><img src="' + _imports_27 + '" alt="image-20240102162015339"></p><p>建表语句如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 删除表</span>\n<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> tb_emp<span class="token punctuation">;</span>\n<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> tb_dept<span class="token punctuation">;</span>\n\n<span class="token comment">-- 部门表</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> tb_dept<span class="token punctuation">(</span>\n	id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>\n	dep_name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n	addr <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">-- 员工表 </span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> tb_emp<span class="token punctuation">(</span>\n	id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>\n	name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n	age <span class="token keyword">int</span><span class="token punctuation">,</span>\n	dep_id <span class="token keyword">int</span><span class="token punctuation">,</span>\n\n	<span class="token comment">-- 添加外键 dep_id,关联 dept 表的id主键</span>\n	<span class="token keyword">CONSTRAINT</span> fk_emp_dept <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>dep_id<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> tb_dept<span class="token punctuation">(</span>id<span class="token punctuation">)</span>	\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="' + _imports_28 + '" alt="image-20240102204041474"></p><h3 id="_3-多对多" tabindex="-1"><a class="header-anchor" href="#_3-多对多" aria-hidden="true">#</a> 3, 多对多</h3><p>实现方式：</p><ul><li>建立第三张中间表，中间表至少包含两个外键，分别关联两方主键</li></ul><p>以 <code>订单表</code> 和 <code>商品表</code> 举例，订单表和商品表都属于多的一方，此时需要创建一个中间表，在中间表中添加订单表的外键和商品表的外键指向两张表的主键：</p><p><img src="' + _imports_29 + '" alt="image-20240102162736079"></p><p>建表语句：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 删除表</span>\n<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> tb_order_goods<span class="token punctuation">;</span>\n<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> tb_order<span class="token punctuation">;</span>\n<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> tb_goods<span class="token punctuation">;</span>\n\n<span class="token comment">-- 订单表</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> tb_order<span class="token punctuation">(</span>\n	id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>\n	payment <span class="token keyword">double</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n	payment_type <span class="token keyword">TINYINT</span><span class="token punctuation">,</span>\n	<span class="token keyword">status</span> <span class="token keyword">TINYINT</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">-- 商品表</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> tb_goods<span class="token punctuation">(</span>\n	id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>\n	title <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n	price <span class="token keyword">double</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">-- 订单商品中间表</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> tb_order_goods<span class="token punctuation">(</span>\n	id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>\n	order_id <span class="token keyword">int</span><span class="token punctuation">,</span>\n	goods_id <span class="token keyword">int</span><span class="token punctuation">,</span>\n	count <span class="token keyword">int</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">-- 建完表后，添加外键</span>\n<span class="token keyword">alter</span> <span class="token keyword">table</span> tb_order_goods <span class="token keyword">add</span> <span class="token keyword">CONSTRAINT</span> fk_order_id <span class="token keyword">FOREIGN</span> <span class="token keyword">key</span><span class="token punctuation">(</span>order_id<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> tb_order<span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">alter</span> <span class="token keyword">table</span> tb_order_goods <span class="token keyword">add</span> <span class="token keyword">CONSTRAINT</span> fk_goods_id <span class="token keyword">FOREIGN</span> <span class="token keyword">key</span><span class="token punctuation">(</span>goods_id<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> tb_goods<span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看表结构模型图：</p><p><img src="' + _imports_30 + '" alt="image-20240102204118267"></p><h3 id="_4-一对一" tabindex="-1"><a class="header-anchor" href="#_4-一对一" aria-hidden="true">#</a> 4, 一对一</h3><blockquote><p><strong>一对一关系多用于表拆分</strong>，将一个实体中经常使用的字段放一张表，不经常使用的字段放另一张表，用于提升查询性能。</p></blockquote><p><strong>实现方式：</strong></p><ul><li>在任意一方加入外键，关联另一方主键，并且设置外键为唯一(UNIQUE)</li></ul><p>以 <code>用户表</code> 举例：</p><p><img src="' + _imports_31 + '" alt="image-20240102204209923"></p><p>真正使用过程中发现 id、photo、nickname、age、gender 字段比较常用，此时就可以将这张表查分成两张表。</p><p><img src="' + _imports_32 + '" alt="image-20240102204246730"></p><p>建表语句：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> tb_user_desc <span class="token punctuation">(</span>\n	id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>\n	city <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n	edu <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n	income <span class="token keyword">int</span><span class="token punctuation">,</span>\n	<span class="token keyword">status</span> <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n	des <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">create</span> <span class="token keyword">table</span> tb_user <span class="token punctuation">(</span>\n	id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>\n	photo <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n	nickname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n	age <span class="token keyword">int</span><span class="token punctuation">,</span>\n	gender <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n	desc_id <span class="token keyword">int</span> <span class="token keyword">unique</span><span class="token punctuation">,</span>\n	<span class="token comment">-- 添加外键</span>\n	<span class="token keyword">CONSTRAINT</span> fk_user_desc <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>desc_id<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> tb_user_desc<span class="token punctuation">(</span>id<span class="token punctuation">)</span>	\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看表结构模型图：</p><p><img src="' + _imports_33 + '" alt="image-20240102204301546"></p><h2 id="八-多表查询" tabindex="-1"><a class="header-anchor" href="#八-多表查询" aria-hidden="true">#</a> 八, 多表查询</h2><blockquote><p>多表查询顾名思义就是<strong>从多张表中一次性的查询出我们想要的数据</strong>。准备环境：</p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> emp<span class="token punctuation">;</span>\n<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> dept<span class="token punctuation">;</span>\n\n<span class="token comment"># 创建部门表</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> dept<span class="token punctuation">(</span>\n    did <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>\n    dname <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment"># 创建员工表</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> emp <span class="token punctuation">(</span>\n    id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>\n    NAME <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    gender <span class="token keyword">CHAR</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">-- 性别</span>\n    salary <span class="token keyword">DOUBLE</span><span class="token punctuation">,</span> <span class="token comment">-- 工资</span>\n    join_date <span class="token keyword">DATE</span><span class="token punctuation">,</span> <span class="token comment">-- 入职日期</span>\n    dep_id <span class="token keyword">INT</span><span class="token punctuation">,</span>\n    <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>dep_id<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> dept<span class="token punctuation">(</span>did<span class="token punctuation">)</span> <span class="token comment">-- 外键，关联部门表(部门表的主键)</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">-- 添加部门数据</span>\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> dept <span class="token punctuation">(</span>dNAME<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;研发部&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&#39;市场部&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&#39;财务部&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&#39;销售部&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">-- 添加员工数据</span>\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> emp<span class="token punctuation">(</span>NAME<span class="token punctuation">,</span>gender<span class="token punctuation">,</span>salary<span class="token punctuation">,</span>join_date<span class="token punctuation">,</span>dep_id<span class="token punctuation">)</span> <span class="token keyword">VALUES</span>\n<span class="token punctuation">(</span><span class="token string">&#39;孙悟空&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span><span class="token number">7200</span><span class="token punctuation">,</span><span class="token string">&#39;2013-02-24&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token string">&#39;猪八戒&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span><span class="token number">3600</span><span class="token punctuation">,</span><span class="token string">&#39;2010-12-02&#39;</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token string">&#39;唐僧&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span><span class="token number">9000</span><span class="token punctuation">,</span><span class="token string">&#39;2008-08-08&#39;</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token string">&#39;白骨精&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span><span class="token number">5000</span><span class="token punctuation">,</span><span class="token string">&#39;2015-10-07&#39;</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token string">&#39;蜘蛛精&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span><span class="token number">4500</span><span class="token punctuation">,</span><span class="token string">&#39;2011-03-14&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token string">&#39;小白龙&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span><span class="token number">2500</span><span class="token punctuation">,</span><span class="token string">&#39;2011-02-14&#39;</span><span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="' + _imports_34 + '" alt="image-20240102204907645"></p><p>执行下面的多表查询语句：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token punctuation">,</span> dept<span class="token punctuation">;</span>  <span class="token comment">-- 从emp和dept表中查询所有的字段数据</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>表结构如下</strong></p><p><img src="' + _imports_35 + '" alt="image-20240102204934787"></p><p>从上面的结果我们看到有一些无效的数据，如 <code>孙悟空</code> 这个员工属于1号部门，但也同时关联的2、3、4号部门。所以我们要通过限制员工表中的 <code>dep_id</code> 字段的值和部门表 <code>did</code> 字段的值相等来消除这些无效的数据，</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token punctuation">,</span> dept <span class="token keyword">where</span> emp<span class="token punctuation">.</span>dep_id <span class="token operator">=</span> dept<span class="token punctuation">.</span>did<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>执行后结果如下：</p><p><img src="' + _imports_36 + '" alt="image-20240102205018575"></p><p>上面语句就是连接查询，那么多表查询都有哪些呢？</p><ul><li>连接查询 <ul><li>内连接查询：相当于查询AB交集数据</li><li>外连接查询 <ul><li>左外连接查询：相当于查询A表所有数据和交集部门数据</li><li>右外连接查询：相当于查询B表所有数据和交集部分数据</li></ul></li></ul></li><li>子查询</li></ul><p>图示：</p><p><img src="' + _imports_37 + '" alt="image-20240102205044343"></p><h3 id="_1-内连接查询" tabindex="-1"><a class="header-anchor" href="#_1-内连接查询" aria-hidden="true">#</a> 1, 内连接查询</h3><p><strong>内连接</strong>相当于查询 A B 交集数据。语法：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 隐式内连接</span>\n<span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表<span class="token number">1</span><span class="token punctuation">,</span>表<span class="token number">2</span>… <span class="token keyword">WHERE</span> 条件<span class="token punctuation">;</span>\n\n<span class="token comment">-- 显示内连接</span>\n<span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表<span class="token number">1</span> <span class="token punctuation">[</span><span class="token keyword">INNER</span><span class="token punctuation">]</span> <span class="token keyword">JOIN</span> 表<span class="token number">2</span> <span class="token keyword">ON</span> 条件<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>隐式内连接</strong>：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>\n	<span class="token operator">*</span>\n<span class="token keyword">FROM</span>\n	emp<span class="token punctuation">,</span>\n	dept\n<span class="token keyword">WHERE</span>\n	emp<span class="token punctuation">.</span>dep_id <span class="token operator">=</span> dept<span class="token punctuation">.</span>did<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行结果如下：</p><p><img src="' + _imports_38 + '" alt="image-20240102205234890"></p><p>查询 emp的 name， gender，dept表的dname：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>\n	emp<span class="token punctuation">.</span> NAME<span class="token punctuation">,</span>\n	emp<span class="token punctuation">.</span>gender<span class="token punctuation">,</span>\n	dept<span class="token punctuation">.</span>dname\n<span class="token keyword">FROM</span>\n	emp<span class="token punctuation">,</span>\n	dept\n<span class="token keyword">WHERE</span>\n	emp<span class="token punctuation">.</span>dep_id <span class="token operator">=</span> dept<span class="token punctuation">.</span>did<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行语句如下：</p><p><img src="' + _imports_39 + '" alt="image-20240102205249304"></p><p>上面语句中使用表名指定字段所属有点麻烦，sql也支持给表指别名，上述语句可以改进为：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>\n	t1<span class="token punctuation">.</span> NAME<span class="token punctuation">,</span>\n	t1<span class="token punctuation">.</span>gender<span class="token punctuation">,</span>\n	t2<span class="token punctuation">.</span>dname\n<span class="token keyword">FROM</span>\n	emp t1<span class="token punctuation">,</span>\n	dept t2\n<span class="token keyword">WHERE</span>\n	t1<span class="token punctuation">.</span>dep_id <span class="token operator">=</span> t2<span class="token punctuation">.</span>did<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行语句如下:</p><p><img src="' + _imports_40 + '" alt="image-20240102205309197"></p><p>显式内连接：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">inner</span> <span class="token keyword">join</span> dept <span class="token keyword">on</span> emp<span class="token punctuation">.</span>dep_id <span class="token operator">=</span> dept<span class="token punctuation">.</span>did<span class="token punctuation">;</span>\n<span class="token comment">-- 上面语句中的inner可以省略，可以书写为如下语句</span>\n<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp  <span class="token keyword">join</span> dept <span class="token keyword">on</span> emp<span class="token punctuation">.</span>dep_id <span class="token operator">=</span> dept<span class="token punctuation">.</span>did<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-外连接查询" tabindex="-1"><a class="header-anchor" href="#_2-外连接查询" aria-hidden="true">#</a> 2, 外连接查询</h3><p>语法：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 左外连接（相当于查询A表所有数据和交集部分数据）</span>\n<span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表<span class="token number">1</span> <span class="token keyword">LEFT</span> <span class="token punctuation">[</span><span class="token keyword">OUTER</span><span class="token punctuation">]</span> <span class="token keyword">JOIN</span> 表<span class="token number">2</span> <span class="token keyword">ON</span> 条件<span class="token punctuation">;</span>\n\n<span class="token comment">-- 右外连接（相当于查询B表所有数据和交集部分数据）</span>\n<span class="token keyword">SELECT</span> 字段列表 <span class="token keyword">FROM</span> 表<span class="token number">1</span> <span class="token keyword">RIGHT</span> <span class="token punctuation">[</span><span class="token keyword">OUTER</span><span class="token punctuation">]</span> <span class="token keyword">JOIN</span> 表<span class="token number">2</span> <span class="token keyword">ON</span> 条件<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="' + _imports_41 + '" alt="image-20240102160425314"></p><p>查询emp表所有数据和对应的部门信息（左外连接）：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">left</span> <span class="token keyword">join</span> dept <span class="token keyword">on</span> emp<span class="token punctuation">.</span>dep_id <span class="token operator">=</span> dept<span class="token punctuation">.</span>did<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>执行结果：</p><p><img src="' + _imports_42 + '" alt="image-20240102205413368"></p><p>结果显示查询到了左表（emp）中所有的数据及两张表能关联的数据。</p><p>查询dept表所有数据和对应的员工信息（右外连接）：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">right</span> <span class="token keyword">join</span> dept <span class="token keyword">on</span> emp<span class="token punctuation">.</span>dep_id <span class="token operator">=</span> dept<span class="token punctuation">.</span>did<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>执行结果：</p><p><img src="' + _imports_43 + '" alt="image-20240102205353141"></p><p>结果显示查询到了右表（dept）中所有的数据及两张表能关联的数据。</p><p>要查询出部门表中所有的数据，也可以通过左外连接实现，只需要将两个表的位置进行互换：：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> dept <span class="token keyword">left</span> <span class="token keyword">join</span> emp <span class="token keyword">on</span> emp<span class="token punctuation">.</span>dep_id <span class="token operator">=</span> dept<span class="token punctuation">.</span>did<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="' + _imports_44 + '" alt="image-20240102205513535"></p><h3 id="_3-子查询" tabindex="-1"><a class="header-anchor" href="#_3-子查询" aria-hidden="true">#</a> 3, 子查询</h3><p><strong>查询中嵌套查询</strong>，称嵌套查询为子查询。</p><p>举个例子：查询工资高于猪八戒的员工信息。实现这个需求，我们就可以通过二步实现，第一步：先查询出来 猪八戒的工资</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> salary <span class="token keyword">from</span> emp <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">&#39;猪八戒&#39;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="' + _imports_45 + '" alt="image-20240102205532586"></p><p>第二步：查询工资高于猪八戒的员工信息：</p><p><img src="' + _imports_46 + '" alt="image-20240102205544709"></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> salary <span class="token operator">&gt;</span> <span class="token number">3600</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>第二步中的3600可以通过第一步的sql查询出来，所以将3600用第一步的sql语句进行替换：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> salary <span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token keyword">select</span> salary <span class="token keyword">from</span> emp <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">&#39;猪八戒&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="' + _imports_47 + '" alt="image-20240102205602318"></p><p>这就是查询语句中嵌套查询语句。子查询根据查询结果不同，作用不同</p><ul><li>子查询语句结果是单行单列，子查询语句作为条件值，使用 = != &gt; &lt; 等进行条件判断</li><li>子查询语句结果是多行单列，子查询语句作为条件值，使用 in 等关键字进行条件判断</li><li>子查询语句结果是多行多列，子查询语句作为虚拟表</li></ul><p>查询 &#39;财务部&#39; 和 &#39;市场部&#39; 所有的员工信息：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 查询 &#39;财务部&#39; 或者 &#39;市场部&#39; 所有的员工的部门did</span>\n<span class="token comment">-- 结果是多行单列</span>\n<span class="token keyword">select</span> did <span class="token keyword">from</span> dept <span class="token keyword">where</span> dname <span class="token operator">=</span> <span class="token string">&#39;财务部&#39;</span> <span class="token operator">or</span> dname <span class="token operator">=</span> <span class="token string">&#39;市场部&#39;</span><span class="token punctuation">;</span>\n\n<span class="token comment">-- 将结果作为条件查询</span>\n<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> dep_id <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token keyword">select</span> did <span class="token keyword">from</span> dept <span class="token keyword">where</span> dname <span class="token operator">=</span> <span class="token string">&#39;财务部&#39;</span> <span class="token operator">or</span> dname <span class="token operator">=</span> <span class="token string">&#39;市场部&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="' + _imports_48 + '" alt="image-20240102205735355"></p><p>查询入职日期是 &#39;2011-11-11&#39; 之后的员工信息和部门信息：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 查询入职日期是 &#39;2011-11-11&#39; 之后的员工信息</span>\n<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> join_date <span class="token operator">&gt;</span> <span class="token string">&#39;2011-11-11&#39;</span> <span class="token punctuation">;</span>\n<span class="token comment">-- 将上面语句的结果作为虚拟表和dept表进行内连接查询</span>\n<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> emp <span class="token keyword">where</span> join_date <span class="token operator">&gt;</span> <span class="token string">&#39;2011-11-11&#39;</span> <span class="token punctuation">)</span> t1<span class="token punctuation">,</span> dept <span class="token keyword">where</span> t1<span class="token punctuation">.</span>dep_id <span class="token operator">=</span> dept<span class="token punctuation">.</span>did<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="' + _imports_49 + '" alt="image-20240102205754053"></p><h2 id="案例练习" tabindex="-1"><a class="header-anchor" href="#案例练习" aria-hidden="true">#</a> 案例练习</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> emp<span class="token punctuation">;</span>\n<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> dept<span class="token punctuation">;</span>\n<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> job<span class="token punctuation">;</span>\n<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> salarygrade<span class="token punctuation">;</span>\n\n<span class="token comment">-- 部门表</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> dept <span class="token punctuation">(</span>\n  did <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span> <span class="token comment">-- 部门id</span>\n  dname <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">-- 部门名称</span>\n  loc <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token comment">-- 部门所在地</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">-- 职务表，职务名称，职务描述</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> job <span class="token punctuation">(</span>\n  id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>\n  jname <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  description <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">-- 员工表</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> emp <span class="token punctuation">(</span>\n  id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span> <span class="token comment">-- 员工id</span>\n  ename <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">-- 员工姓名</span>\n  job_id <span class="token keyword">INT</span><span class="token punctuation">,</span> <span class="token comment">-- 职务id</span>\n  mgr <span class="token keyword">INT</span> <span class="token punctuation">,</span> <span class="token comment">-- 上级领导</span>\n  joindate <span class="token keyword">DATE</span><span class="token punctuation">,</span> <span class="token comment">-- 入职日期</span>\n  salary <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">-- 工资</span>\n  bonus <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">-- 奖金</span>\n  dept_id <span class="token keyword">INT</span><span class="token punctuation">,</span> <span class="token comment">-- 所在部门编号</span>\n  <span class="token keyword">CONSTRAINT</span> emp_jobid_ref_job_id_fk <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>job_id<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> job <span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token keyword">CONSTRAINT</span> emp_deptid_ref_dept_id_fk <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>dept_id<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> dept <span class="token punctuation">(</span>id<span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">-- 工资等级表</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> salarygrade <span class="token punctuation">(</span>\n  grade <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>   <span class="token comment">-- 级别</span>\n  losalary <span class="token keyword">INT</span><span class="token punctuation">,</span>  <span class="token comment">-- 最低工资</span>\n  hisalary <span class="token keyword">INT</span> <span class="token comment">-- 最高工资</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n				\n<span class="token comment">-- 添加4个部门</span>\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> dept<span class="token punctuation">(</span>did<span class="token punctuation">,</span>dname<span class="token punctuation">,</span>loc<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> \n<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token string">&#39;教研部&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;北京&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token string">&#39;学工部&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;上海&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token string">&#39;销售部&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;广州&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token string">&#39;财务部&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;深圳&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">-- 添加4个职务</span>\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> job <span class="token punctuation">(</span>id<span class="token punctuation">,</span> jname<span class="token punctuation">,</span> description<span class="token punctuation">)</span> <span class="token keyword">VALUES</span>\n<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;董事长&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;管理整个公司，接单&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;经理&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;管理部门员工&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;销售员&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;向客人推销产品&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;文员&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;使用办公软件&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">-- 添加员工</span>\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> emp<span class="token punctuation">(</span>id<span class="token punctuation">,</span>ename<span class="token punctuation">,</span>job_id<span class="token punctuation">,</span>mgr<span class="token punctuation">,</span>joindate<span class="token punctuation">,</span>salary<span class="token punctuation">,</span>bonus<span class="token punctuation">,</span>dept_id<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> \n<span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">,</span><span class="token string">&#39;孙悟空&#39;</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1004</span><span class="token punctuation">,</span><span class="token string">&#39;2000-12-17&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;8000.00&#39;</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">1002</span><span class="token punctuation">,</span><span class="token string">&#39;卢俊义&#39;</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1006</span><span class="token punctuation">,</span><span class="token string">&#39;2001-02-20&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;16000.00&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;3000.00&#39;</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">1003</span><span class="token punctuation">,</span><span class="token string">&#39;林冲&#39;</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1006</span><span class="token punctuation">,</span><span class="token string">&#39;2001-02-22&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;12500.00&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;5000.00&#39;</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">1004</span><span class="token punctuation">,</span><span class="token string">&#39;唐僧&#39;</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1009</span><span class="token punctuation">,</span><span class="token string">&#39;2001-04-02&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;29750.00&#39;</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">1005</span><span class="token punctuation">,</span><span class="token string">&#39;李逵&#39;</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1006</span><span class="token punctuation">,</span><span class="token string">&#39;2001-09-28&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;12500.00&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;14000.00&#39;</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">1006</span><span class="token punctuation">,</span><span class="token string">&#39;宋江&#39;</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1009</span><span class="token punctuation">,</span><span class="token string">&#39;2001-05-01&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;28500.00&#39;</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">1007</span><span class="token punctuation">,</span><span class="token string">&#39;刘备&#39;</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1009</span><span class="token punctuation">,</span><span class="token string">&#39;2001-09-01&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;24500.00&#39;</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">1008</span><span class="token punctuation">,</span><span class="token string">&#39;猪八戒&#39;</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1004</span><span class="token punctuation">,</span><span class="token string">&#39;2007-04-19&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;30000.00&#39;</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">1009</span><span class="token punctuation">,</span><span class="token string">&#39;罗贯中&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token string">&#39;2001-11-17&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;50000.00&#39;</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">1010</span><span class="token punctuation">,</span><span class="token string">&#39;吴用&#39;</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1006</span><span class="token punctuation">,</span><span class="token string">&#39;2001-09-08&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;15000.00&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;0.00&#39;</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">1011</span><span class="token punctuation">,</span><span class="token string">&#39;沙僧&#39;</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1004</span><span class="token punctuation">,</span><span class="token string">&#39;2007-05-23&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;11000.00&#39;</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">1012</span><span class="token punctuation">,</span><span class="token string">&#39;李逵&#39;</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1006</span><span class="token punctuation">,</span><span class="token string">&#39;2001-12-03&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;9500.00&#39;</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">1013</span><span class="token punctuation">,</span><span class="token string">&#39;小白龙&#39;</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1004</span><span class="token punctuation">,</span><span class="token string">&#39;2001-12-03&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;30000.00&#39;</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">1014</span><span class="token punctuation">,</span><span class="token string">&#39;关羽&#39;</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1007</span><span class="token punctuation">,</span><span class="token string">&#39;2002-01-23&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;13000.00&#39;</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">-- 添加5个工资等级</span>\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> salarygrade<span class="token punctuation">(</span>grade<span class="token punctuation">,</span>losalary<span class="token punctuation">,</span>hisalary<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> \n<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">7000</span><span class="token punctuation">,</span><span class="token number">12000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">12010</span><span class="token punctuation">,</span><span class="token number">14000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">14010</span><span class="token punctuation">,</span><span class="token number">20000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">20010</span><span class="token punctuation">,</span><span class="token number">30000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">30010</span><span class="token punctuation">,</span><span class="token number">99990</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询所有员工信息。查询员工编号，员工姓名，工资，职务名称，职务描述：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">/*\n	分析：\n		1. 员工编号，员工姓名，工资 信息在emp 员工表中\n		2. 职务名称，职务描述 信息在 job 职务表中\n		3. job 职务表 和 emp 员工表 是 一对多的关系 emp.job_id = job.id\n*/</span>\n<span class="token comment">-- 方式一 ：隐式内连接</span>\n<span class="token keyword">SELECT</span>\n	emp<span class="token punctuation">.</span>id<span class="token punctuation">,</span>\n	emp<span class="token punctuation">.</span>ename<span class="token punctuation">,</span>\n	emp<span class="token punctuation">.</span>salary<span class="token punctuation">,</span>\n	job<span class="token punctuation">.</span>jname<span class="token punctuation">,</span>\n	job<span class="token punctuation">.</span>description\n<span class="token keyword">FROM</span>\n	emp<span class="token punctuation">,</span>\n	job\n<span class="token keyword">WHERE</span>\n	emp<span class="token punctuation">.</span>job_id <span class="token operator">=</span> job<span class="token punctuation">.</span>id<span class="token punctuation">;</span>\n\n<span class="token comment">-- 方式二 ：显式内连接</span>\n<span class="token keyword">SELECT</span>\n	emp<span class="token punctuation">.</span>id<span class="token punctuation">,</span>\n	emp<span class="token punctuation">.</span>ename<span class="token punctuation">,</span>\n	emp<span class="token punctuation">.</span>salary<span class="token punctuation">,</span>\n	job<span class="token punctuation">.</span>jname<span class="token punctuation">,</span>\n	job<span class="token punctuation">.</span>description\n<span class="token keyword">FROM</span>\n	emp\n<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> job <span class="token keyword">ON</span> emp<span class="token punctuation">.</span>job_id <span class="token operator">=</span> job<span class="token punctuation">.</span>id<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询员工编号，员工姓名，工资，职务名称，职务描述，部门名称，部门位置：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">/*\n	分析：\n		1. 员工编号，员工姓名，工资 信息在emp 员工表中\n		2. 职务名称，职务描述 信息在 job 职务表中\n		3. job 职务表 和 emp 员工表 是 一对多的关系 emp.job_id = job.id\n\n		4. 部门名称，部门位置 来自于 部门表 dept\n		5. dept 和 emp 一对多关系 dept.id = emp.dept_id\n*/</span>\n\n<span class="token comment">-- 方式一 ：隐式内连接</span>\n<span class="token keyword">SELECT</span>\n	emp<span class="token punctuation">.</span>id<span class="token punctuation">,</span>\n	emp<span class="token punctuation">.</span>ename<span class="token punctuation">,</span>\n	emp<span class="token punctuation">.</span>salary<span class="token punctuation">,</span>\n	job<span class="token punctuation">.</span>jname<span class="token punctuation">,</span>\n	job<span class="token punctuation">.</span>description<span class="token punctuation">,</span>\n	dept<span class="token punctuation">.</span>dname<span class="token punctuation">,</span>\n	dept<span class="token punctuation">.</span>loc\n<span class="token keyword">FROM</span>\n	emp<span class="token punctuation">,</span>\n	job<span class="token punctuation">,</span>\n	dept\n<span class="token keyword">WHERE</span>\n	emp<span class="token punctuation">.</span>job_id <span class="token operator">=</span> job<span class="token punctuation">.</span>id\n	<span class="token operator">and</span> dept<span class="token punctuation">.</span>id <span class="token operator">=</span> emp<span class="token punctuation">.</span>dept_id\n<span class="token punctuation">;</span>\n\n<span class="token comment">-- 方式二 ：显式内连接</span>\n<span class="token keyword">SELECT</span>\n	emp<span class="token punctuation">.</span>id<span class="token punctuation">,</span>\n	emp<span class="token punctuation">.</span>ename<span class="token punctuation">,</span>\n	emp<span class="token punctuation">.</span>salary<span class="token punctuation">,</span>\n	job<span class="token punctuation">.</span>jname<span class="token punctuation">,</span>\n	job<span class="token punctuation">.</span>description<span class="token punctuation">,</span>\n	dept<span class="token punctuation">.</span>dname<span class="token punctuation">,</span>\n	dept<span class="token punctuation">.</span>loc\n<span class="token keyword">FROM</span>\n	emp\n<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> job <span class="token keyword">ON</span> emp<span class="token punctuation">.</span>job_id <span class="token operator">=</span> job<span class="token punctuation">.</span>id\n<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> dept <span class="token keyword">ON</span> dept<span class="token punctuation">.</span>id <span class="token operator">=</span> emp<span class="token punctuation">.</span>dept_id\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询员工姓名，工资，工资等级：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">/*\n	分析：\n		1. 员工姓名，工资 信息在emp 员工表中\n		2. 工资等级 信息在 salarygrade 工资等级表中\n		3. emp.salary &gt;= salarygrade.losalary  and emp.salary &lt;= salarygrade.hisalary\n*/</span>\n<span class="token keyword">SELECT</span>\n	emp<span class="token punctuation">.</span>ename<span class="token punctuation">,</span>\n	emp<span class="token punctuation">.</span>salary<span class="token punctuation">,</span>\n	t2<span class="token punctuation">.</span><span class="token operator">*</span>\n<span class="token keyword">FROM</span>\n	emp<span class="token punctuation">,</span>\n	salarygrade t2\n<span class="token keyword">WHERE</span>\n	emp<span class="token punctuation">.</span>salary <span class="token operator">&gt;=</span> t2<span class="token punctuation">.</span>losalary\n<span class="token operator">AND</span> emp<span class="token punctuation">.</span>salary <span class="token operator">&lt;=</span> t2<span class="token punctuation">.</span>hisalary\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询员工姓名，工资，职务名称，职务描述，部门名称，部门位置，工资等级：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">/*\n	分析：\n		1. 员工编号，员工姓名，工资 信息在emp 员工表中\n		2. 职务名称，职务描述 信息在 job 职务表中\n		3. job 职务表 和 emp 员工表 是 一对多的关系 emp.job_id = job.id\n\n		4. 部门名称，部门位置 来自于 部门表 dept\n		5. dept 和 emp 一对多关系 dept.id = emp.dept_id\n		6. 工资等级 信息在 salarygrade 工资等级表中\n		7. emp.salary &gt;= salarygrade.losalary  and emp.salary &lt;= salarygrade.hisalary\n*/</span>\n<span class="token keyword">SELECT</span>\n	emp<span class="token punctuation">.</span>id<span class="token punctuation">,</span>\n	emp<span class="token punctuation">.</span>ename<span class="token punctuation">,</span>\n	emp<span class="token punctuation">.</span>salary<span class="token punctuation">,</span>\n	job<span class="token punctuation">.</span>jname<span class="token punctuation">,</span>\n	job<span class="token punctuation">.</span>description<span class="token punctuation">,</span>\n	dept<span class="token punctuation">.</span>dname<span class="token punctuation">,</span>\n	dept<span class="token punctuation">.</span>loc<span class="token punctuation">,</span>\n	t2<span class="token punctuation">.</span>grade\n<span class="token keyword">FROM</span>\n	emp\n<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> job <span class="token keyword">ON</span> emp<span class="token punctuation">.</span>job_id <span class="token operator">=</span> job<span class="token punctuation">.</span>id\n<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> dept <span class="token keyword">ON</span> dept<span class="token punctuation">.</span>id <span class="token operator">=</span> emp<span class="token punctuation">.</span>dept_id\n<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> salarygrade t2 <span class="token keyword">ON</span> emp<span class="token punctuation">.</span>salary <span class="token operator">BETWEEN</span> t2<span class="token punctuation">.</span>losalary <span class="token operator">and</span> t2<span class="token punctuation">.</span>hisalary<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询出部门编号、部门名称、部门位置、部门人数：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">/*\n	分析：\n		1. 部门编号、部门名称、部门位置 来自于部门 dept 表\n		2. 部门人数: 在emp表中 按照dept_id 进行分组，然后count(*)统计数量\n		3. 使用子查询，让部门表和分组后的表进行内连接\n*/</span>\n<span class="token comment">-- 根据部门id分组查询每一个部门id和员工数</span>\n<span class="token keyword">select</span> dept_id<span class="token punctuation">,</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> emp <span class="token keyword">group</span> <span class="token keyword">by</span> dept_id<span class="token punctuation">;</span>\n\n<span class="token keyword">SELECT</span>\n	dept<span class="token punctuation">.</span>id<span class="token punctuation">,</span>\n	dept<span class="token punctuation">.</span>dname<span class="token punctuation">,</span>\n	dept<span class="token punctuation">.</span>loc<span class="token punctuation">,</span>\n	t1<span class="token punctuation">.</span>count\n<span class="token keyword">FROM</span>\n	dept<span class="token punctuation">,</span>\n	<span class="token punctuation">(</span>\n		<span class="token keyword">SELECT</span>\n			dept_id<span class="token punctuation">,</span>\n			<span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> count\n		<span class="token keyword">FROM</span>\n			emp\n		<span class="token keyword">GROUP</span> <span class="token keyword">BY</span>\n			dept_id\n	<span class="token punctuation">)</span> t1\n<span class="token keyword">WHERE</span>\n	dept<span class="token punctuation">.</span>id <span class="token operator">=</span> t1<span class="token punctuation">.</span>dept_id\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="案例二" tabindex="-1"><a class="header-anchor" href="#案例二" aria-hidden="true">#</a> 案例二</h2><h3 id="_1-创建数据表" tabindex="-1"><a class="header-anchor" href="#_1-创建数据表" aria-hidden="true">#</a> 1，创建数据表</h3><p>创建一些表：</p><ul><li>班级表 class</li><li>学生表 student</li><li>老师表 teacher</li><li>课程表 course</li><li>成绩表 score</li></ul><p>创建班级表：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> class<span class="token punctuation">(</span>\n    cid <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span> <span class="token punctuation">,</span>\n    caption <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> class <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;三年二班&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;三年三班&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;一年二班&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;二年九班&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建学生表：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> student<span class="token punctuation">(</span>\n    sid <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>\n    gender <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>\n    class_id <span class="token keyword">int</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>\n    sname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>\n    <span class="token keyword">constraint</span> fk_student_class <span class="token keyword">foreign</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>class_id<span class="token punctuation">)</span> <span class="token keyword">references</span> class<span class="token punctuation">(</span>cid<span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token keyword">default</span> <span class="token keyword">charset</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span>\n\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;理解&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;钢蛋&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;张一&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;张二&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;张四&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;铁锤&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;李三&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;9&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;李一&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;10&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;李二&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;11&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;李四&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;12&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;如花&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;13&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;刘三&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;14&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;刘一&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;15&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;女&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;刘二&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;16&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;刘四&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建老师表：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> teacher<span class="token punctuation">(</span>\n    tid <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span> <span class="token punctuation">,</span>\n    tname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span>\n<span class="token punctuation">)</span><span class="token keyword">default</span> <span class="token keyword">charset</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span>\n\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>teacher<span class="token punctuation">`</span></span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;张磊老师&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;李平老师&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;刘海燕老师&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;朱云海老师&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;李杰老师&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建课程表：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> course<span class="token punctuation">(</span>\n    cid <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>\n    cname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>\n    teacher_id <span class="token keyword">int</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>\n    <span class="token keyword">constraint</span> fk_course_teacher <span class="token keyword">foreign</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>teacher_id<span class="token punctuation">)</span> <span class="token keyword">references</span> teacher<span class="token punctuation">(</span>tid<span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token keyword">default</span> <span class="token keyword">charset</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span>\n\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>course<span class="token punctuation">`</span></span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;生物&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;物理&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;体育&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;美术&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建成绩表：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>score<span class="token punctuation">`</span></span> <span class="token punctuation">(</span>\n  <span class="token identifier"><span class="token punctuation">`</span>sid<span class="token punctuation">`</span></span> <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>student_id<span class="token punctuation">`</span></span> <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>course_id<span class="token punctuation">`</span></span> <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>num<span class="token punctuation">`</span></span> <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n  <span class="token keyword">CONSTRAINT</span> <span class="token identifier"><span class="token punctuation">`</span>fk_score_course<span class="token punctuation">`</span></span> <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>course_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> <span class="token identifier"><span class="token punctuation">`</span>course<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>cid<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token keyword">CONSTRAINT</span> <span class="token identifier"><span class="token punctuation">`</span>fk_score_student<span class="token punctuation">`</span></span> <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>student_id<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> <span class="token identifier"><span class="token punctuation">`</span>student<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>sid<span class="token punctuation">`</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span>\n\n\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>score<span class="token punctuation">`</span></span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;10&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;9&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;66&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;68&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;9&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;99&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;10&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;77&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;11&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;66&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;12&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;87&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;13&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;99&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;14&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;79&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;15&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;11&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;16&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;67&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;17&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;100&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;18&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;79&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;19&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;11&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;20&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;67&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;21&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;100&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;22&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;9&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;23&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;100&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;24&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;67&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;25&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;100&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;26&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;9&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;27&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;100&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;28&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;67&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;29&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;88&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;30&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;9&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;31&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;100&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;32&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;67&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;33&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;88&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;34&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;9&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;91&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;35&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;9&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;88&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;36&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;9&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;67&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;37&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;9&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;22&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;38&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;10&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;90&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;39&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;10&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;77&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;40&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;10&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;43&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;41&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;10&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;87&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;42&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;11&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;90&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;43&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;11&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;77&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;44&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;11&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;43&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;45&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;11&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;87&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;46&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;12&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;90&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;47&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;12&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;77&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;48&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;12&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;43&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;49&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;12&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;87&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;52&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;13&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;87&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查看表数据" tabindex="-1"><a class="header-anchor" href="#查看表数据" aria-hidden="true">#</a> 查看表数据</h3><p>那么, 现在创建好了五个数据表, 分别是以下数据内容</p><ul><li><p>班级表</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> class<span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">-----+----------+</span>\n<span class="token operator">|</span> cid <span class="token operator">|</span> caption  <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----+----------+</span>\n<span class="token operator">|</span>   <span class="token number">1</span> <span class="token operator">|</span> 三年二班 <span class="token operator">|</span>\n<span class="token operator">|</span>   <span class="token number">2</span> <span class="token operator">|</span> 三年三班 <span class="token operator">|</span>\n<span class="token operator">|</span>   <span class="token number">3</span> <span class="token operator">|</span> 一年二班 <span class="token operator">|</span>\n<span class="token operator">|</span>   <span class="token number">4</span> <span class="token operator">|</span> 二年九班 <span class="token operator">|</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>课程表</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> course<span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">-----+-------+------------+</span>\n<span class="token operator">|</span> cid <span class="token operator">|</span> cname <span class="token operator">|</span> teacher_id <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----+-------+------------+</span>\n<span class="token operator">|</span>   <span class="token number">1</span> <span class="token operator">|</span> 生物  <span class="token operator">|</span>          <span class="token number">1</span> <span class="token operator">|</span>\n<span class="token operator">|</span>   <span class="token number">2</span> <span class="token operator">|</span> 物理  <span class="token operator">|</span>          <span class="token number">2</span> <span class="token operator">|</span>\n<span class="token operator">|</span>   <span class="token number">3</span> <span class="token operator">|</span> 体育  <span class="token operator">|</span>          <span class="token number">3</span> <span class="token operator">|</span>\n<span class="token operator">|</span>   <span class="token number">4</span> <span class="token operator">|</span> 美术  <span class="token operator">|</span>          <span class="token number">2</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----+-------+------------+</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>成绩表</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> score<span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">-----+------------+-----------+-----+</span>\n<span class="token operator">|</span> sid <span class="token operator">|</span> student_id <span class="token operator">|</span> course_id <span class="token operator">|</span> num <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----+------------+-----------+-----+</span>\n<span class="token operator">|</span>   <span class="token number">1</span> <span class="token operator">|</span>          <span class="token number">1</span> <span class="token operator">|</span>         <span class="token number">1</span> <span class="token operator">|</span>  <span class="token number">10</span> <span class="token operator">|</span>\n<span class="token operator">|</span>   <span class="token number">2</span> <span class="token operator">|</span>          <span class="token number">1</span> <span class="token operator">|</span>         <span class="token number">2</span> <span class="token operator">|</span>   <span class="token number">9</span> <span class="token operator">|</span>\n<span class="token operator">|</span>   <span class="token number">5</span> <span class="token operator">|</span>          <span class="token number">1</span> <span class="token operator">|</span>         <span class="token number">4</span> <span class="token operator">|</span>  <span class="token number">66</span> <span class="token operator">|</span>\n<span class="token operator">|</span>   <span class="token number">6</span> <span class="token operator">|</span>          <span class="token number">2</span> <span class="token operator">|</span>         <span class="token number">1</span> <span class="token operator">|</span>   <span class="token number">8</span> <span class="token operator">|</span>\n<span class="token operator">|</span>   <span class="token number">8</span> <span class="token operator">|</span>          <span class="token number">2</span> <span class="token operator">|</span>         <span class="token number">3</span> <span class="token operator">|</span>  <span class="token number">68</span> <span class="token operator">|</span>\n<span class="token operator">|</span>   <span class="token number">9</span> <span class="token operator">|</span>          <span class="token number">2</span> <span class="token operator">|</span>         <span class="token number">4</span> <span class="token operator">|</span>  <span class="token number">99</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">10</span> <span class="token operator">|</span>          <span class="token number">3</span> <span class="token operator">|</span>         <span class="token number">1</span> <span class="token operator">|</span>  <span class="token number">77</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">11</span> <span class="token operator">|</span>          <span class="token number">3</span> <span class="token operator">|</span>         <span class="token number">2</span> <span class="token operator">|</span>  <span class="token number">66</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">12</span> <span class="token operator">|</span>          <span class="token number">3</span> <span class="token operator">|</span>         <span class="token number">3</span> <span class="token operator">|</span>  <span class="token number">87</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">13</span> <span class="token operator">|</span>          <span class="token number">3</span> <span class="token operator">|</span>         <span class="token number">4</span> <span class="token operator">|</span>  <span class="token number">99</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">14</span> <span class="token operator">|</span>          <span class="token number">4</span> <span class="token operator">|</span>         <span class="token number">1</span> <span class="token operator">|</span>  <span class="token number">79</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">15</span> <span class="token operator">|</span>          <span class="token number">4</span> <span class="token operator">|</span>         <span class="token number">2</span> <span class="token operator">|</span>  <span class="token number">11</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">16</span> <span class="token operator">|</span>          <span class="token number">4</span> <span class="token operator">|</span>         <span class="token number">3</span> <span class="token operator">|</span>  <span class="token number">67</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">17</span> <span class="token operator">|</span>          <span class="token number">4</span> <span class="token operator">|</span>         <span class="token number">4</span> <span class="token operator">|</span> <span class="token number">100</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">18</span> <span class="token operator">|</span>          <span class="token number">5</span> <span class="token operator">|</span>         <span class="token number">1</span> <span class="token operator">|</span>  <span class="token number">79</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">19</span> <span class="token operator">|</span>          <span class="token number">5</span> <span class="token operator">|</span>         <span class="token number">2</span> <span class="token operator">|</span>  <span class="token number">11</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">20</span> <span class="token operator">|</span>          <span class="token number">5</span> <span class="token operator">|</span>         <span class="token number">3</span> <span class="token operator">|</span>  <span class="token number">67</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">21</span> <span class="token operator">|</span>          <span class="token number">5</span> <span class="token operator">|</span>         <span class="token number">4</span> <span class="token operator">|</span> <span class="token number">100</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">22</span> <span class="token operator">|</span>          <span class="token number">6</span> <span class="token operator">|</span>         <span class="token number">1</span> <span class="token operator">|</span>   <span class="token number">9</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">23</span> <span class="token operator">|</span>          <span class="token number">6</span> <span class="token operator">|</span>         <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">100</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">24</span> <span class="token operator">|</span>          <span class="token number">6</span> <span class="token operator">|</span>         <span class="token number">3</span> <span class="token operator">|</span>  <span class="token number">67</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">25</span> <span class="token operator">|</span>          <span class="token number">6</span> <span class="token operator">|</span>         <span class="token number">4</span> <span class="token operator">|</span> <span class="token number">100</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">26</span> <span class="token operator">|</span>          <span class="token number">7</span> <span class="token operator">|</span>         <span class="token number">1</span> <span class="token operator">|</span>   <span class="token number">9</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">27</span> <span class="token operator">|</span>          <span class="token number">7</span> <span class="token operator">|</span>         <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">100</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">28</span> <span class="token operator">|</span>          <span class="token number">7</span> <span class="token operator">|</span>         <span class="token number">3</span> <span class="token operator">|</span>  <span class="token number">67</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">29</span> <span class="token operator">|</span>          <span class="token number">7</span> <span class="token operator">|</span>         <span class="token number">4</span> <span class="token operator">|</span>  <span class="token number">88</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">30</span> <span class="token operator">|</span>          <span class="token number">8</span> <span class="token operator">|</span>         <span class="token number">1</span> <span class="token operator">|</span>   <span class="token number">9</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">31</span> <span class="token operator">|</span>          <span class="token number">8</span> <span class="token operator">|</span>         <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">100</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">32</span> <span class="token operator">|</span>          <span class="token number">8</span> <span class="token operator">|</span>         <span class="token number">3</span> <span class="token operator">|</span>  <span class="token number">67</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">33</span> <span class="token operator">|</span>          <span class="token number">8</span> <span class="token operator">|</span>         <span class="token number">4</span> <span class="token operator">|</span>  <span class="token number">88</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">34</span> <span class="token operator">|</span>          <span class="token number">9</span> <span class="token operator">|</span>         <span class="token number">1</span> <span class="token operator">|</span>  <span class="token number">91</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">35</span> <span class="token operator">|</span>          <span class="token number">9</span> <span class="token operator">|</span>         <span class="token number">2</span> <span class="token operator">|</span>  <span class="token number">88</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">36</span> <span class="token operator">|</span>          <span class="token number">9</span> <span class="token operator">|</span>         <span class="token number">3</span> <span class="token operator">|</span>  <span class="token number">67</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">37</span> <span class="token operator">|</span>          <span class="token number">9</span> <span class="token operator">|</span>         <span class="token number">4</span> <span class="token operator">|</span>  <span class="token number">22</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">38</span> <span class="token operator">|</span>         <span class="token number">10</span> <span class="token operator">|</span>         <span class="token number">1</span> <span class="token operator">|</span>  <span class="token number">90</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">39</span> <span class="token operator">|</span>         <span class="token number">10</span> <span class="token operator">|</span>         <span class="token number">2</span> <span class="token operator">|</span>  <span class="token number">77</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">40</span> <span class="token operator">|</span>         <span class="token number">10</span> <span class="token operator">|</span>         <span class="token number">3</span> <span class="token operator">|</span>  <span class="token number">43</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">41</span> <span class="token operator">|</span>         <span class="token number">10</span> <span class="token operator">|</span>         <span class="token number">4</span> <span class="token operator">|</span>  <span class="token number">87</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">42</span> <span class="token operator">|</span>         <span class="token number">11</span> <span class="token operator">|</span>         <span class="token number">1</span> <span class="token operator">|</span>  <span class="token number">90</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">43</span> <span class="token operator">|</span>         <span class="token number">11</span> <span class="token operator">|</span>         <span class="token number">2</span> <span class="token operator">|</span>  <span class="token number">77</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">44</span> <span class="token operator">|</span>         <span class="token number">11</span> <span class="token operator">|</span>         <span class="token number">3</span> <span class="token operator">|</span>  <span class="token number">43</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">45</span> <span class="token operator">|</span>         <span class="token number">11</span> <span class="token operator">|</span>         <span class="token number">4</span> <span class="token operator">|</span>  <span class="token number">87</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">46</span> <span class="token operator">|</span>         <span class="token number">12</span> <span class="token operator">|</span>         <span class="token number">1</span> <span class="token operator">|</span>  <span class="token number">90</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">47</span> <span class="token operator">|</span>         <span class="token number">12</span> <span class="token operator">|</span>         <span class="token number">2</span> <span class="token operator">|</span>  <span class="token number">77</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">48</span> <span class="token operator">|</span>         <span class="token number">12</span> <span class="token operator">|</span>         <span class="token number">3</span> <span class="token operator">|</span>  <span class="token number">43</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">49</span> <span class="token operator">|</span>         <span class="token number">12</span> <span class="token operator">|</span>         <span class="token number">4</span> <span class="token operator">|</span>  <span class="token number">87</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">52</span> <span class="token operator">|</span>         <span class="token number">13</span> <span class="token operator">|</span>         <span class="token number">3</span> <span class="token operator">|</span>  <span class="token number">87</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----+------------+-----------+-----+</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>学生表</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student<span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">-----+--------+----------+-------+</span>\n<span class="token operator">|</span> sid <span class="token operator">|</span> gender <span class="token operator">|</span> class_id <span class="token operator">|</span> sname <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----+--------+----------+-------+</span>\n<span class="token operator">|</span>   <span class="token number">1</span> <span class="token operator">|</span> 男     <span class="token operator">|</span>        <span class="token number">1</span> <span class="token operator">|</span> 理解  <span class="token operator">|</span>\n<span class="token operator">|</span>   <span class="token number">2</span> <span class="token operator">|</span> 女     <span class="token operator">|</span>        <span class="token number">1</span> <span class="token operator">|</span> 钢蛋  <span class="token operator">|</span>\n<span class="token operator">|</span>   <span class="token number">3</span> <span class="token operator">|</span> 男     <span class="token operator">|</span>        <span class="token number">1</span> <span class="token operator">|</span> 张三  <span class="token operator">|</span>\n<span class="token operator">|</span>   <span class="token number">4</span> <span class="token operator">|</span> 男     <span class="token operator">|</span>        <span class="token number">1</span> <span class="token operator">|</span> 张一  <span class="token operator">|</span>\n<span class="token operator">|</span>   <span class="token number">5</span> <span class="token operator">|</span> 女     <span class="token operator">|</span>        <span class="token number">1</span> <span class="token operator">|</span> 张二  <span class="token operator">|</span>\n<span class="token operator">|</span>   <span class="token number">6</span> <span class="token operator">|</span> 男     <span class="token operator">|</span>        <span class="token number">1</span> <span class="token operator">|</span> 张四  <span class="token operator">|</span>\n<span class="token operator">|</span>   <span class="token number">7</span> <span class="token operator">|</span> 女     <span class="token operator">|</span>        <span class="token number">2</span> <span class="token operator">|</span> 铁锤  <span class="token operator">|</span>\n<span class="token operator">|</span>   <span class="token number">8</span> <span class="token operator">|</span> 男     <span class="token operator">|</span>        <span class="token number">2</span> <span class="token operator">|</span> 李三  <span class="token operator">|</span>\n<span class="token operator">|</span>   <span class="token number">9</span> <span class="token operator">|</span> 男     <span class="token operator">|</span>        <span class="token number">2</span> <span class="token operator">|</span> 李一  <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">10</span> <span class="token operator">|</span> 女     <span class="token operator">|</span>        <span class="token number">2</span> <span class="token operator">|</span> 李二  <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">11</span> <span class="token operator">|</span> 男     <span class="token operator">|</span>        <span class="token number">2</span> <span class="token operator">|</span> 李四  <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">12</span> <span class="token operator">|</span> 女     <span class="token operator">|</span>        <span class="token number">3</span> <span class="token operator">|</span> 如花  <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">13</span> <span class="token operator">|</span> 男     <span class="token operator">|</span>        <span class="token number">3</span> <span class="token operator">|</span> 刘三  <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">14</span> <span class="token operator">|</span> 男     <span class="token operator">|</span>        <span class="token number">3</span> <span class="token operator">|</span> 刘一  <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">15</span> <span class="token operator">|</span> 女     <span class="token operator">|</span>        <span class="token number">3</span> <span class="token operator">|</span> 刘二  <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">16</span> <span class="token operator">|</span> 男     <span class="token operator">|</span>        <span class="token number">3</span> <span class="token operator">|</span> 刘四  <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----+--------+----------+-------+</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>教师表</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> teacher<span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">-----+------------+</span>\n<span class="token operator">|</span> tid <span class="token operator">|</span> tname      <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----+------------+</span>\n<span class="token operator">|</span>   <span class="token number">1</span> <span class="token operator">|</span> 张磊老师   <span class="token operator">|</span>\n<span class="token operator">|</span>   <span class="token number">2</span> <span class="token operator">|</span> 李平老师   <span class="token operator">|</span>\n<span class="token operator">|</span>   <span class="token number">3</span> <span class="token operator">|</span> 刘海燕老师 <span class="token operator">|</span>\n<span class="token operator">|</span>   <span class="token number">4</span> <span class="token operator">|</span> 朱云海老师 <span class="token operator">|</span>\n<span class="token operator">|</span>   <span class="token number">5</span> <span class="token operator">|</span> 李杰老师   <span class="token operator">|</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul><p>执行以下练习</p><h3 id="_2-数据库练习" tabindex="-1"><a class="header-anchor" href="#_2-数据库练习" aria-hidden="true">#</a> 2，数据库练习</h3><ol><li><p>查询姓“李”的老师的个数。</p><ol><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> teacher <span class="token keyword">where</span> tname <span class="token operator">like</span> <span class="token string">&#39;李%&#39;</span><span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">----------+</span>\n<span class="token operator">|</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----------+</span>\n<span class="token operator">|</span>        <span class="token number">2</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----------+</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol></li><li><p>查询姓“张”的学生名单。</p><ol><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> student <span class="token keyword">where</span> sname <span class="token operator">like</span> <span class="token string">&#39;张%&#39;</span><span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">-----+--------+----------+-------+</span>\n<span class="token operator">|</span> sid <span class="token operator">|</span> gender <span class="token operator">|</span> class_id <span class="token operator">|</span> sname <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----+--------+----------+-------+</span>\n<span class="token operator">|</span>   <span class="token number">3</span> <span class="token operator">|</span> 男     <span class="token operator">|</span>        <span class="token number">1</span> <span class="token operator">|</span> 张三  <span class="token operator">|</span>\n<span class="token operator">|</span>   <span class="token number">4</span> <span class="token operator">|</span> 男     <span class="token operator">|</span>        <span class="token number">1</span> <span class="token operator">|</span> 张一  <span class="token operator">|</span>\n<span class="token operator">|</span>   <span class="token number">5</span> <span class="token operator">|</span> 女     <span class="token operator">|</span>        <span class="token number">1</span> <span class="token operator">|</span> 张二  <span class="token operator">|</span>\n<span class="token operator">|</span>   <span class="token number">6</span> <span class="token operator">|</span> 男     <span class="token operator">|</span>        <span class="token number">1</span> <span class="token operator">|</span> 张四  <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----+--------+----------+-------+</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol></li><li><p>查询男生、女生的人数。</p><ol><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> gender<span class="token punctuation">,</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">as</span> count <span class="token keyword">from</span> student\n<span class="token keyword">where</span> gender <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;女&#39;</span><span class="token punctuation">)</span>   <span class="token comment">-- 这个条件可有可无(选择性筛选)</span>\n<span class="token keyword">group</span> <span class="token keyword">by</span> gender<span class="token punctuation">;</span>  <span class="token comment">-- 根据 gender 分组</span>\n<span class="token operator">+</span><span class="token comment">--------+-------+</span>\n<span class="token operator">|</span> gender <span class="token operator">|</span> count <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">--------+-------+</span>\n<span class="token operator">|</span> 女     <span class="token operator">|</span>     <span class="token number">6</span> <span class="token operator">|</span>\n<span class="token operator">|</span> 男     <span class="token operator">|</span>    <span class="token number">10</span> <span class="token operator">|</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol></li><li><p>查询同名同姓学生名单，并统计同名人数。</p><ol><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> sname<span class="token punctuation">,</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">as</span> name_count \n<span class="token keyword">from</span> student\n<span class="token keyword">group</span> <span class="token keyword">by</span> sname\n<span class="token keyword">having</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>\n\nempty <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token comment">-- 没有同名学生</span>\n\n\n<span class="token comment">-- 修改一个同名, 测试以下</span>\nmysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> sname<span class="token punctuation">,</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">as</span> name_count \n<span class="token keyword">from</span> student\n<span class="token keyword">group</span> <span class="token keyword">by</span> sname\n<span class="token keyword">having</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">-------+------------+</span>\n<span class="token operator">|</span> sname <span class="token operator">|</span> name_count <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-------+------------+</span>\n<span class="token operator">|</span> 李二  <span class="token operator">|</span>          <span class="token number">2</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-------+------------+</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol></li><li><p>查询 “三年二班” 的所有学生。</p><ol><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> \n<span class="token keyword">from</span> student \n<span class="token keyword">left</span> <span class="token keyword">join</span> class \n<span class="token keyword">on</span> student<span class="token punctuation">.</span>class_id <span class="token operator">=</span> class_id <span class="token operator">=</span> class<span class="token punctuation">.</span>cid \n<span class="token keyword">where</span> class<span class="token punctuation">.</span>caption <span class="token operator">=</span> <span class="token string">&quot;三年二班&quot;</span><span class="token punctuation">;</span> \n\n\n<span class="token operator">+</span><span class="token comment">-----+--------+----------+-------+-----+----------+</span>\n<span class="token operator">|</span> sid <span class="token operator">|</span> gender <span class="token operator">|</span> class_id <span class="token operator">|</span> sname <span class="token operator">|</span> cid <span class="token operator">|</span> caption  <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----+--------+----------+-------+-----+----------+</span>\n<span class="token operator">|</span>   <span class="token number">1</span> <span class="token operator">|</span> 男     <span class="token operator">|</span>        <span class="token number">1</span> <span class="token operator">|</span> 理解  <span class="token operator">|</span>   <span class="token number">1</span> <span class="token operator">|</span> 三年二班 <span class="token operator">|</span>\n<span class="token operator">|</span>   <span class="token number">2</span> <span class="token operator">|</span> 女     <span class="token operator">|</span>        <span class="token number">1</span> <span class="token operator">|</span> 钢蛋  <span class="token operator">|</span>   <span class="token number">1</span> <span class="token operator">|</span> 三年二班 <span class="token operator">|</span>\n<span class="token operator">|</span>   <span class="token number">3</span> <span class="token operator">|</span> 男     <span class="token operator">|</span>        <span class="token number">1</span> <span class="token operator">|</span> 张三  <span class="token operator">|</span>   <span class="token number">1</span> <span class="token operator">|</span> 三年二班 <span class="token operator">|</span>\n<span class="token operator">|</span>   <span class="token number">4</span> <span class="token operator">|</span> 男     <span class="token operator">|</span>        <span class="token number">1</span> <span class="token operator">|</span> 张一  <span class="token operator">|</span>   <span class="token number">1</span> <span class="token operator">|</span> 三年二班 <span class="token operator">|</span>\n<span class="token operator">|</span>   <span class="token number">5</span> <span class="token operator">|</span> 女     <span class="token operator">|</span>        <span class="token number">1</span> <span class="token operator">|</span> 张二  <span class="token operator">|</span>   <span class="token number">1</span> <span class="token operator">|</span> 三年二班 <span class="token operator">|</span>\n<span class="token operator">|</span>   <span class="token number">6</span> <span class="token operator">|</span> 男     <span class="token operator">|</span>        <span class="token number">1</span> <span class="token operator">|</span> 张四  <span class="token operator">|</span>   <span class="token number">1</span> <span class="token operator">|</span> 三年二班 <span class="token operator">|</span>\n<span class="token operator">|</span>   <span class="token number">7</span> <span class="token operator">|</span> 女     <span class="token operator">|</span>        <span class="token number">2</span> <span class="token operator">|</span> 铁锤  <span class="token operator">|</span>   <span class="token number">1</span> <span class="token operator">|</span> 三年二班 <span class="token operator">|</span>\n<span class="token operator">|</span>   <span class="token number">8</span> <span class="token operator">|</span> 男     <span class="token operator">|</span>        <span class="token number">2</span> <span class="token operator">|</span> 李三  <span class="token operator">|</span>   <span class="token number">1</span> <span class="token operator">|</span> 三年二班 <span class="token operator">|</span>\n<span class="token operator">|</span>   <span class="token number">9</span> <span class="token operator">|</span> 男     <span class="token operator">|</span>        <span class="token number">2</span> <span class="token operator">|</span> 李二  <span class="token operator">|</span>   <span class="token number">1</span> <span class="token operator">|</span> 三年二班 <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">10</span> <span class="token operator">|</span> 女     <span class="token operator">|</span>        <span class="token number">2</span> <span class="token operator">|</span> 李二  <span class="token operator">|</span>   <span class="token number">1</span> <span class="token operator">|</span> 三年二班 <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">11</span> <span class="token operator">|</span> 男     <span class="token operator">|</span>        <span class="token number">2</span> <span class="token operator">|</span> 李四  <span class="token operator">|</span>   <span class="token number">1</span> <span class="token operator">|</span> 三年二班 <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">12</span> <span class="token operator">|</span> 女     <span class="token operator">|</span>        <span class="token number">3</span> <span class="token operator">|</span> 如花  <span class="token operator">|</span>   <span class="token number">1</span> <span class="token operator">|</span> 三年二班 <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">13</span> <span class="token operator">|</span> 男     <span class="token operator">|</span>        <span class="token number">3</span> <span class="token operator">|</span> 刘三  <span class="token operator">|</span>   <span class="token number">1</span> <span class="token operator">|</span> 三年二班 <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">14</span> <span class="token operator">|</span> 男     <span class="token operator">|</span>        <span class="token number">3</span> <span class="token operator">|</span> 刘一  <span class="token operator">|</span>   <span class="token number">1</span> <span class="token operator">|</span> 三年二班 <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">15</span> <span class="token operator">|</span> 女     <span class="token operator">|</span>        <span class="token number">3</span> <span class="token operator">|</span> 刘二  <span class="token operator">|</span>   <span class="token number">1</span> <span class="token operator">|</span> 三年二班 <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">16</span> <span class="token operator">|</span> 男     <span class="token operator">|</span>        <span class="token number">3</span> <span class="token operator">|</span> 刘四  <span class="token operator">|</span>   <span class="token number">1</span> <span class="token operator">|</span> 三年二班 <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">-----+--------+----------+-------+-----+----------+</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol></li><li><p>查询 每个 班级的 班级名称、班级人数。</p><ol><li></li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> class_id<span class="token punctuation">,</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> \n	student  	\n<span class="token keyword">group</span> <span class="token keyword">by</span> \n	class_id<span class="token punctuation">;</span>\n	\n<span class="token operator">+</span><span class="token comment">----------+----------+</span>\n<span class="token operator">|</span> class_id <span class="token operator">|</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----------+----------+</span>\n<span class="token operator">|</span>        <span class="token number">1</span> <span class="token operator">|</span>        <span class="token number">6</span> <span class="token operator">|</span>\n<span class="token operator">|</span>        <span class="token number">2</span> <span class="token operator">|</span>        <span class="token number">5</span> <span class="token operator">|</span>\n<span class="token operator">|</span>        <span class="token number">3</span> <span class="token operator">|</span>        <span class="token number">5</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----------+----------+</span>\n<span class="token comment">-- 以上并不是我们想要的查询结果</span>\n\nmysql<span class="token operator">&gt;</span> \n<span class="token keyword">select</span> \n	class<span class="token punctuation">.</span>caption<span class="token punctuation">,</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> \n<span class="token keyword">from</span> \n	student \n<span class="token keyword">left</span> <span class="token keyword">join</span> \n	class \n<span class="token keyword">on</span> \n	student<span class="token punctuation">.</span>class_id <span class="token operator">=</span> class<span class="token punctuation">.</span>cid \n<span class="token keyword">group</span> <span class="token keyword">by</span> \n	class<span class="token punctuation">.</span>caption<span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">----------+----------+</span>\n<span class="token operator">|</span> caption  <span class="token operator">|</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----------+----------+</span>\n<span class="token operator">|</span> 三年三班 <span class="token operator">|</span>        <span class="token number">5</span> <span class="token operator">|</span>\n<span class="token operator">|</span> 三年二班 <span class="token operator">|</span>        <span class="token number">6</span> <span class="token operator">|</span>\n<span class="token operator">|</span> 一年二班 <span class="token operator">|</span>        <span class="token number">5</span> <span class="token operator">|</span>\n\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询成绩小于60分的同学的学号、姓名、成绩、课程名称。</p><ol><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> score <span class="token keyword">where</span> num <span class="token operator">&lt;</span> <span class="token number">60</span><span class="token punctuation">;</span>\n<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> score <span class="token keyword">left</span> <span class="token keyword">join</span> student <span class="token keyword">on</span> score<span class="token punctuation">.</span>student_id <span class="token operator">=</span> student<span class="token punctuation">.</span>sid <span class="token keyword">where</span> num <span class="token operator">&lt;</span> <span class="token number">60</span><span class="token punctuation">;</span>\n\n<span class="token keyword">select</span> \nstudent<span class="token punctuation">.</span>sid <span class="token punctuation">,</span>\nstudent<span class="token punctuation">.</span>sname<span class="token punctuation">,</span>\nscore<span class="token punctuation">.</span>num<span class="token punctuation">,</span>\ncourse<span class="token punctuation">.</span>cname\n<span class="token keyword">from</span>\nscore\n<span class="token keyword">left</span> <span class="token keyword">join</span> student <span class="token keyword">on</span> score<span class="token punctuation">.</span>student_id <span class="token operator">=</span> student<span class="token punctuation">.</span>sid\n<span class="token keyword">left</span> <span class="token keyword">join</span> course <span class="token keyword">on</span> score<span class="token punctuation">.</span>course_id <span class="token operator">=</span> course<span class="token punctuation">.</span>cid\n<span class="token keyword">where</span> num <span class="token operator">&lt;</span> <span class="token number">60</span><span class="token punctuation">;</span>\n\n\n<span class="token comment">-- 三表联查</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li></li></ol></li><li><p>查询选修了 “生物课” 的所有学生ID、学生姓名、成绩。</p><ol><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> score <span class="token keyword">left</span> <span class="token keyword">join</span> course <span class="token keyword">on</span> score<span class="token punctuation">.</span>course_id<span class="token operator">=</span>course<span class="token punctuation">.</span><span class="token operator">in</span><span class="token operator">=</span>course<span class="token punctuation">.</span>cid <span class="token keyword">where</span> course<span class="token punctuation">.</span>cname<span class="token operator">=</span><span class="token string">&quot;生物&quot;</span><span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li></li></ol></li><li><p>查询选修了 “生物课” 且分数低于60的的所有学生ID、学生姓名、成绩。</p><ol><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div></li><li></li></ol></li><li><p>查询所有同学的学号、姓名、选课数、总成绩。</p><ol><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> \n	student_id<span class="token punctuation">,</span>\n	<span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n	<span class="token function">sum</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">,</span>\n	student<span class="token punctuation">.</span>sname\n<span class="token keyword">from</span>	\n	score\n	<span class="token keyword">left</span> <span class="token keyword">join</span> student <span class="token keyword">on</span> score<span class="token punctuation">.</span>student_id<span class="token operator">=</span>student<span class="token punctuation">.</span>sid\n<span class="token keyword">group</span> <span class="token keyword">by</span>\n	student_id<span class="token punctuation">;</span>\n	\n	<span class="token comment">-- 学号,	姓名,	选课数,	总成绩,</span>\n	mysql<span class="token operator">&gt;</span> \n<span class="token keyword">select</span> \n		student_id<span class="token punctuation">,</span>\n		student<span class="token punctuation">.</span>sname<span class="token punctuation">,</span>\n		<span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n		<span class="token function">sum</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>\n<span class="token keyword">from</span>	\n	score\n	<span class="token keyword">left</span> <span class="token keyword">join</span> student <span class="token keyword">on</span> score<span class="token punctuation">.</span>student_id<span class="token operator">=</span>student<span class="token punctuation">.</span>sid\n<span class="token keyword">group</span> <span class="token keyword">by</span>\n	student_id<span class="token punctuation">;</span>\n	\n<span class="token operator">+</span><span class="token comment">------------+-------+----------+----------+</span>\n<span class="token operator">|</span> student_id <span class="token operator">|</span> sname <span class="token operator">|</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token function">sum</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">------------+-------+----------+----------+</span>\n<span class="token operator">|</span>          <span class="token number">1</span> <span class="token operator">|</span> 理解  <span class="token operator">|</span>        <span class="token number">3</span> <span class="token operator">|</span> <span class="token number">85</span>       <span class="token operator">|</span>\n<span class="token operator">|</span>          <span class="token number">2</span> <span class="token operator">|</span> 钢蛋  <span class="token operator">|</span>        <span class="token number">3</span> <span class="token operator">|</span> <span class="token number">175</span>      <span class="token operator">|</span>\n<span class="token operator">|</span>          <span class="token number">3</span> <span class="token operator">|</span> 张三  <span class="token operator">|</span>        <span class="token number">4</span> <span class="token operator">|</span> <span class="token number">329</span>      <span class="token operator">|</span>\n<span class="token operator">|</span>          <span class="token number">4</span> <span class="token operator">|</span> 张一  <span class="token operator">|</span>        <span class="token number">4</span> <span class="token operator">|</span> <span class="token number">257</span>      <span class="token operator">|</span>\n<span class="token operator">|</span>          <span class="token number">5</span> <span class="token operator">|</span> 张二  <span class="token operator">|</span>        <span class="token number">4</span> <span class="token operator">|</span> <span class="token number">257</span>      <span class="token operator">|</span>\n<span class="token operator">|</span>          <span class="token number">6</span> <span class="token operator">|</span> 张四  <span class="token operator">|</span>        <span class="token number">4</span> <span class="token operator">|</span> <span class="token number">276</span>      <span class="token operator">|</span>\n<span class="token operator">|</span>          <span class="token number">7</span> <span class="token operator">|</span> 铁锤  <span class="token operator">|</span>        <span class="token number">4</span> <span class="token operator">|</span> <span class="token number">264</span>      <span class="token operator">|</span>\n<span class="token operator">|</span>          <span class="token number">8</span> <span class="token operator">|</span> 李三  <span class="token operator">|</span>        <span class="token number">4</span> <span class="token operator">|</span> <span class="token number">264</span>      <span class="token operator">|</span>\n<span class="token operator">|</span>          <span class="token number">9</span> <span class="token operator">|</span> 李二  <span class="token operator">|</span>        <span class="token number">4</span> <span class="token operator">|</span> <span class="token number">268</span>      <span class="token operator">|</span>\n<span class="token operator">|</span>         <span class="token number">10</span> <span class="token operator">|</span> 李二  <span class="token operator">|</span>        <span class="token number">4</span> <span class="token operator">|</span> <span class="token number">297</span>      <span class="token operator">|</span>\n<span class="token operator">|</span>         <span class="token number">11</span> <span class="token operator">|</span> 李四  <span class="token operator">|</span>        <span class="token number">4</span> <span class="token operator">|</span> <span class="token number">297</span>      <span class="token operator">|</span>\n<span class="token operator">|</span>         <span class="token number">12</span> <span class="token operator">|</span> 如花  <span class="token operator">|</span>        <span class="token number">4</span> <span class="token operator">|</span> <span class="token number">297</span>      <span class="token operator">|</span>\n<span class="token operator">|</span>         <span class="token number">13</span> <span class="token operator">|</span> 刘三  <span class="token operator">|</span>        <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">87</span>       <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">------------+-------+----------+----------+</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li></li></ol></li><li><p>查询各科被选修的学生数。</p><ol><li><div class="language-SQL line-numbers-mode" data-ext="SQL"><pre class="language-SQL"><code>-- 这门课有多少成绩,就表示有多少人选修\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li></li><li></li></ol></li><li><p>查询各科成绩的总分、最高分、最低分，显示：课程ID、课程名称、总分、最高分、最低分。</p><ol><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- </span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li></li></ol></li><li><p>查询各科成绩的平均分，显示：课程ID、课程名称、平均分。</p></li><li><p>查询各科成绩的平均分，显示：课程ID、课程名称、平均分（按平均分从大到小排序）。</p></li><li><p>查询各科成绩的平均分和及格率，显示：课程ID、课程名称、平均分、及格率。</p><ol><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> \ncourse_id <span class="token punctuation">,</span>\ncourse_name<span class="token punctuation">,</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li></li></ol></li><li><p>查询平均成绩大于60的所有学生的学号、平均成绩；。</p><ol><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li></li></ol></li><li><p>查询平均成绩大于85的所有学生的学号、平均成绩、姓名。</p><ol><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li></li></ol></li><li><p>查询 “三年二班” 每个学生的 学号、姓名、总成绩、平均成绩。</p><ol><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li></li></ol></li><li><p>查询各个班级的班级名称、总成绩、平均成绩、及格率（按平均成绩从大到小排序）。</p></li><li><p>查询学过 “波多” 老师课的同学的学号、姓名。</p></li><li><p>查询没学过 “波多” 老师课的同学的学号、姓名。</p></li><li><p>查询选修 “苍空” 老师所授课程的学生中，成绩最高的学生姓名及其成绩（不考虑并列）。</p></li><li><p>查询选修 “苍空” 老师所授课程的学生中，成绩最高的学生姓名及其成绩（考虑并列）。</p></li><li><p>查询只选修了一门课程的全部学生的学号、姓名。</p></li><li><p>查询至少选修两门课程的学生学号、学生姓名、选修课程数量。</p></li><li><p>查询两门及以上不及格的同学的学号、学生姓名、选修课程数量。</p></li><li><p>查询选修了所有课程的学生的学号、姓名。</p></li><li><p>查询未选修所有课程的学生的学号、姓名。</p></li><li><p>查询所有学生都选修了的课程的课程号、课程名。</p></li><li><p>查询选修 “生物” 和 “物理” 课程的所有学生学号、姓名。</p></li><li><p>查询至少有一门课与学号为“1”的学生所选的课程相同的其他学生学号 和 姓名 。</p></li><li><p>查询与学号为 “2” 的同学选修的课程完全相同的其他 学生学号 和 姓名 。</p></li><li><p>查询“生物”课程比“物理”课程成绩高的所有学生的学号；</p></li><li><p>查询每门课程成绩最好的前3名 (不考虑成绩并列情况) 。</p></li><li><p>查询每门课程成绩最好的前3名 (考虑成绩并列情况) 。</p></li><li><p>创建一个表 <code>sc</code>，然后将 score 表中所有数据插入到 sc 表中。</p></li><li><p>向 sc 表中插入一些记录，这些记录要求符合以下条件：</p><ul><li>学生ID为：没上过课程ID为 “2” 课程的学生的 学号；</li><li>课程ID为：2</li><li>成绩为：80</li></ul></li><li><p>向 sc 表中插入一些记录，这些记录要求符合以下条件：</p><ul><li>学生ID为：没上过课程ID为 “2” 课程的学生的 学号。</li><li>课程ID为：2。</li><li>成绩为：课程ID为3的最高分。</li></ul></li></ol><h2 id="九-事务" tabindex="-1"><a class="header-anchor" href="#九-事务" aria-hidden="true">#</a> 九, 事务</h2><p>MySQL 默认的引擎是没有事务的, 所以切换到 InnoDB 引擎支持事务</p><p><img src="' + _imports_50 + '" alt="image-20240103143114243"></p><blockquote><p><strong>修改整个数据库的默认存储引擎</strong>，需要执行以下步骤：</p><ol><li><p>登录到 MySQL 数据库服务器。</p></li><li><p>使用以下命令查看当前数据库的默认存储引擎：</p><p>复制</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>SHOW VARIABLES LIKE &#39;default_storage_engine&#39;;\n```\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>根据需要选择要更改为的新的默认存储引擎，例如 InnoDB、MyISAM 等。</p></li><li><p>修改 MySQL 配置文件（my.cnf 或 my.ini）： 找到并打开 MySQL 的配置文件，根据您使用的操作系统和 MySQL 版本的不同，其位置可能会有所不同。</p><p>添加或修改以下行，将默认存储引擎设置为您选择的引擎：</p><p>复制</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>default_storage_engine = new_default_engine\n```\n               \n将 `new_default_engine` 替换为您希望设置为默认引擎的名称。\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>保存并关闭配置文件。</p></li><li><p>重启 MySQL 服务： 根据您的操作系统，执行相应的命令重启 MySQL 服务。</p></li><li><p>验证默认存储引擎是否已更改：</p></li></ol></blockquote><p>重新启动MySQL服务</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>net start mysql\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 查看默认存储引擎</span>\n<span class="token keyword">SHOW</span> VARIABLES <span class="token operator">LIKE</span> <span class="token string">&#39;default_storage_engine&#39;</span><span class="token punctuation">;</span>\n<span class="token identifier"><span class="token punctuation">`</span><span class="token punctuation">`</span></span><span class="token punctuation">`</span>\n<span class="token operator">+</span><span class="token comment">------------------------+--------+</span>\n<span class="token operator">|</span> Variable_name          <span class="token operator">|</span> <span class="token keyword">Value</span>  <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">------------------------+--------+</span>\n<span class="token operator">|</span> default_storage_engine <span class="token operator">|</span> <span class="token keyword">InnoDB</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">------------------------+--------+</span>\n\n<span class="token comment">-- 确认输出中的值与您所选择的新引擎一致。</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-事务的定义" tabindex="-1"><a class="header-anchor" href="#_1-事务的定义" aria-hidden="true">#</a> 1, 事务的定义</h3><blockquote><p><strong>数据库的事务（Transaction）是一种机制、一个操作序列，包含了一组数据库操作命令</strong>。事务把所有的命令作为一个整体一起向系统提交或撤销操作请求，即这一组数据库命令要么同时成功，要么同时失败。事务是一个不可分割的工作逻辑单元。</p></blockquote><p>这些概念不好理解，接下来举例说明，</p><p>张三和李四账户中各有100块钱，现李四需要转500块钱给张三，具体的转账操作为</p><ul><li>第一步：查询李四账户余额</li><li>第二步：从李四账户金额 -500</li><li>第三步：给张三账户金额 +500</li></ul><p>现在假设在转账过程中第二步完成后<strong>出现了异常第三步没有执行</strong>，就会造成李四账户金额少了500，而张三金额并没有多500；这样的系统是有问题的。如果解决呢？使用事务可以解决上述问题</p><p><img src="' + _imports_51 + '" alt="image-20240102214314409"></p><p>从上图可以看到在转账前开启事务，如果<strong>出现了异常回滚事务</strong>，<strong>三步正常执行就提交事务</strong>，这样就可以完美解决问题。</p><h3 id="_2-语法" tabindex="-1"><a class="header-anchor" href="#_2-语法" aria-hidden="true">#</a> 2，语法</h3><p>开启事务：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span>\n<span class="token keyword">start</span> <span class="token keyword">transaction</span><span class="token punctuation">;</span>  <span class="token comment">-- 开始事务</span>\n或者  \n<span class="token keyword">BEGIN</span><span class="token punctuation">;</span>\n<span class="token keyword">begin</span><span class="token punctuation">;</span>						\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提交事务：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">commit</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>回滚事务：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">rollback</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-代码验证" tabindex="-1"><a class="header-anchor" href="#_3-代码验证" aria-hidden="true">#</a> 3，代码验证</h3><p>环境准备：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> account<span class="token punctuation">;</span>\n\n<span class="token comment">-- 创建账户表</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> account<span class="token punctuation">(</span>\n	id <span class="token keyword">int</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>\n	name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n	money <span class="token keyword">double</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">-- 添加数据</span>\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> account<span class="token punctuation">(</span>name<span class="token punctuation">,</span>money<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&#39;李四&#39;</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>不加事务演示问题</strong>：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 转账操作</span>\n<span class="token comment">-- 1. 查询李四账户金额是否大于500</span>\n\n<span class="token comment">-- 2. 李四账户 -500</span>\n<span class="token keyword">UPDATE</span> account <span class="token keyword">set</span> money <span class="token operator">=</span> money <span class="token operator">-</span> <span class="token number">500</span> <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">&#39;李四&#39;</span><span class="token punctuation">;</span>\n\n出现异常了<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token comment">-- 此处不是注释，在整体执行时会出问题，后面的sql则不执行</span>\n<span class="token comment">-- 3. 张三账户 +500</span>\n<span class="token keyword">UPDATE</span> account <span class="token keyword">set</span> money <span class="token operator">=</span> money <span class="token operator">+</span> <span class="token number">500</span> <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>整体执行<strong>结果肯定会出问题</strong>，我们查询账户表中数据，发现李四账户少了500。</p><p><strong>添加事务 sql 如下</strong>：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 开启事务</span>\n<span class="token keyword">BEGIN</span><span class="token punctuation">;</span>\n<span class="token comment">-- 转账操作</span>\n<span class="token comment">-- 1. 查询李四账户金额是否大于500</span>\n\n<span class="token comment">-- 2. 李四账户 -500</span>\n<span class="token keyword">UPDATE</span> account <span class="token keyword">set</span> money <span class="token operator">=</span> money <span class="token operator">-</span> <span class="token number">500</span> <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">&#39;李四&#39;</span><span class="token punctuation">;</span>\n\n出现异常了<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token comment">-- 此处不是注释，在整体执行时会出问题，后面的sql则不执行</span>\n<span class="token comment">-- 3. 张三账户 +500</span>\n<span class="token keyword">UPDATE</span> account <span class="token keyword">set</span> money <span class="token operator">=</span> money <span class="token operator">+</span> <span class="token number">500</span> <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">;</span>\n\n<span class="token comment">-- 提交事务</span>\n<span class="token keyword">COMMIT</span><span class="token punctuation">;</span>\n\n<span class="token comment">-- 回滚事务</span>\n<span class="token keyword">ROLLBACK</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面sql中的执行成功进选择执行提交事务，而出现问题则执行回滚事务的语句。以后我们肯定不可能这样操作，而是在java中进行操作，在java中可以抓取异常，没出现异常提交事务，出现异常回滚事务。</p><h3 id="_4-事务的四大特征" tabindex="-1"><a class="header-anchor" href="#_4-事务的四大特征" aria-hidden="true">#</a> 4，事务的四大特征</h3><p>事务有四在特征：</p><ul><li>原子性（Atomicity）: 事务是不可分割的最小操作单位，要么同时成功，要么同时失败</li><li>一致性（Consistency） : 事务完成时，必须使所有的数据都保持一致状态</li><li>隔离性（Isolation） : 多个事务之间，操作的可见性</li><li>持久性（Durability） : 事务一旦提交或回滚，它对数据库中的数据的改变就是永久的</li></ul><p>注意：</p><ul><li>mysql中事务是自动提交的。也就是说我们不添加事务执行sql语句，语句执行完毕会自动的提交事务。</li><li>可以通过下面语句查询默认提交方式：</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>  <span class="token keyword">SELECT</span> @<span class="token variable">@autocommit</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>查询到的结果是1 则表示自动提交，结果是0表示手动提交。当然也可以通过下面语句修改提交方式</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>  <span class="token keyword">set</span> @<span class="token variable">@autocommit</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_10-锁机制" tabindex="-1"><a class="header-anchor" href="#_10-锁机制" aria-hidden="true">#</a> 10, 锁机制</h3><p><img src="' + _imports_52 + '" alt="image-20240114121231667"></p><h1 id="jdbc" tabindex="-1"><a class="header-anchor" href="#jdbc" aria-hidden="true">#</a> JDBC</h1><h2 id="一-jdbc-概述" tabindex="-1"><a class="header-anchor" href="#一-jdbc-概述" aria-hidden="true">#</a> 一, JDBC 概述</h2><h3 id="_1-jdbc概念" tabindex="-1"><a class="header-anchor" href="#_1-jdbc概念" aria-hidden="true">#</a> 1，JDBC概念</h3><p>JDBC就是使用Java语言操作关系型数据库的一套API。全称：( Java DataBase Connectivity ) <strong>Java 数据库连接</strong>。</p><p><img src="' + _imports_53 + '" alt="image-20231229165527119"></p><p>同一套Java代码是无法操作不同的关系型数据库，因为每一个关系型数据库的底层实现细节都不一样。如果这样，问题就很大了，在公司中可以在开发阶段使用的是MySQL数据库，而上线时公司最终选用oracle数据库，我们就需要对代码进行大批量修改，这显然并不是我们想看到的。我们要做到的是<strong>同一套Java代码操作不同的关系型数据库</strong>，而此时sun公司就<strong>指定了一套标准接口（JDBC）</strong>，<strong>JDBC中定义了所有操作关系型数据库的规则</strong>。众所周知接口是无法直接使用的，我们需要使用接口的实现类，而这套实现类（称之为：驱动）就由各自的数据库厂商给出。</p><p><strong>JDBC总结：</strong></p><ul><li>官方（sun公司）定义的一套操作所有关系型数据库的规则，即接口</li><li>各个数据库厂商去实现这套接口，提供数据库驱动jar包</li><li>可以使用这套接口（JDBC）编程，真正执行的代码是驱动jar包中的实现类</li></ul><p><strong>JDBC好处：</strong></p><ul><li>各数据库厂商使用相同的接口，Java代码不需要针对不同数据库分别开发</li><li>可随时替换底层数据库，访问数据库的Java代码基本不变</li><li>以后编写操作数据库的代码只需要面向JDBC（接口），操作哪儿个关系型数据库就需要导入该数据库的驱动包，如需要操作MySQL数据库，就需要再项目中导入MySQL数据库的驱动包。</li></ul><h3 id="_2-jdbc快速入门" tabindex="-1"><a class="header-anchor" href="#_2-jdbc快速入门" aria-hidden="true">#</a> 2，JDBC快速入门</h3><p>通过Java操作数据库的流程如下：</p><p><img src="' + _imports_54 + '" alt="image-20231229165645598"></p><p>编写 JDBC 的步骤：</p><ul><li>第一步：编写Java代码</li><li>第二步：Java代码将SQL发送到MySQL服务端</li><li>第三步：MySQL服务端接收到SQL语句并执行该SQL语句</li><li>第四步：将SQL语句执行的结果返回给Java代码</li></ul><p>将<strong>mysql的驱动包</strong>放在模块下的lib目录（随意命名）下，并将该jar包添加为库文件：</p><p><img src="' + _imports_55 + '" alt="image-20240103173958295"></p><p><strong>下载jar包的三个网站</strong></p><ul><li>https://mvnrepository.com/</li><li>http://mvn.coderead.cn/</li><li>https://sourceforge.net/</li></ul><p>在添加为库文件的时候，有如下三个选项</p><ul><li>Global Library ： 全局有效</li><li>Project Library : 项目有效</li><li>Module Library ：模块有效</li></ul><blockquote><p>这个我们选择好 jar 包, 选择模块有</p></blockquote><p>编写如下代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo01</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ClassNotFoundException</span><span class="token punctuation">,</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>\n        <span class="token comment">/*\n        *第一步：编写Java代码\n        第二步：Java代码将SQL发送到MySQL服务端\n        第三步：MySQL服务端接收到SQL语句并执行该SQL语句\n        第四步：将SQL语句执行的结果返回给Java代码\n        * */</span>\n\n\n        <span class="token comment">//1. 注册驱动</span>\n        <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;com.mysql.jdbc.Driver&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//2. 获取连接 + mysql本地地址(可以省略) + 数据库名称</span>\n        <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">&quot;jdbc:mysql://127.0.0.1:3306/jdbc&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> username <span class="token operator">=</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> password <span class="token operator">=</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">;</span>\n        <span class="token comment">// 获取连接</span>\n        <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//3. 定义sql</span>\n        <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">&quot;update account set money = 2000 where id = 2&quot;</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//4. 获取执行sql的对象 Statement</span>\n        <span class="token class-name">Statement</span> stmt <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//5. 执行sql</span>\n        <span class="token keyword">int</span> count <span class="token operator">=</span> stmt<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//受影响的行数</span>\n\n        <span class="token comment">//6. 处理结果</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 1 (表示有一行数据更改了)</span>\n\n        <span class="token comment">//7. 释放资源</span>\n        stmt<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-jdbc-api" tabindex="-1"><a class="header-anchor" href="#_3-jdbc-api" aria-hidden="true">#</a> 3, JDBC API</h3><blockquote><p>JDBC API，Java应用程序可以<strong>连接到数据库服务器</strong>、<strong>执行SQL语句</strong>、<strong>处理查询结果</strong>等。</p></blockquote><p>以下是一些JDBC的相关API：</p><ol><li>DriverManager类：JDBC的入口点之一，用于<strong>建立与数据库的连接</strong>。它提供了获取数据库连接的静态方法，如<code>getConnection()</code>。</li><li>Connection接口：<strong>表示与数据库的连接</strong>。它提供了执行SQL语句、管理事务、获取数据库元数据等方法。</li><li>Statement接口：用于<strong>执行静态SQL语句并返回结果</strong>。通过<code>Connection</code>对象的<code>createStatement()</code>方法创建<code>Statement</code>对象。</li><li>PreparedStatement接口：与<code>Statement</code>类似，但可以预编译SQL语句，提高执行效率<strong>并防止SQL注入攻击</strong>。</li><li>CallableStatement接口：用于执行数据库中的存储过程。可以通过<code>Connection</code>对象的<code>prepareCall()</code>方法创建<code>CallableStatement</code>对象。</li><li>ResultSet接口：表示查询的结果集。通过执行<code>Statement</code>或<code>PreparedStatement</code>对象的<code>executeQuery()</code>方法获取<code>ResultSet</code>对象，然后可以使用它来遍历和操作查询结果。</li><li>ResultSetMetaData接口：用于获取<code>ResultSet</code>对象中的元数据，如列名、数据类型等信息。</li><li>SQLException类：<strong>表示与数据库交互过程中发生的异常</strong>。在处理JDBC操作时，需要捕获和处理可能抛出的<code>SQLException</code>。</li></ol><h4 id="drivermanager" tabindex="-1"><a class="header-anchor" href="#drivermanager" aria-hidden="true">#</a> DriverManager</h4><p><strong>注册驱动API</strong></p><ul><li>static void registerDriver(Driver dirveer) 使用DriverManager注册给定的驱动程序</li></ul><p>registerDriver方法是<strong>用于注册驱动的</strong>，但是我们之前做的入门案例并不是这样写的。而是如下实现：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;com.mysql.jdbc.Driver&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>MySQL提供的Driver类，看它是如何实现的，源码如下：</p><p><img src="' + _imports_56 + '" alt="image-20240103192710730"></p><p>在该类中的静态代码块中已经执行了 <code>DriverManager</code> 对象的 <code>registerDriver()</code> 方法进行驱动的注册了，那么我们只需要加载 <code>Driver</code> 类，该静态代码块就会执行。而 <code>Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</code> 就可以加载 <code>Driver</code> 类。</p><p>注意细节：</p><ul><li>MySQL 5之后的驱动包，可以省略注册驱动的步骤</li><li>自动加载jar包中META-INF/services/java.sql. Driver文件中的驱动类</li></ul><p><strong>获取数据库连接API</strong></p><ul><li>static Connection getConnection(String url, String user, String password) 尝试建立与给定数据库URL的连接。</li></ul><p>参数说明：</p><ul><li>url ：连接路径。语法：jdbc:mysql://ip地址(域名): 端口号/数据库名称? 参数键值对1&amp;参数键值对2… <ul><li>如果连接的是本机mysql服务器，并且mysql服务默认端口是3306，则url可以简写为：jdbc:mysql:///数据库名称? 参数键值对</li><li>配置 useSSL=false 参数，禁用安全连接方式，解决警告提示</li></ul></li><li>user ：用户名</li><li>password ：密码</li></ul><h4 id="connection" tabindex="-1"><a class="header-anchor" href="#connection" aria-hidden="true">#</a> Connection</h4><p>Connection（数据库连接对象）作用：</p><ul><li>获取执行 SQL 的对象</li><li><strong>管理事务</strong></li></ul><p><strong>获取执行对象API</strong></p><ul><li>Statement createStatement() 普通执行SQL对象</li><li>PreparedStatement prepareStatement(sql) 预编译SQL的执行SQL对象：防止SQL注入</li><li>CallableStatement prepareCall(sql) 执行存储过程的对象。存储过程在MySQL中不常用，了解。</li></ul><p><strong>事务管理：</strong> 回顾一下MySQL事务管理的操作（MySQL默认是自动提交事务）：</p><ul><li>开启事务 ： <strong>BEGIN</strong>; 或者 START TRANSACTION;</li><li>提交事务 ： <strong>COMMIT</strong>;</li><li>回滚事务 ： <strong>ROLLBACK</strong>;</li></ul><p><strong>JDBC事务管理API</strong></p><ul><li>void setAutoCommit(boolean autoCommit) 参与autoCommit 表示是否自动提交事务，true表示自动提交事务，false表示手动提交事务。而开启事务需要将该参数设为为false。</li><li>void commit() 提交事务</li><li>void rollback() 回滚事务</li></ul><p>代码演示：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>malu</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Connection</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">DriverManager</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Statement</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JDBCDemo</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 1. 注册驱动</span>\n        <span class="token comment">//Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span>\n\n        <span class="token comment">// 2. 获取连接</span>\n        <span class="token class-name">String</span> url <span class="token operator">=</span> &quot;jdbc<span class="token operator">:</span>mysql<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">3306</span><span class="token operator">/</span>jdbc<span class="token punctuation">;</span>\n        <span class="token class-name">String</span> username <span class="token operator">=</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> password <span class="token operator">=</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 3. 定义sql</span>\n        <span class="token class-name">String</span> sql1 <span class="token operator">=</span> <span class="token string">&quot;update account set money = 4000 where id = 1&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> sql2 <span class="token operator">=</span> <span class="token string">&quot;update account set money = 4000 where id = 2&quot;</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 4. 获取执行sql语句的Statement对象</span>\n        <span class="token class-name">Statement</span> stmt <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">try</span><span class="token punctuation">{</span>\n            <span class="token comment">// ============开启事务==========</span>\n            conn<span class="token punctuation">.</span><span class="token function">setAutoCommit</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置事务手动提交</span>\n            <span class="token comment">// 5. 执行sql语句</span>\n            <span class="token keyword">int</span> count1 <span class="token operator">=</span> stmt<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span>sql1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回受影响的行数</span>\n            <span class="token comment">//6. 处理结果</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>count1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">/</span><span class="token number">0</span><span class="token punctuation">;</span>\n            <span class="token keyword">int</span> count2 <span class="token operator">=</span> stmt<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span>sql2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回受影响的行数</span>\n            <span class="token comment">//6. 处理结果</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>count2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token comment">// ============提交事务==========</span>\n            <span class="token comment">//程序运行到此处，说明没有出现任何问题，则需求提交事务</span>\n            conn<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token comment">// ============回滚事务==========</span>\n            <span class="token comment">//程序在出现异常时会执行到这个地方，此时就需要回滚事务</span>\n            conn<span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token comment">// 7. 释放资源</span>\n        stmt<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="statement" tabindex="-1"><a class="header-anchor" href="#statement" aria-hidden="true">#</a> Statement</h4><p>Statement对象的作用就是<strong>用来执行SQL语句</strong>。而针对不同类型的SQL语句使用的方法也不一样。</p><ul><li>执行DDL，DML语句： exeecuteUpdate(String sql)</li><li>执行DQL语句：executeQuery(String sql)</li></ul><p><strong>执行DML语句代码演示：</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>malu</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Connection</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">DriverManager</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Statement</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JDBCDemo</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 1. 注册驱动</span>\n        <span class="token comment">//Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span>\n\n        <span class="token comment">// 2. 获取连接</span>\n        <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">&quot;jdbc:mysql://127.0.0.1:3306/jdbc&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> username <span class="token operator">=</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> password <span class="token operator">=</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 3. 定义sql</span>\n        <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">&quot;update account set money = 4000 where id = 1&quot;</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 4. 获取执行sql语句的Statement对象</span>\n        <span class="token class-name">Statement</span> stmt <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 5. 执行sql语句</span>\n        <span class="token keyword">int</span> count <span class="token operator">=</span> stmt<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回受影响的行数</span>\n        <span class="token comment">// 6. 处理结果</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>count <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;修改成功~&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;修改失败~&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token comment">// 7. 释放资源</span>\n        stmt<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行DDL语句代码演示(以后开发很少使用java代码操作DDL语句)：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>malu</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Connection</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">DriverManager</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Statement</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JDBCDemo</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 1. 注册驱动</span>\n        <span class="token comment">//Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span>\n\n        <span class="token comment">// 2. 获取连接</span>\n        <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">&quot;jdbc:mysql://127.0.0.1:3306/jdbc&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> username <span class="token operator">=</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> password <span class="token operator">=</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 3. 定义sql</span>\n        <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">&quot;drop database db2&quot;</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 4. 获取执行sql语句的Statement对象</span>\n        <span class="token class-name">Statement</span> stmt <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 5. 执行sql语句</span>\n        <span class="token keyword">int</span> count <span class="token operator">=</span> stmt<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回受影响的行数  可能是0</span>\n        <span class="token comment">// 6. 处理结果</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 7. 释放资源</span>\n        stmt<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="resultset" tabindex="-1"><a class="header-anchor" href="#resultset" aria-hidden="true">#</a> ResultSet</h4><p>ResultSet（结果集对象）作用：<strong>封装了SQL查询语句的结果</strong>。执行了DQL语句后就会返回该对象。我们就可以从 <code>ResultSet</code> 对象中获取我们想要的数据。 <code>ResultSet</code> 对象提供了操作查询结果数据的方法，如下：</p><ul><li>boolean next() 将<strong>光标从当前位置向前移动一行</strong>，判断当前行是否为有效行。 <ul><li>方法返回值为true，<strong>有效行，当前行有数据</strong></li><li>方法返回值为false，<strong>无效行，当前行没有数据</strong></li></ul></li><li>xxx getXxx(参数) 获取数据 <ul><li>xxx : 数据类型；如： int getInt(参数) ；String getString(参数)</li><li>int类型的参数：列的编号，从1开始。String类型的参数： 列的名称。</li></ul></li></ul><p><img src="' + _imports_57 + '" alt="image-20240103200209622"></p><p>一开始光标指定于第一行前，如图所示红色箭头指向于表头行。当我们调用了 <code>next()</code> 方法后，光标就下移到第一行数据，并且方法返回true，此时就可以通过 <code>getInt(&quot;id&quot;)</code> 获取当前行id字段的值，也可以通过 <code>getString(&quot;name&quot;)</code> 获取当前行name字段的值。如果想获取下一行的数据，继续调用 <code>next()</code> 方法，以此类推。</p><p>数据库中的数据如下：</p><p><img src="' + _imports_58 + '" alt="image-20240103200225443"></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>malu</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Connection</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">DriverManager</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">ResultSet</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Statement</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JDBCDemo</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 1. 注册驱动</span>\n        <span class="token comment">//Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span>\n\n        <span class="token comment">// 2. 获取连接</span>\n        <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">&quot;jdbc:mysql://127.0.0.1:3306/db1?useSSL=false&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> username <span class="token operator">=</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> password <span class="token operator">=</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 3. 定义sql</span>\n        <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">&quot;select * from account&quot;</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 4. 获取执行sql语句的Statement对象</span>\n        <span class="token class-name">Statement</span> stmt <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 5. 执行sql语句  rs是结果集</span>\n        <span class="token class-name">ResultSet</span> rs <span class="token operator">=</span> stmt<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 6. 处理结果</span>\n        <span class="token keyword">while</span> <span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">int</span> id <span class="token operator">=</span> rs<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">String</span> name <span class="token operator">=</span> rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">Double</span> money <span class="token operator">=</span> rs<span class="token punctuation">.</span><span class="token function">getDouble</span><span class="token punctuation">(</span><span class="token string">&quot;money&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>money<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;--------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token comment">// 7. 释放资源</span>\n        rs<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        stmt<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果如下：</p><p><img src="' + _imports_59 + '" alt="image-20240103200549907"></p><p>有了上面的基础后，我们做一个小案例。需求：查询account账户表数据，封装为Account对象中，并且存储到ArrayList集合中。</p><p><img src="' + _imports_60 + '" alt="image-20240103200602429"></p><p>创建Account实体类，如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Account</span> <span class="token punctuation">{</span>\n\n    <span class="token keyword">private</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token keyword">double</span> money<span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> id<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setId</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> name<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getMoney</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> money<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setMoney</span><span class="token punctuation">(</span><span class="token keyword">double</span> money<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>money <span class="token operator">=</span> money<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token string">&quot;Account{&quot;</span> <span class="token operator">+</span>\n                <span class="token string">&quot;id=&quot;</span> <span class="token operator">+</span> id <span class="token operator">+</span>\n                <span class="token string">&quot;, name=&#39;&quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token char">&#39;\\&#39;&#39;</span> <span class="token operator">+</span>\n                <span class="token string">&quot;, money=&quot;</span> <span class="token operator">+</span> money <span class="token operator">+</span>\n                <span class="token char">&#39;}&#39;</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>把查询到的数据封装成一个Account对象，把这个对象放到ArrayList集合中，如一上：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>malu</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Connection</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">DriverManager</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">ResultSet</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Statement</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>\n\n<span class="token doc-comment comment">/**\n * 查询account账户表数据，封装为Account对象中，并且存储到ArrayList集合中\n * 1. 定义实体类Account\n * 2. 查询数据，封装到Account对象中\n * 3. 将Account对象存入ArrayList集合中\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JDBCDemo</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 1. 注册驱动</span>\n        <span class="token comment">//Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span>\n\n        <span class="token comment">// 2. 获取连接</span>\n        <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">&quot;jdbc:mysql://127.0.0.1:3306/db1?useSSL=false&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> username <span class="token operator">=</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> password <span class="token operator">=</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 3. 定义sql</span>\n        <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">&quot;select * from account&quot;</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 4. 获取执行sql语句的Statement对象</span>\n        <span class="token class-name">Statement</span> stmt <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 5. 执行sql语句  rs是结果集</span>\n        <span class="token class-name">ResultSet</span> rs <span class="token operator">=</span> stmt<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Account</span><span class="token punctuation">&gt;</span></span> arrayList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 6. 处理结果</span>\n        <span class="token keyword">while</span> <span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token class-name">Account</span> account <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Account</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token keyword">int</span> id <span class="token operator">=</span> rs<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">String</span> name <span class="token operator">=</span> rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">Double</span> money <span class="token operator">=</span> rs<span class="token punctuation">.</span><span class="token function">getDouble</span><span class="token punctuation">(</span><span class="token string">&quot;money&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            account<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            account<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            account<span class="token punctuation">.</span><span class="token function">setMoney</span><span class="token punctuation">(</span>money<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            arrayList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>account<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arrayList<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 7. 释放资源</span>\n        rs<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        stmt<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果如下</p><p><img src="' + _imports_61 + '" alt="image-20240103200713352"></p><h4 id="preparedstatement" tabindex="-1"><a class="header-anchor" href="#preparedstatement" aria-hidden="true">#</a> PreparedStatement</h4><p>PreparedStatement作用：<strong>预编译SQL语句并执行</strong>，<strong>预防SQL注入问题</strong>。我们先要搞清楚什么是SQL注入。SQL注入是通过操作输入来修改事先定义好的SQL语句，用以达到执行代码对服务器进行攻击的方法。</p><p>创建一张表：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 删除tb_user表</span>\n<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> tb_user<span class="token punctuation">;</span>\n<span class="token comment">-- 创建tb_user表</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> tb_user<span class="token punctuation">(</span>\n	id <span class="token keyword">int</span><span class="token punctuation">,</span>\n	username <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n	password <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">-- 添加数据</span>\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> tb_user <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;wc&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;123&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&#39;xq&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;456&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码<strong>模拟SQL注入</strong>问题：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JDBCDemo</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 1. 注册驱动</span>\n        <span class="token comment">//Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span>\n\n        <span class="token comment">// 2. 获取连接</span>\n        <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">&quot;jdbc:mysql://127.0.0.1:3306/db1?useSSL=false&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> username <span class="token operator">=</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> password <span class="token operator">=</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 3. 定义sql</span>\n        <span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token string">&quot;wc&quot;</span><span class="token punctuation">;</span>\n        <span class="token comment">//String pwd = &quot;1234&quot;;</span>\n      \n			 <span class="token comment">// 在这个示例中，&quot;&#39; or &#39;1&#39; = &#39;1&quot;是一个SQL查询条件的一部分。通过使用&#39;1&#39; = &#39;1&#39;作为条件，攻击者试图绕过密码验证，因为这个条件永远为真。在SQL中，&#39;1&#39; = &#39;1&#39;表示&quot;1等于1&quot;，这是一个始终成立的条件。通过将这个条件加入到查询中，攻击者可以绕过实际的密码验证，获得未经授权的访问权限。</span>\n        <span class="token class-name">String</span> pwd <span class="token operator">=</span> <span class="token string">&quot;&#39; or &#39;1&#39; = &#39;1&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">&quot;select * from tb_user where username = &#39;&quot;</span><span class="token operator">+</span>name<span class="token operator">+</span><span class="token string">&quot;&#39; and password = &#39;&quot;</span><span class="token operator">+</span>pwd<span class="token operator">+</span><span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;sql:&quot;</span><span class="token operator">+</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 4. 获取执行sql语句的Statement对象</span>\n        <span class="token class-name">Statement</span> stmt <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 5. 执行sql语句  rs是结果集</span>\n        <span class="token class-name">ResultSet</span> rs <span class="token operator">=</span> stmt<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 6. 处理结果</span>\n        <span class="token comment">// 判断登录是否成功</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;登录成功~&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;登录失败~&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token comment">// 7. 释放资源</span>\n        rs<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        stmt<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码是将用户名和密码拼接到sql语句中，拼接后的sql语句如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>select <span class="token operator">*</span> from tb_user where username <span class="token operator">=</span> <span class="token char">&#39;wc&#39;</span> and password <span class="token operator">=</span> &#39;<span class="token char">&#39;or &#39;</span><span class="token number">1</span><span class="token char">&#39; = &#39;</span><span class="token number">1</span>&#39;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>预防 SQL 注入</strong></p><blockquote><p>如使用参数化查询或准备语句，以避免SQL注入攻击。</p></blockquote><p>知道了什么是SQL注入，接下来我们学习PreparedStatement。它的作用就是预编译SQL语句并执行，预防SQL注入问题。获取 PreparedStatement 对象</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// SQL语句中的参数值，使用？占位符替代</span>\n<span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">&quot;select * from user where username = ? and password = ?&quot;</span><span class="token punctuation">;</span>\n<span class="token comment">// 通过Connection对象获取，并传入对应的sql语句</span>\n<span class="token class-name">PreparedStatement</span> pstmt <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的sql语句中参数使用 ? 进行占位，在之前之前肯定要设置这些 ? 的值。</p><ul><li>PreparedStatement对象：setXxx(参数1，参数2)：给 ? 赋值 <ul><li>Xxx：数据类型 ； 如 setInt (参数1，参数2)</li><li>参数1： ？的位置编号，从1 开始</li><li>参数2： ？的值</li></ul></li></ul><p><strong>执行SQL语句</strong>：</p><ul><li>executeUpdate(); 执行DDL语句和DML语句</li><li>executeQuery(); 执行DQL语句</li><li>调用这两个方法时不需要传递SQL语句，因为获取SQL语句执行对象时已经对SQL语句进行预编译了。</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JDBCDemo</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 1. 注册驱动</span>\n        <span class="token comment">//Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span>\n\n        <span class="token comment">// 2. 获取连接</span>\n        <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">&quot;jdbc:mysql://127.0.0.1:3306/db1?useSSL=false&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> username <span class="token operator">=</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> password <span class="token operator">=</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 3. 定义sql</span>\n        <span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token string">&quot;wc&quot;</span><span class="token punctuation">;</span>\n        <span class="token comment">//String pwd = &quot;123&quot;;</span>\n        <span class="token class-name">String</span> pwd <span class="token operator">=</span> <span class="token string">&quot;&#39; or &#39;1&#39; = &#39;1&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">&quot;select * from tb_user where username = ? and password = ?&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;sql:&quot;</span><span class="token operator">+</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 4. 获取执行sql语句的Statement对象</span>\n        <span class="token class-name">PreparedStatement</span> pstmt <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// 设置参数</span>\n        pstmt<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        pstmt<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>pwd<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 5. 执行sql语句  rs是结果集</span>\n        <span class="token class-name">ResultSet</span> rs <span class="token operator">=</span> pstmt<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 6. 处理结果</span>\n        <span class="token comment">// 判断登录是否成功</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;登录成功~&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;登录失败~&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token comment">// 7. 释放资源</span>\n        rs<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        pstmt<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行上面语句就可以发现不会出现SQL注入漏洞问题了。那么PreparedStatement又是如何解决的呢？它是<strong>将特殊字符进行了转义</strong>，转义的SQL如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>select <span class="token operator">*</span> from tb_user where username <span class="token operator">=</span> <span class="token char">&#39;wc&#39;</span> and password <span class="token operator">=</span> &#39;\\&#39;or \\&#39;<span class="token number">1</span>\\<span class="token char">&#39; = \\&#39;1&#39;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>PreparedStatement 好处：</p><ul><li>预编译SQL，性能更高</li><li>防止SQL注入：将敏感字符进行转义</li></ul><h2 id="二-数据库连接池" tabindex="-1"><a class="header-anchor" href="#二-数据库连接池" aria-hidden="true">#</a> 二, 数据库连接池</h2><p>下载并导入相关的 durid jar包</p><h3 id="_1-什么是数据库连接池" tabindex="-1"><a class="header-anchor" href="#_1-什么是数据库连接池" aria-hidden="true">#</a> 1, 什么是数据库连接池</h3><p><strong>数据库连接池是个容器</strong>，<strong>负责分配、管理数据库连接</strong>(Connection)。它允许应用程序重复使用一个现有的数据库连接，而不是再重新建立一个；释放空闲时间超过最大空闲时间的数据库连接来避免因为没有释放数据库连接而引起的数据库连接遗漏。</p><p>它的<strong>好处</strong>在于：</p><ul><li>资源重用</li><li>提升系统响应速度</li><li>避免数据库连接遗漏</li></ul><p>之前我们代码中使用连接是没有使用数据库连接池的，都创建一个Connection对象，使用完毕就会将其销毁。这样重复创建销毁的过程是特别耗费计算机的性能的及消耗时间的。</p><p>而数据库使用了数据库连接池后，就能达到Connection对象的复用，如下图</p><p><img src="' + _imports_62 + '" alt="image-20240103204738491"></p><p>连接池是在一开始就创建好了一些连接（Connection）对象存储起来。用户需要连接数据库时，不需要自己创建连接，而只需要<strong>从连接池中获取一个连接</strong>进行使用，使用完毕后<strong>再将连接对象归还</strong>给连接池；这样就可以起到<strong>资源重用</strong>，也节省了频繁创建连接销毁连接所花费的时间，从而提升了系统响应的速度。</p><p>官方(SUN) 提供的数据库连接池标准接口，由第三方组织实现此接口。该接口提供了获取连接的功能： <code>Connection getConnection()</code> ，以后就不需要通过 <code>DriverManager</code> 对象获取 <code>Connection</code> 对象，而是通过连接池（DataSource）获取 <code>Connection</code> 对象。常见的数据库连接池：</p><ul><li>DBCP</li><li>C3P0</li><li>Druid（现在使用最多，性能比其他两个会好一些）</li></ul><h3 id="_2-druid" tabindex="-1"><a class="header-anchor" href="#_2-druid" aria-hidden="true">#</a> 2, Druid</h3><p>Druid连接池是阿里巴巴开源的数据库连接池项目，功能强大，性能优秀，是Java语言最好的数据库连接池之一。接下来我们演示一下Druid的使用。步骤：</p><ul><li>导入jar包 druid-1.1.12.jar</li><li>定义配置文件</li><li>加载配置文件</li><li>获取数据库连接池对象</li><li>获取连接</li></ul><p>现在通过代码实现，首先需要先将druid的jar包放到项目下的lib下并添加为库文件</p><p><img src="' + _imports_63 + '" alt="image-20240103211307016"></p><p>编写配置文件如下：</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">driverClassName</span><span class="token punctuation">=</span><span class="token value attr-value">com.mysql.jdbc.Driver</span>\n<span class="token key attr-name">url</span><span class="token punctuation">=</span><span class="token value attr-value">jdbc:mysql:///db1?useSSL=false&amp;useServerPrepStmts=true</span>\n<span class="token key attr-name">username</span><span class="token punctuation">=</span><span class="token value attr-value">root</span>\n<span class="token key attr-name">password</span><span class="token punctuation">=</span><span class="token value attr-value">1234</span>\n<span class="token comment"># 初始化连接数量</span>\n<span class="token key attr-name">initialSize</span><span class="token punctuation">=</span><span class="token value attr-value">5</span>\n<span class="token comment"># 最大连接数</span>\n<span class="token key attr-name">maxActive</span><span class="token punctuation">=</span><span class="token value attr-value">10</span>\n<span class="token comment"># 最大等待时间</span>\n<span class="token key attr-name">maxWait</span><span class="token punctuation">=</span><span class="token value attr-value">3000</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用druid的代码如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>malu</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>druid<span class="token punctuation">.</span>pool<span class="token punctuation">.</span></span><span class="token class-name">DruidDataSourceFactory</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">DataSource</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileInputStream</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Connection</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Properties</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DruidDemo</span> <span class="token punctuation">{</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 加载配置文件</span>\n        <span class="token class-name">Properties</span> prop <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        prop<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">&quot;module01/src/druid.properties&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 获取连接池对象  dataSource是连接池对象</span>\n        <span class="token class-name">DataSource</span> dataSource <span class="token operator">=</span> <span class="token class-name">DruidDataSourceFactory</span><span class="token punctuation">.</span><span class="token function">createDataSource</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 从连接池中获取连接</span>\n        <span class="token class-name">Connection</span> conn <span class="token operator">=</span> dataSource<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        \n        <span class="token comment">// 获取到连接后，就可以做后续其它操作了</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三-案例" tabindex="-1"><a class="header-anchor" href="#三-案例" aria-hidden="true">#</a> 三, 案例</h2><h3 id="_1-准备工作" tabindex="-1"><a class="header-anchor" href="#_1-准备工作" aria-hidden="true">#</a> 1, 准备工作</h3><p>完成商品品牌数据的增删改查操作</p><ul><li>查询：查询所有数据</li><li>添加：添加品牌</li><li>修改：根据id修改</li><li>删除：根据id删除</li></ul><p>数据库表 <code>tb_brand</code></p><p><img src="' + _imports_64 + '" alt="image-20240103211416722"></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 删除tb_brand表</span>\n<span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> tb_brand<span class="token punctuation">;</span>\n<span class="token comment">-- 创建tb_brand表</span>\n<span class="token keyword">create</span> <span class="token keyword">table</span> tb_brand <span class="token punctuation">(</span>\n    <span class="token comment">-- id 主键</span>\n    id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>\n    <span class="token comment">-- 品牌名称</span>\n    brand_name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token comment">-- 企业名称</span>\n    company_name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token comment">-- 排序字段</span>\n    ordered <span class="token keyword">int</span><span class="token punctuation">,</span>\n    <span class="token comment">-- 描述信息</span>\n    description <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token comment">-- 状态：0：禁用  1：启用</span>\n    <span class="token keyword">status</span> <span class="token keyword">int</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">-- 添加数据</span>\n<span class="token keyword">insert</span> <span class="token keyword">into</span> tb_brand <span class="token punctuation">(</span>brand_name<span class="token punctuation">,</span> company_name<span class="token punctuation">,</span> ordered<span class="token punctuation">,</span> description<span class="token punctuation">,</span> <span class="token keyword">status</span><span class="token punctuation">)</span>\n<span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token string">&#39;OPPO&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;欧珀广东移动通信有限公司&#39;</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;oppo全称欧珀广东移动通信有限公司，成立于2004年，CEO为陈明永&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n       <span class="token punctuation">(</span><span class="token string">&#39;华为&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;华为技术有限公司&#39;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&#39;华为技术有限公司，成立于1987年，总部位于广东省深圳市龙岗区。&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n       <span class="token punctuation">(</span><span class="token string">&#39;小米&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;小米科技有限责任公司&#39;</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token string">&#39;小米科技有限责任公司成立于2010年3月3日，是专注于智能硬件、电子产品、芯片研发、智能手机、智能电动汽车、通信、金融、互联网电视及智能家居生态链建设的全球化移动互联网企业、创新型科技企业。&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在pojo包下实体类 Brand</p><h3 id="_2-查询所有" tabindex="-1"><a class="header-anchor" href="#_2-查询所有" aria-hidden="true">#</a> 2, 查询所有</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>malu</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>druid<span class="token punctuation">.</span>pool<span class="token punctuation">.</span></span><span class="token class-name">DruidDataSourceFactory</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>malu<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span></span><span class="token class-name">Brand</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">DataSource</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileInputStream</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Connection</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">PreparedStatement</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">ResultSet</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Properties</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DruidDemo</span> <span class="token punctuation">{</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 加载配置文件</span>\n        <span class="token class-name">Properties</span> prop <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        prop<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">&quot;module01/src/druid.properties&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 获取连接池对象  dataSource是连接池对象</span>\n        <span class="token class-name">DataSource</span> dataSource <span class="token operator">=</span> <span class="token class-name">DruidDataSourceFactory</span><span class="token punctuation">.</span><span class="token function">createDataSource</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 从连接池中获取连接</span>\n        <span class="token class-name">Connection</span> conn <span class="token operator">=</span> dataSource<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 定义SQL语句</span>\n        <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">&quot;select * from tb_brand&quot;</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 获取pstmt对象</span>\n        <span class="token class-name">PreparedStatement</span> pstmt <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token class-name">ResultSet</span> rs <span class="token operator">=</span> pstmt<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token class-name">Brand</span> brand <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Brand</span><span class="token punctuation">&gt;</span></span> brands <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Brand</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">while</span> <span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token comment">//获取数据</span>\n            <span class="token keyword">int</span> id <span class="token operator">=</span> rs<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">String</span> brandName <span class="token operator">=</span> rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;brand_name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">String</span> companyName <span class="token operator">=</span> rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;company_name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">int</span> ordered <span class="token operator">=</span> rs<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string">&quot;ordered&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">String</span> description <span class="token operator">=</span> rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;description&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">int</span> status <span class="token operator">=</span> rs<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string">&quot;status&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token comment">//封装Brand对象</span>\n            brand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Brand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            brand<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            brand<span class="token punctuation">.</span><span class="token function">setBrandName</span><span class="token punctuation">(</span>brandName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            brand<span class="token punctuation">.</span><span class="token function">setCompanyName</span><span class="token punctuation">(</span>companyName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            brand<span class="token punctuation">.</span><span class="token function">setOrdered</span><span class="token punctuation">(</span>ordered<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            brand<span class="token punctuation">.</span><span class="token function">setDescription</span><span class="token punctuation">(</span>description<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            brand<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            brands<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>brand<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Brand</span> brand1 <span class="token operator">:</span> brands<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>brand1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        rs<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        pstmt<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果如下：</p><p><img src="' + _imports_65 + '" alt="image-20240103211652754"></p><h3 id="_3-添加数据" tabindex="-1"><a class="header-anchor" href="#_3-添加数据" aria-hidden="true">#</a> 3, 添加数据</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>malu</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>druid<span class="token punctuation">.</span>pool<span class="token punctuation">.</span></span><span class="token class-name">DruidDataSourceFactory</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">DataSource</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileInputStream</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Connection</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">PreparedStatement</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Properties</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DruidDemo</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>\n\n        <span class="token comment">// 模拟前端提交过来的数据</span>\n        <span class="token class-name">String</span> brandName <span class="token operator">=</span> <span class="token string">&quot;百度&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> companyName <span class="token operator">=</span> <span class="token string">&quot;百度在线网络技术（北京）有限公司&quot;</span><span class="token punctuation">;</span>\n        <span class="token keyword">int</span> ordered <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> description <span class="token operator">=</span> <span class="token string">&quot;百度（Nasdaq简称：BIDU）是全球最大的中文搜索引擎，2000年1月由李彦宏、徐勇两人创立于北京中关村，致力于向人们提供“简单，可依赖”的信息获取方式。&quot;</span><span class="token punctuation">;</span>\n        <span class="token keyword">int</span> status <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 加载配置文件</span>\n        <span class="token class-name">Properties</span> prop <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        prop<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">&quot;module01/src/druid.properties&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 获取连接池对象  dataSource是连接池对象</span>\n        <span class="token class-name">DataSource</span> dataSource <span class="token operator">=</span> <span class="token class-name">DruidDataSourceFactory</span><span class="token punctuation">.</span><span class="token function">createDataSource</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 从连接池中获取连接</span>\n        <span class="token class-name">Connection</span> conn <span class="token operator">=</span> dataSource<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 定义SQL语句</span>\n        <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">&quot;insert into tb_brand(brand_name, company_name, ordered, description, status) values(?,?,?,?,?);&quot;</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 获取pstmt对象</span>\n        <span class="token class-name">PreparedStatement</span> pstmt <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// 设置参数</span>\n        pstmt<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>brandName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        pstmt<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>companyName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        pstmt<span class="token punctuation">.</span><span class="token function">setInt</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span>ordered<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        pstmt<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span>description<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        pstmt<span class="token punctuation">.</span><span class="token function">setInt</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">int</span> count <span class="token operator">=</span> pstmt<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>count<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        pstmt<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行结果：</p><p><img src="' + _imports_66 + '" alt="image-20240103211913956"></p><h3 id="_4-修改数据" tabindex="-1"><a class="header-anchor" href="#_4-修改数据" aria-hidden="true">#</a> 4, 修改数据</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>malu</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>druid<span class="token punctuation">.</span>pool<span class="token punctuation">.</span></span><span class="token class-name">DruidDataSourceFactory</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">DataSource</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileInputStream</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Connection</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">PreparedStatement</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Properties</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DruidDemo</span> <span class="token punctuation">{</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>\n\n        <span class="token comment">// 模拟前端提交过来的数据</span>\n        <span class="token class-name">String</span> brandName <span class="token operator">=</span> <span class="token string">&quot;百度6&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> companyName <span class="token operator">=</span> <span class="token string">&quot;百度在线网络技术（北京）有限公司6&quot;</span><span class="token punctuation">;</span>\n        <span class="token keyword">int</span> ordered <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> description <span class="token operator">=</span> <span class="token string">&quot;百度（Nasdaq简称：BIDU）是全球最大的中文搜索引擎，2000年1月由李彦宏、徐勇两人创立于北京中关村，致力于向人们提供“简单，可依赖”的信息获取方式。&quot;</span><span class="token punctuation">;</span>\n        <span class="token keyword">int</span> status <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n        <span class="token keyword">int</span> id <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span> <span class="token comment">// 修改相比添加多了一个id参数</span>\n\n        <span class="token comment">// 加载配置文件</span>\n        <span class="token class-name">Properties</span> prop <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        prop<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">&quot;module01/src/druid.properties&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 获取连接池对象  dataSource是连接池对象</span>\n        <span class="token class-name">DataSource</span> dataSource <span class="token operator">=</span> <span class="token class-name">DruidDataSourceFactory</span><span class="token punctuation">.</span><span class="token function">createDataSource</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 从连接池中获取连接</span>\n        <span class="token class-name">Connection</span> conn <span class="token operator">=</span> dataSource<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 定义SQL语句</span>\n        <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">&quot; update tb_brand\\n&quot;</span> <span class="token operator">+</span>\n                <span class="token string">&quot;         set brand_name  = ?,\\n&quot;</span> <span class="token operator">+</span>\n                <span class="token string">&quot;         company_name= ?,\\n&quot;</span> <span class="token operator">+</span>\n                <span class="token string">&quot;         ordered     = ?,\\n&quot;</span> <span class="token operator">+</span>\n                <span class="token string">&quot;         description = ?,\\n&quot;</span> <span class="token operator">+</span>\n                <span class="token string">&quot;         status      = ?\\n&quot;</span> <span class="token operator">+</span>\n                <span class="token string">&quot;     where id = ?&quot;</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 获取pstmt对象</span>\n        <span class="token class-name">PreparedStatement</span> pstmt <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// 设置参数</span>\n        pstmt<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>brandName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        pstmt<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>companyName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        pstmt<span class="token punctuation">.</span><span class="token function">setInt</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span>ordered<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        pstmt<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span>description<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        pstmt<span class="token punctuation">.</span><span class="token function">setInt</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        pstmt<span class="token punctuation">.</span><span class="token function">setInt</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">int</span> count <span class="token operator">=</span> pstmt<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>count<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        pstmt<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="' + _imports_67 + '" alt="image-20240103211936812"></p><h3 id="_5-删除数据" tabindex="-1"><a class="header-anchor" href="#_5-删除数据" aria-hidden="true">#</a> 5, 删除数据</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>malu</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>druid<span class="token punctuation">.</span>pool<span class="token punctuation">.</span></span><span class="token class-name">DruidDataSourceFactory</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">DataSource</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileInputStream</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Connection</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">PreparedStatement</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Properties</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DruidDemo</span> <span class="token punctuation">{</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>\n\n        <span class="token comment">// 模拟前端提交过来的数据</span>\n        <span class="token keyword">int</span> id <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 加载配置文件</span>\n        <span class="token class-name">Properties</span> prop <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        prop<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">&quot;module01/src/druid.properties&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 获取连接池对象  dataSource是连接池对象</span>\n        <span class="token class-name">DataSource</span> dataSource <span class="token operator">=</span> <span class="token class-name">DruidDataSourceFactory</span><span class="token punctuation">.</span><span class="token function">createDataSource</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 从连接池中获取连接</span>\n        <span class="token class-name">Connection</span> conn <span class="token operator">=</span> dataSource<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 定义SQL语句</span>\n        <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">&quot; delete from tb_brand where id = ?&quot;</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 获取pstmt对象</span>\n        <span class="token class-name">PreparedStatement</span> pstmt <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// 设置参数</span>\n        pstmt<span class="token punctuation">.</span><span class="token function">setInt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">int</span> count <span class="token operator">=</span> pstmt<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>count<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        pstmt<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="' + _imports_68 + '" alt="image-20240103212033724"></p><h1 id="高频面试题" tabindex="-1"><a class="header-anchor" href="#高频面试题" aria-hidden="true">#</a> ==高频面试题==</h1><h2 id="mysql-1" tabindex="-1"><a class="header-anchor" href="#mysql-1" aria-hidden="true">#</a> MySQL</h2><h3 id="_1-什么是数据库索引-为什么要使用索引" tabindex="-1"><a class="header-anchor" href="#_1-什么是数据库索引-为什么要使用索引" aria-hidden="true">#</a> 1, 什么是数据库索引？为什么要使用索引？</h3><p>答：</p><p><strong>索引是一种数据结构</strong>，<strong>用于提高数据库的查询速度</strong>。它可以快速定位到具有特定值的行，从而避免全表扫描。</p><p>使用索引可以大大提高查询性能。</p><h3 id="_2-什么是事务-mysql中如何管理事务" tabindex="-1"><a class="header-anchor" href="#_2-什么是事务-mysql中如何管理事务" aria-hidden="true">#</a> 2, 什么是事务？MySQL中如何管理事务？</h3><p>答：</p><p><strong>事务是一组数据库操作</strong>，要么全部执行成功，要么全部失败回滚。</p><p>在MySQL中，使用START TRANSACTION、COMMIT和ROLLBACK命令来管理事务。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>-- 开始事务	start transaction  \n-- 提交事务 commit\n-- 回滚     rollback\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-主键和外键有什么区别" tabindex="-1"><a class="header-anchor" href="#_3-主键和外键有什么区别" aria-hidden="true">#</a> 3, 主键和外键有什么区别？</h3><p>答：</p><p><strong>主键</strong>是用于唯一标识一条记录的字段，它在表中是唯一且不为空的。</p><p><strong>外键</strong>是用于建立表与表之间关系的字段，它指向另一张表的主键。</p><h3 id="_4-什么是连接-join-操作-有哪些类型的连接" tabindex="-1"><a class="header-anchor" href="#_4-什么是连接-join-操作-有哪些类型的连接" aria-hidden="true">#</a> 4, 什么是连接（JOIN）操作？有哪些类型的连接？</h3><p>答：</p><p>连接是<strong>通过匹配表之间的字段合并数据的操作</strong>。</p><p>常见的连接类型有<strong>内连接</strong>（INNER JOIN）、<strong>左连接</strong>（LEFT JOIN）、<strong>右连接</strong>（RIGHT JOIN）和<strong>全连接</strong>（FULL JOIN）。</p><h3 id="_5-mysql的存储引擎有哪些-它们有什么区别" tabindex="-1"><a class="header-anchor" href="#_5-mysql的存储引擎有哪些-它们有什么区别" aria-hidden="true">#</a> 5, MySQL的存储引擎有哪些？它们有什么区别？</h3><p>答：</p><p>MySQL的存储引擎包括<strong>InnoDB</strong>、<strong>MyISAM</strong>、<strong>Memory</strong>等。</p><p>它们的区别主要体现在事务支持、锁机制、索引类型等方面。</p><h3 id="_6-mysql中的acid是什么意思" tabindex="-1"><a class="header-anchor" href="#_6-mysql中的acid是什么意思" aria-hidden="true">#</a> 6, MySQL中的ACID是什么意思？</h3><p>答：</p><p>ACID是指数据库事务所需满足的四个特性：</p><ul><li>原子性（Atomicity），</li><li>一致性（Consistency），</li><li>隔离性（Isolation）</li><li>持久性（Durability）</li></ul><h3 id="_7-如何优化mysql查询性能" tabindex="-1"><a class="header-anchor" href="#_7-如何优化mysql查询性能" aria-hidden="true">#</a> 7, 如何优化MySQL查询性能？</h3><p>答：</p><p>可以通过以下方式优化MySQL查询性能：</p><ul><li>合理使用索引</li><li>减少全表扫描</li><li>分析查询语句和执行计划</li><li>优化数据库设计</li><li>使用合适的存储引擎等。</li></ul><h3 id="_8-如何备份和恢复mysql数据库" tabindex="-1"><a class="header-anchor" href="#_8-如何备份和恢复mysql数据库" aria-hidden="true">#</a> 8, 如何备份和恢复MySQL数据库？</h3><p>答：</p><p>可以使用mysqldump命令备份数据库 (也可以称为导出本地sql文件)，使用mysql命令或导入工具（如phpMyAdmin）恢复数据库。</p><h3 id="_9-什么是数据库锁-mysql中有哪些类型的锁" tabindex="-1"><a class="header-anchor" href="#_9-什么是数据库锁-mysql中有哪些类型的锁" aria-hidden="true">#</a> 9, 什么是数据库锁？MySQL中有哪些类型的锁？</h3><p>答：</p><p><strong>数据库锁是控制对数据库资源并发访问的机制。</strong></p><p>MySQL中有<strong>共享锁</strong>（SHARED LOCK）和<strong>排他锁</strong>（EXCLUSIVE LOCK）两种类型的锁。</p><h3 id="_10-什么是mysql慢查询-如何定位和优化慢查询" tabindex="-1"><a class="header-anchor" href="#_10-什么是mysql慢查询-如何定位和优化慢查询" aria-hidden="true">#</a> 10, 什么是MySQL慢查询？如何定位和优化慢查询？</h3><p>答：</p><p>慢查询是指执行时间较长的查询语句。</p><p>可以通过设置慢查询日志、使用EXPLAIN ( explain )命令和分析查询语句的执行计划来定位和优化慢查询。</p><h2 id="jdbc-1" tabindex="-1"><a class="header-anchor" href="#jdbc-1" aria-hidden="true">#</a> JDBC</h2><h3 id="_1-什么是jdbc" tabindex="-1"><a class="header-anchor" href="#_1-什么是jdbc" aria-hidden="true">#</a> 1, 什么是JDBC ?</h3><p>答:</p><p>JDBC（Java Database Connectivity）是一种用于Java编程语言与各种数据库之间进行<strong>连接</strong>、<strong>查询</strong>和<strong>操作</strong>的API。它提供了一套标准的接口，使得Java应用程序可以与数据库进行通信</p><h3 id="_2-如何连接-java-应用程序与数据库" tabindex="-1"><a class="header-anchor" href="#_2-如何连接-java-应用程序与数据库" aria-hidden="true">#</a> 2, 如何连接 Java 应用程序与数据库 ?</h3><p>答:</p><p>可以通过JDBC API中的DriverManager类来建立与数据库的连接。该类提供了getConnection()方法，需要传入数据库的连接URL、用户名和密码来获取连接对象。</p><p>JDBC 连接数据库执行查询语句实例代码:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Connection</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">DriverManager</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">ResultSet</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">SQLException</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Statement</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JdbcExample</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 数据库连接信息</span>\n        <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">&quot;jdbc:mysql://localhost:3306/mydatabase&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> username <span class="token operator">=</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> password <span class="token operator">=</span> <span class="token string">&quot;mypassword&quot;</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 建立数据库连接</span>\n        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">// 创建Statement对象</span>\n            <span class="token class-name">Statement</span> stmt <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token comment">// 执行查询语句</span>\n            <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">&quot;SELECT * FROM users&quot;</span><span class="token punctuation">;</span>\n            <span class="token class-name">ResultSet</span> rs <span class="token operator">=</span> stmt<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token comment">// 处理查询结果</span>\n            <span class="token keyword">while</span> <span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">int</span> id <span class="token operator">=</span> rs<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token class-name">String</span> name <span class="token operator">=</span> rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token class-name">String</span> email <span class="token operator">=</span> rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;ID: &quot;</span> <span class="token operator">+</span> id <span class="token operator">+</span> <span class="token string">&quot;, Name: &quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&quot;, Email: &quot;</span> <span class="token operator">+</span> email<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n\n            <span class="token comment">// 关闭结果集和Statement对象</span>\n            rs<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            stmt<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-jdbc中的四个基本步骤是什么" tabindex="-1"><a class="header-anchor" href="#_3-jdbc中的四个基本步骤是什么" aria-hidden="true">#</a> 3, JDBC中的四个基本步骤是什么？</h3><p>答：</p><p>JDBC的四个基本步骤是建立与数据库的连接、创建Statement或PreparedStatement对象、执行SQL语句并处理结果以及关闭连接和释放资源。</p><ol><li>建立数据库连接</li><li>创建 Statement 或 PreparedStatement 对象</li><li>执行 SQL 语句并处理结果</li><li>关闭连接和释放资源</li></ol><h3 id="_4-statement和preparedstatement的区别是什么" tabindex="-1"><a class="header-anchor" href="#_4-statement和preparedstatement的区别是什么" aria-hidden="true">#</a> 4, Statement和PreparedStatement的区别是什么？</h3><p>答：</p><p>Statement 用于执行<strong>静态</strong>SQL语句，它的参数值在每次执行时都要提供。PreparedStatement用于执行<strong>动态</strong>SQL语句，它可以使用占位符(?)来传入参数值。</p><h3 id="_5-jdbc-中的事务是如何管理的" tabindex="-1"><a class="header-anchor" href="#_5-jdbc-中的事务是如何管理的" aria-hidden="true">#</a> 5, JDBC 中的事务是如何管理的 ?</h3><p>答：</p><p>JDBC中的事务可以使用 Connection 对象的 setAutoCommit() 方法设置是否自动提交事务。在事务中，可以使用commit()提交事务，使用rollback()回滚事务。</p><h3 id="_6-什么是数据库连接池-为什么要使用连接池" tabindex="-1"><a class="header-anchor" href="#_6-什么是数据库连接池-为什么要使用连接池" aria-hidden="true">#</a> 6, 什么是数据库连接池? 为什么要使用连接池 ?</h3><p>答：</p><p>数据库连接池是一种管理和分配数据库连接的技术。它可以在应用程序启动时预先创建一定数量的数据库连接，并将它们存放在连接池中，当应用程序需要连接时，从连接池中获取连接，用完后再放回连接池，以便重复使用。</p><p>使用连接池可以减少连接的创建和销毁操作，提高性能。</p><h3 id="_7-jdbc中如何处理结果集" tabindex="-1"><a class="header-anchor" href="#_7-jdbc中如何处理结果集" aria-hidden="true">#</a> 7, JDBC中如何处理结果集？</h3><p>答：</p><p>JDBC中可以使用 ResultSet 对象来<strong>处理查询结果集</strong>。通过调用ResultSet的next()方法可以<strong>遍历整个结果集</strong>，并使用getXxx()方法根据字段类型获取数据。</p><ul><li>查询</li><li>遍历</li><li>获取</li></ul><h3 id="_8-jdbc中如何执行批处理操作" tabindex="-1"><a class="header-anchor" href="#_8-jdbc中如何执行批处理操作" aria-hidden="true">#</a> 8, JDBC中如何执行批处理操作？</h3><p>答：</p><p>JDBC中可以使用Statement或PreparedStatement的addBatch()方法将多个SQL语句添加到批处理中，然后使用executeBatch()方法一次性执行批处理操作。</p><h3 id="_9-jdbc中如何处理数据库异常" tabindex="-1"><a class="header-anchor" href="#_9-jdbc中如何处理数据库异常" aria-hidden="true">#</a> 9, JDBC中如何处理数据库异常？</h3><p>答：</p><p>JDBC中可以使用try-catch语句块来捕获和处理数据库异常。常见的异常类有SQLException和DataAccessException等。</p><h3 id="_10-jdbc中如何处理大数据" tabindex="-1"><a class="header-anchor" href="#_10-jdbc中如何处理大数据" aria-hidden="true">#</a> 10, JDBC中如何处理大数据？</h3><p>答：</p><p>JDBC中可以使用BLOB和CLOB类型来处理大数据。BLOB用于存储二进制数据，CLOB用于存储字符数据。</p><p>可以使用getBinaryStream()和getCharacterStream()方法<strong>获取数据</strong>，使用setBinaryStream()和setCharacterStream()方法<strong>设置数据</strong>。可以通过流的方式来读写大数据。</p>', 708);
const _hoisted_709 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache) {
  return openBlock(), createElementBlock("div", null, _hoisted_709);
}
const JavaWeb_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "Java-Web.html.vue"]]);
export {
  JavaWeb_html as default
};
